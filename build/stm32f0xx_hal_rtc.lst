ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0xx_hal_rtc.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_RTC_MspInit,"ax",%progbits
  16              		.align	1
  17              		.weak	HAL_RTC_MspInit
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	HAL_RTC_MspInit:
  24              	.LFB37:
  25              		.file 1 "Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c"
   1:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @file    stm32f0xx_hal_rtc.c
   4:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @brief   RTC HAL module driver.
   6:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *          functionalities of the Real Time Clock (RTC) peripheral:
   8:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *           + RTC Time and Date functions
  10:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *           + RTC Alarm functions
  11:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *           + Peripheral Control functions   
  12:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *           + Peripheral State functions
  13:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *         
  14:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   @verbatim
  15:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   ==============================================================================
  16:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****                   ##### How to use RTC Driver #####
  17:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****  ===================================================================
  18:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     [..] 
  19:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         (+) Enable the RTC domain access (see description in the section above).
  20:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         (+) Configure the RTC Prescaler (Asynchronous and Synchronous) and RTC hour 
  21:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****             format using the HAL_RTC_Init() function.
  22:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
  23:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     *** Time and Date configuration ***
  24:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     ===================================
  25:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     [..] 
  26:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         (+) To configure the RTC Calendar (Time and Date) use the HAL_RTC_SetTime() 
  27:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****             and HAL_RTC_SetDate() functions.
  28:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         (+) To read the RTC Calendar, use the HAL_RTC_GetTime() and HAL_RTC_GetDate() functions. 
  29:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
  30:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     *** Alarm configuration ***
  31:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     ===========================
  32:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     [..]
  33:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     (+) To configure the RTC Alarm use the HAL_RTC_SetAlarm() function.
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 2


  34:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****             You can also configure the RTC Alarm with interrupt mode using the 
  35:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****             HAL_RTC_SetAlarm_IT() function.
  36:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         (+) To read the RTC Alarm, use the HAL_RTC_GetAlarm() function.
  37:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
  38:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****                   ##### RTC and low power modes #####
  39:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****  ===================================================================
  40:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     [..] The MCU can be woken up from a low power mode by an RTC alternate 
  41:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****          function.
  42:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     [..] The RTC alternate functions are the RTC alarm (Alarm A), 
  43:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****          RTC wake-up, RTC tamper event detection and RTC time stamp event detection.
  44:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****          These RTC alternate functions can wake up the system from the Stop and 
  45:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****          Standby low power modes.
  46:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     [..] The system can also wake up from low power modes without depending 
  47:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****          on an external interrupt (Auto-wake-up mode), by using the RTC alarm 
  48:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****          or the RTC wake-up events.
  49:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     [..] The RTC provides a programmable time base for waking up from the 
  50:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****          Stop or Standby mode at regular intervals.
  51:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****          Wake-up from STOP and STANDBY modes is possible only when the RTC clock source
  52:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****          is LSE or LSI.
  53:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****      
  54:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   @endverbatim
  55:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   ******************************************************************************
  56:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @attention
  57:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *
  58:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  59:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *
  60:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * Redistribution and use in source and binary forms, with or without modification,
  61:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * are permitted provided that the following conditions are met:
  62:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  63:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *      this list of conditions and the following disclaimer.
  64:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  65:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *      this list of conditions and the following disclaimer in the documentation
  66:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *      and/or other materials provided with the distribution.
  67:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  68:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *      may be used to endorse or promote products derived from this software
  69:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *      without specific prior written permission.
  70:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *
  71:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  72:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  73:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  74:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  75:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  76:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  77:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  78:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  79:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  80:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  81:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *
  82:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   ******************************************************************************  
  83:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   */
  84:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
  85:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** /* Includes ------------------------------------------------------------------*/
  86:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** #include "stm32f0xx_hal.h"
  87:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
  88:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** /** @addtogroup STM32F0xx_HAL_Driver
  89:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @{
  90:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   */
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 3


  91:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
  92:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** /** @addtogroup RTC
  93:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @brief RTC HAL module driver
  94:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @{
  95:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   */
  96:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
  97:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** #ifdef HAL_RTC_MODULE_ENABLED
  98:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
  99:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** /* Private typedef -----------------------------------------------------------*/
 100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** /* Private define ------------------------------------------------------------*/
 101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** /* Private macro -------------------------------------------------------------*/
 102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** /* Private variables ---------------------------------------------------------*/
 103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** /* Private function prototypes -----------------------------------------------*/
 104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** /* Exported functions ---------------------------------------------------------*/
 105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** /** @addtogroup RTC_Exported_Functions
 107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @{
 108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   */
 109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** /** @addtogroup RTC_Exported_Functions_Group1
 111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****  *  @brief    Initialization and Configuration functions 
 112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****  *
 113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** @verbatim    
 114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****  ===============================================================================
 115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ##### Initialization and de-initialization functions #####
 116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****  ===============================================================================
 117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****    [..] This section provides functions allowing to initialize and configure the 
 118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****          RTC Prescaler (Synchronous and Asynchronous), RTC Hour format, disable 
 119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****          RTC registers Write protection, enter and exit the RTC initialization mode, 
 120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****          RTC registers synchronization check and reference clock detection enable.
 121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****          (#) The RTC Prescaler is programmed to generate the RTC 1Hz time base. 
 122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****              It is split into 2 programmable prescalers to minimize power consumption.
 123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****              (++) A 7-bit asynchronous prescaler and a 15-bit synchronous prescaler.
 124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****              (++) When both prescalers are used, it is recommended to configure the 
 125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****                  asynchronous prescaler to a high value to minimize power consumption.
 126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****          (#) All RTC registers are Write protected. Writing to the RTC registers
 127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****              is enabled by writing a key into the Write Protection register, RTC_WPR.
 128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****          (#) To configure the RTC Calendar, user application should enter 
 129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****              initialization mode. In this mode, the calendar counter is stopped 
 130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****              and its value can be updated. When the initialization sequence is 
 131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****              complete, the calendar restarts counting after 4 RTCCLK cycles.
 132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****          (#) To read the calendar through the shadow registers after Calendar 
 133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****              initialization, calendar update or after wake-up from low power modes 
 134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****              the software must first clear the RSF flag. The software must then 
 135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****              wait until it is set again before reading the calendar, which means 
 136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****              that the calendar registers have been correctly copied into the 
 137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****              RTC_TR and RTC_DR shadow registers.The HAL_RTC_WaitForSynchro() function 
 138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****              implements the above software sequence (RSF clear and RSF check).
 139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****  
 140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** @endverbatim
 141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @{
 142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   */
 143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** /**
 145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @brief  Initialize the RTC according to the specified parameters 
 146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *         in the RTC_InitTypeDef structure and initialize the associated handle.
 147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @param  hrtc: RTC handle
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 4


 148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @retval HAL status
 149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   */
 150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_Init(RTC_HandleTypeDef *hrtc)
 151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** {
 152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Check the RTC peripheral state */
 153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   if(hrtc == NULL)
 154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   {
 155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****      return HAL_ERROR;
 156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   }
 157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Check the parameters */
 159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   assert_param(IS_RTC_ALL_INSTANCE(hrtc->Instance));
 160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   assert_param(IS_RTC_HOUR_FORMAT(hrtc->Init.HourFormat));
 161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   assert_param(IS_RTC_ASYNCH_PREDIV(hrtc->Init.AsynchPrediv));
 162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   assert_param(IS_RTC_SYNCH_PREDIV(hrtc->Init.SynchPrediv));
 163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   assert_param(IS_RTC_OUTPUT(hrtc->Init.OutPut));
 164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   assert_param(IS_RTC_OUTPUT_POL(hrtc->Init.OutPutPolarity));
 165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   assert_param(IS_RTC_OUTPUT_TYPE(hrtc->Init.OutPutType));
 166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   if(hrtc->State == HAL_RTC_STATE_RESET)
 168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   {
 169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     /* Allocate lock resource and initialize it */
 170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     hrtc->Lock = HAL_UNLOCKED;
 171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     /* Initialize RTC MSP */
 173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     HAL_RTC_MspInit(hrtc);
 174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   }
 175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Set RTC state */  
 177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;  
 178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****        
 179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
 180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Set Initialization mode */
 183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   if(RTC_EnterInitMode(hrtc) != HAL_OK)
 184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   {
 185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     /* Enable the write protection for RTC registers */
 186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc); 
 187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     /* Set RTC state */
 189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
 190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     return HAL_ERROR;
 192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   } 
 193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   else
 194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   { 
 195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     /* Clear RTC_CR FMT, OSEL and POL Bits */
 196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     hrtc->Instance->CR &= ((uint32_t)~(RTC_CR_FMT | RTC_CR_OSEL | RTC_CR_POL));
 197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     /* Set RTC_CR register */
 198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     hrtc->Instance->CR |= (uint32_t)(hrtc->Init.HourFormat | hrtc->Init.OutPut | hrtc->Init.OutPutP
 199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     /* Configure the RTC PRER */
 201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     hrtc->Instance->PRER = (uint32_t)(hrtc->Init.SynchPrediv);
 202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     hrtc->Instance->PRER |= (uint32_t)(hrtc->Init.AsynchPrediv << 16U);
 203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     /* Exit Initialization mode */
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 5


 205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     hrtc->Instance->ISR &= (uint32_t)~RTC_ISR_INIT; 
 206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     /* If  CR_BYPSHAD bit = 0, wait for synchro else this check is not needed */
 208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     if((hrtc->Instance->CR & RTC_CR_BYPSHAD) == RESET)
 209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     {
 210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       if(HAL_RTC_WaitForSynchro(hrtc) != HAL_OK)
 211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       {
 212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
 213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_ERROR;
 216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         return HAL_ERROR;
 218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       }
 219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     }
 220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     hrtc->Instance->TAFCR &= (uint32_t)~RTC_TAFCR_ALARMOUTTYPE;
 222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     hrtc->Instance->TAFCR |= (uint32_t)(hrtc->Init.OutPutType); 
 223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     /* Enable the write protection for RTC registers */
 225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc); 
 226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     /* Set RTC state */
 228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_READY;
 229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     return HAL_OK;
 231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   }
 232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** }
 233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** /**
 235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @brief  DeInitialize the RTC peripheral.
 236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @param  hrtc: RTC handle
 237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @note   This function doesn't reset the RTC Backup Data registers.
 238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @retval HAL status
 239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   */
 240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_DeInit(RTC_HandleTypeDef *hrtc)
 241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** {
 242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** #if defined (STM32F030xC) || defined (STM32F070xB) || \
 243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     defined (STM32F071xB) || defined (STM32F072xB) || defined (STM32F078xx) || \
 244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     defined (STM32F091xC) || defined (STM32F098xx)
 245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   uint32_t tickstart = 0;
 246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** #endif /* defined (STM32F030xC) || defined (STM32F070xB) ||\
 247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****           defined (STM32F071xB) || defined (STM32F072xB) || defined (STM32F078xx) || \
 248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****           defined (STM32F091xC) || defined (STM32F098xx) ||*/
 249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Check the parameters */
 251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   assert_param(IS_RTC_ALL_INSTANCE(hrtc->Instance));
 252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Set RTC state */
 254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY; 
 255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
 257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Set Initialization mode */
 260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   if(RTC_EnterInitMode(hrtc) != HAL_OK)
 261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   {
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 6


 262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     /* Enable the write protection for RTC registers */
 263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc); 
 264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     /* Set RTC state */
 266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
 267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     return HAL_ERROR;
 269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   }  
 270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   else
 271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   {
 272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     /* Reset TR, DR and CR registers */
 273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     hrtc->Instance->TR = 0x00000000U;
 274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     hrtc->Instance->DR = 0x00002101U;
 275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** #if defined (STM32F030xC) || defined (STM32F070xB) || \
 277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     defined (STM32F071xB) || defined (STM32F072xB) || defined (STM32F078xx) || \
 278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     defined (STM32F091xC) || defined (STM32F098xx)    
 279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     /* Reset All CR bits except CR[2:0] */
 280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     hrtc->Instance->CR &= 0x00000007U;
 281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     tickstart = HAL_GetTick();
 283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     /* Wait till WUTWF flag is set and if Time out is reached exit */
 285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     while(((hrtc->Instance->ISR) & RTC_ISR_WUTWF) == (uint32_t)RESET)
 286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     {
 287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       if((HAL_GetTick() - tickstart ) >  RTC_TIMEOUT_VALUE)
 288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       { 
 289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
 290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc); 
 291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         
 292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         /* Set RTC state */
 293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         
 295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         return HAL_TIMEOUT;
 296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       } 
 297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     }
 298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** #endif /* defined (STM32F030xC) || defined (STM32F070xB) ||\
 299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****           defined (STM32F071xB) || defined (STM32F072xB) || defined (STM32F078xx) || \
 300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****           defined (STM32F091xC) || defined (STM32F098xx) ||*/
 301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****           
 302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     /* Reset all RTC CR register bits */
 303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     hrtc->Instance->CR &= 0x00000000U;
 304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** #if defined (STM32F030xC) || defined (STM32F070xB) || \
 305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     defined (STM32F071xB) || defined (STM32F072xB) || defined (STM32F078xx) || \
 306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     defined (STM32F091xC) || defined (STM32F098xx)    
 307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     hrtc->Instance->WUTR = 0x0000FFFFU;
 308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** #endif /* defined (STM32F030xC) || defined (STM32F070xB) ||\
 309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****           defined (STM32F071xB) || defined (STM32F072xB) || defined (STM32F078xx) || \
 310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****           defined (STM32F091xC) || defined (STM32F098xx) ||*/    
 311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     hrtc->Instance->PRER = 0x007F00FFU;
 312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     hrtc->Instance->ALRMAR = 0x00000000U;        
 313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     hrtc->Instance->SHIFTR = 0x00000000U;
 314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     hrtc->Instance->CALR = 0x00000000U;
 315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     hrtc->Instance->ALRMASSR = 0x00000000U;
 316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     /* Reset ISR register and exit initialization mode */
 318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     hrtc->Instance->ISR = 0x00000000U;
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 7


 319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     /* Reset Tamper and alternate functions configuration register */
 321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     hrtc->Instance->TAFCR = 0x00000000;
 322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     /* If  RTC_CR_BYPSHAD bit = 0, wait for synchro else this check is not needed */
 324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     if((hrtc->Instance->CR & RTC_CR_BYPSHAD) == RESET)
 325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     {
 326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       if(HAL_RTC_WaitForSynchro(hrtc) != HAL_OK)
 327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       {
 328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
 329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);  
 330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         
 331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_ERROR;
 332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         
 333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         return HAL_ERROR;
 334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       }
 335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     }    
 336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   }
 337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Enable the write protection for RTC registers */
 339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* De-Initialize RTC MSP */
 342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   HAL_RTC_MspDeInit(hrtc);
 343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_RESET; 
 345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Release Lock */
 347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);
 348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   return HAL_OK;
 350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** }
 351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** /**
 353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @brief  Initialize the RTC MSP.
 354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @param  hrtc: RTC handle  
 355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @retval None
 356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   */
 357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** __weak void HAL_RTC_MspInit(RTC_HandleTypeDef* hrtc)
 358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** {
  26              		.loc 1 358 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
 359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
 360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   UNUSED(hrtc);
 361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****             the HAL_RTC_MspInit could be implemented in the user file
 364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****    */ 
 365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** }
  32              		.loc 1 365 0
  33              		@ sp needed
  34 0000 7047     		bx	lr
  35              		.cfi_endproc
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 8


  36              	.LFE37:
  38              		.section	.text.HAL_RTC_MspDeInit,"ax",%progbits
  39              		.align	1
  40              		.weak	HAL_RTC_MspDeInit
  41              		.syntax unified
  42              		.code	16
  43              		.thumb_func
  44              		.fpu softvfp
  46              	HAL_RTC_MspDeInit:
  47              	.LFB38:
 366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** /**
 368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @brief  DeInitialize the RTC MSP.
 369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @param  hrtc: RTC handle 
 370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @retval None
 371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   */
 372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** __weak void HAL_RTC_MspDeInit(RTC_HandleTypeDef* hrtc)
 373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** {
  48              		.loc 1 373 0
  49              		.cfi_startproc
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              		@ link register save eliminated.
  53              	.LVL1:
 374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
 375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   UNUSED(hrtc);
 376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****             the HAL_RTC_MspDeInit could be implemented in the user file
 379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****    */ 
 380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** }
  54              		.loc 1 380 0
  55              		@ sp needed
  56 0000 7047     		bx	lr
  57              		.cfi_endproc
  58              	.LFE38:
  60              		.section	.text.HAL_RTC_DeactivateAlarm,"ax",%progbits
  61              		.align	1
  62              		.global	HAL_RTC_DeactivateAlarm
  63              		.syntax unified
  64              		.code	16
  65              		.thumb_func
  66              		.fpu softvfp
  68              	HAL_RTC_DeactivateAlarm:
  69              	.LFB45:
 381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** /**
 383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @}
 384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   */
 385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** /** @addtogroup RTC_Exported_Functions_Group2
 387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****  *  @brief   RTC Time and Date functions
 388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****  *
 389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** @verbatim   
 390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****  ===============================================================================
 391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****                  ##### RTC Time and Date functions #####
 392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****  ===============================================================================  
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 9


 393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****  
 394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****  [..] This section provides functions allowing to configure Time and Date features
 395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** @endverbatim
 397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @{
 398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   */
 399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** /**
 401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @brief  Set RTC current time.
 402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @param  hrtc: RTC handle
 403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @param  sTime: Pointer to Time structure
 404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @param  Format: Specifies the format of the entered parameters.
 405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BIN: Binary data format 
 407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BCD: BCD data format
 408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @retval HAL status
 409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   */
 410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetTime(RTC_HandleTypeDef *hrtc, RTC_TimeTypeDef *sTime, uint32_t Format)
 411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** {
 412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   uint32_t tmpreg = 0U;
 413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****  /* Check the parameters */
 415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
 416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   assert_param(IS_RTC_DAYLIGHT_SAVING(sTime->DayLightSaving));
 417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   assert_param(IS_RTC_STORE_OPERATION(sTime->StoreOperation));
 418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Process Locked */ 
 420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
 421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   if(Format == RTC_FORMAT_BIN)
 425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   {
 426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     if((hrtc->Instance->CR & RTC_CR_FMT) != (uint32_t)RESET)
 427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     {
 428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR12(sTime->Hours));
 429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       assert_param(IS_RTC_HOURFORMAT12(sTime->TimeFormat));
 430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     } 
 431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     else
 432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     {
 433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       sTime->TimeFormat = 0x00U;
 434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(sTime->Hours));
 435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     }
 436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(sTime->Minutes));
 437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(sTime->Seconds));
 438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     tmpreg = (uint32_t)(((uint32_t)RTC_ByteToBcd2(sTime->Hours) << 16U) | \
 440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****                         ((uint32_t)RTC_ByteToBcd2(sTime->Minutes) << 8U) | \
 441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****                         ((uint32_t)RTC_ByteToBcd2(sTime->Seconds)) | \
 442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****                         (((uint32_t)sTime->TimeFormat) << 16U));  
 443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   }
 444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   else
 445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   {
 446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     if((hrtc->Instance->CR & RTC_CR_FMT) != (uint32_t)RESET)
 447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     {
 448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       tmpreg = RTC_Bcd2ToByte(sTime->Hours);
 449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR12(tmpreg));
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 10


 450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       assert_param(IS_RTC_HOURFORMAT12(sTime->TimeFormat)); 
 451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     } 
 452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     else
 453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     {
 454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       sTime->TimeFormat = 0x00U;
 455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sTime->Hours)));
 456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     }
 457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(sTime->Minutes)));
 458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(sTime->Seconds)));
 459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     tmpreg = (((uint32_t)(sTime->Hours) << 16U) | \
 460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)(sTime->Minutes) << 8U) | \
 461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)sTime->Seconds) | \
 462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)(sTime->TimeFormat) << 16U));   
 463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   }
 464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
 466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Set Initialization mode */
 469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   if(RTC_EnterInitMode(hrtc) != HAL_OK)
 470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   {
 471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     /* Enable the write protection for RTC registers */
 472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc); 
 473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     /* Set RTC state */
 475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
 476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     /* Process Unlocked */ 
 478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     __HAL_UNLOCK(hrtc);
 479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     return HAL_ERROR;
 481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   } 
 482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   else
 483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   {
 484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     /* Set the RTC_TR register */
 485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     hrtc->Instance->TR = (uint32_t)(tmpreg & RTC_TR_RESERVED_MASK);
 486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****      
 487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     /* Clear the bits to be configured */
 488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     hrtc->Instance->CR &= ((uint32_t)~RTC_CR_BKP);
 489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     /* Configure the RTC_CR register */
 491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     hrtc->Instance->CR |= (uint32_t)(sTime->DayLightSaving | sTime->StoreOperation);
 492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     /* Exit Initialization mode */
 494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     hrtc->Instance->ISR &= ((uint32_t)~RTC_ISR_INIT);
 495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     /* If  CR_BYPSHAD bit = 0, wait for synchro else this check is not needed */
 497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     if((hrtc->Instance->CR & RTC_CR_BYPSHAD) == RESET)
 498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     {
 499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       if(HAL_RTC_WaitForSynchro(hrtc) != HAL_OK)
 500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       {        
 501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
 502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);  
 503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         
 504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_ERROR;
 505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         
 506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         /* Process Unlocked */ 
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 11


 507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
 508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         
 509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         return HAL_ERROR;
 510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       }
 511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     }
 512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     /* Enable the write protection for RTC registers */
 514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****    hrtc->State = HAL_RTC_STATE_READY;
 517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****    __HAL_UNLOCK(hrtc); 
 519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****      
 520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****    return HAL_OK;
 521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   }
 522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** }
 523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** /**
 525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @brief  Get RTC current time.
 526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @param  hrtc: RTC handle
 527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @param  sTime: Pointer to Time structure with Hours, Minutes and Seconds fields returned 
 528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *                with input format (BIN or BCD), also SubSeconds field returning the
 529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *                RTC_SSR register content and SecondFraction field the Synchronous pre-scaler
 530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *                factor to be used for second fraction ratio computation.
 531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @param  Format: Specifies the format of the entered parameters.
 532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BIN: Binary data format 
 534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BCD: BCD data format
 535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @note  You can use SubSeconds and SecondFraction (sTime structure fields returned) to convert S
 536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *        value in second fraction ratio with time unit following generic formula:
 537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *        Second fraction ratio * time_unit= [(SecondFraction-SubSeconds)/(SecondFraction+1)] * ti
 538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *        This conversion can be performed only if no shift operation is pending (ie. SHFP=0) when
 539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @note You must call HAL_RTC_GetDate() after HAL_RTC_GetTime() to unlock the values 
 540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * in the higher-order calendar shadow registers to ensure consistency between the time and date v
 541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * Reading RTC current time locks the values in calendar shadow registers until Current date is re
 542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * to ensure consistency between the time and date values.
 543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @retval HAL status
 544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   */
 545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_GetTime(RTC_HandleTypeDef *hrtc, RTC_TimeTypeDef *sTime, uint32_t Format)
 546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** {
 547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   uint32_t tmpreg = 0;
 548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Check the parameters */
 550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
 551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Get subseconds structure field from the corresponding register*/
 553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   sTime->SubSeconds = (uint32_t)(hrtc->Instance->SSR);
 554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Get SecondFraction structure field from the corresponding register field*/
 556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   sTime->SecondFraction = (uint32_t)(hrtc->Instance->PRER & RTC_PRER_PREDIV_S);
 557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Get the TR register */
 559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   tmpreg = (uint32_t)(hrtc->Instance->TR & RTC_TR_RESERVED_MASK); 
 560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Fill the structure fields with the read parameters */
 562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   sTime->Hours = (uint8_t)((tmpreg & (RTC_TR_HT | RTC_TR_HU)) >> 16U);
 563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   sTime->Minutes = (uint8_t)((tmpreg & (RTC_TR_MNT | RTC_TR_MNU)) >>8U);
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 12


 564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   sTime->Seconds = (uint8_t)(tmpreg & (RTC_TR_ST | RTC_TR_SU));
 565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   sTime->TimeFormat = (uint8_t)((tmpreg & (RTC_TR_PM)) >> 16U); 
 566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Check the input parameters format */
 568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   if(Format == RTC_FORMAT_BIN)
 569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   {
 570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     /* Convert the time structure parameters to Binary format */
 571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     sTime->Hours = (uint8_t)RTC_Bcd2ToByte(sTime->Hours);
 572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     sTime->Minutes = (uint8_t)RTC_Bcd2ToByte(sTime->Minutes);
 573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     sTime->Seconds = (uint8_t)RTC_Bcd2ToByte(sTime->Seconds);  
 574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   }
 575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   return HAL_OK;
 577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** }
 578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** /**
 580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @brief  Set RTC current date.
 581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @param  hrtc: RTC handle
 582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @param  sDate: Pointer to date structure
 583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @param  Format: specifies the format of the entered parameters.
 584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BIN: Binary data format 
 586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BCD: BCD data format
 587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @retval HAL status
 588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   */
 589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetDate(RTC_HandleTypeDef *hrtc, RTC_DateTypeDef *sDate, uint32_t Format)
 590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** {
 591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   uint32_t datetmpreg = 0U;
 592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****  /* Check the parameters */
 594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
 595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****  /* Process Locked */ 
 597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****  __HAL_LOCK(hrtc);
 598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY; 
 600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   if((Format == RTC_FORMAT_BIN) && ((sDate->Month & 0x10U) == 0x10U))
 602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   {
 603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     sDate->Month = (uint8_t)((sDate->Month & (uint8_t)~(0x10U)) + (uint8_t)0x0AU);
 604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   }
 605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   assert_param(IS_RTC_WEEKDAY(sDate->WeekDay));
 607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   if(Format == RTC_FORMAT_BIN)
 609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   {   
 610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     assert_param(IS_RTC_YEAR(sDate->Year));
 611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     assert_param(IS_RTC_MONTH(sDate->Month));
 612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     assert_param(IS_RTC_DATE(sDate->Date)); 
 613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****    datetmpreg = (((uint32_t)RTC_ByteToBcd2(sDate->Year) << 16U) | \
 615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****                  ((uint32_t)RTC_ByteToBcd2(sDate->Month) << 8U) | \
 616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****                  ((uint32_t)RTC_ByteToBcd2(sDate->Date)) | \
 617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****                  ((uint32_t)sDate->WeekDay << 13U));   
 618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   }
 619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   else
 620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   {   
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 13


 621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     assert_param(IS_RTC_YEAR(RTC_Bcd2ToByte(sDate->Year)));
 622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     datetmpreg = RTC_Bcd2ToByte(sDate->Month);
 623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     assert_param(IS_RTC_MONTH(datetmpreg));
 624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     datetmpreg = RTC_Bcd2ToByte(sDate->Date);
 625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     assert_param(IS_RTC_DATE(datetmpreg));
 626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     datetmpreg = ((((uint32_t)sDate->Year) << 16U) | \
 628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****                   (((uint32_t)sDate->Month) << 8U) | \
 629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****                   ((uint32_t)sDate->Date) | \
 630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****                   (((uint32_t)sDate->WeekDay) << 13U));  
 631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   }
 632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
 634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Set Initialization mode */
 637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   if(RTC_EnterInitMode(hrtc) != HAL_OK)
 638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   {
 639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     /* Enable the write protection for RTC registers */
 640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc); 
 641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     /* Set RTC state*/
 643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
 644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     /* Process Unlocked */ 
 646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     __HAL_UNLOCK(hrtc);
 647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     return HAL_ERROR;
 649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   } 
 650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   else
 651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   {
 652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     /* Set the RTC_DR register */
 653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     hrtc->Instance->DR = (uint32_t)(datetmpreg & RTC_DR_RESERVED_MASK);
 654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     /* Exit Initialization mode */
 656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     hrtc->Instance->ISR &= ((uint32_t)~RTC_ISR_INIT);
 657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     /* If  CR_BYPSHAD bit = 0, wait for synchro else this check is not needed */
 659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     if((hrtc->Instance->CR & RTC_CR_BYPSHAD) == RESET)
 660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     {
 661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       if(HAL_RTC_WaitForSynchro(hrtc) != HAL_OK)
 662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       { 
 663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
 664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);  
 665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         
 666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_ERROR;
 667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         
 668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         /* Process Unlocked */ 
 669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
 670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         
 671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         return HAL_ERROR;
 672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       }
 673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     }
 674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     /* Enable the write protection for RTC registers */
 676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);  
 677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 14


 678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_READY ;
 679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     /* Process Unlocked */ 
 681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     __HAL_UNLOCK(hrtc);
 682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     return HAL_OK;    
 684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   }
 685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** }
 686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** /**
 688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @brief  Get RTC current date.
 689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @param  hrtc: RTC handle
 690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @param  sDate: Pointer to Date structure
 691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @param  Format: Specifies the format of the entered parameters.
 692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BIN :  Binary data format 
 694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BCD :  BCD data format
 695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @note You must call HAL_RTC_GetDate() after HAL_RTC_GetTime() to unlock the values 
 696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * in the higher-order calendar shadow registers to ensure consistency between the time and date v
 697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * Reading RTC current time locks the values in calendar shadow registers until Current date is re
 698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @retval HAL status
 699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   */
 700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_GetDate(RTC_HandleTypeDef *hrtc, RTC_DateTypeDef *sDate, uint32_t Format)
 701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** {
 702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   uint32_t datetmpreg = 0;
 703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Check the parameters */
 705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
 706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****           
 707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Get the DR register */
 708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   datetmpreg = (uint32_t)(hrtc->Instance->DR & RTC_DR_RESERVED_MASK); 
 709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Fill the structure fields with the read parameters */
 711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   sDate->Year = (uint8_t)((datetmpreg & (RTC_DR_YT | RTC_DR_YU)) >> 16U);
 712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   sDate->Month = (uint8_t)((datetmpreg & (RTC_DR_MT | RTC_DR_MU)) >> 8U);
 713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   sDate->Date = (uint8_t)(datetmpreg & (RTC_DR_DT | RTC_DR_DU));
 714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   sDate->WeekDay = (uint8_t)((datetmpreg & (RTC_DR_WDU)) >> 13U); 
 715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Check the input parameters format */
 717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   if(Format == RTC_FORMAT_BIN)
 718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   {    
 719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     /* Convert the date structure parameters to Binary format */
 720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     sDate->Year = (uint8_t)RTC_Bcd2ToByte(sDate->Year);
 721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     sDate->Month = (uint8_t)RTC_Bcd2ToByte(sDate->Month);
 722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     sDate->Date = (uint8_t)RTC_Bcd2ToByte(sDate->Date);  
 723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   }
 724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   return HAL_OK;
 725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** }
 726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** /**
 728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @}
 729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   */
 730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** /** @addtogroup RTC_Exported_Functions_Group3
 732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****  *  @brief   RTC Alarm functions
 733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****  *
 734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** @verbatim   
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 15


 735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****  ===============================================================================
 736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****                  ##### RTC Alarm functions #####
 737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****  ===============================================================================  
 738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****  
 739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****  [..] This section provides functions allowing to configure Alarm feature
 740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** @endverbatim
 742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @{
 743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   */
 744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** /**
 745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @brief  Set the specified RTC Alarm.
 746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @param  hrtc: RTC handle
 747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @param  sAlarm: Pointer to Alarm structure
 748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @param  Format: Specifies the format of the entered parameters.
 749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BIN: Binary data format 
 751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BCD: BCD data format
 752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @retval HAL status
 753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   */
 754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetAlarm(RTC_HandleTypeDef *hrtc, RTC_AlarmTypeDef *sAlarm, uint32_t Form
 755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** {
 756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   uint32_t tickstart = 0U;
 757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   uint32_t tmpreg = 0U, subsecondtmpreg = 0U;
 758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Check the parameters */
 760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
 761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM(sAlarm->Alarm));
 762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_MASK(sAlarm->AlarmMask));
 763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_DATE_WEEKDAY_SEL(sAlarm->AlarmDateWeekDaySel));
 764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_SUB_SECOND_VALUE(sAlarm->AlarmTime.SubSeconds));
 765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_SUB_SECOND_MASK(sAlarm->AlarmSubSecondMask));
 766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Process Locked */ 
 768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
 769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   if(Format == RTC_FORMAT_BIN)
 773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   {
 774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     if((hrtc->Instance->CR & RTC_CR_FMT) != (uint32_t)RESET)
 775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     {
 776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR12(sAlarm->AlarmTime.Hours));
 777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       assert_param(IS_RTC_HOURFORMAT12(sAlarm->AlarmTime.TimeFormat));
 778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     } 
 779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     else
 780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     {
 781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       sAlarm->AlarmTime.TimeFormat = 0x00U;
 782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(sAlarm->AlarmTime.Hours));
 783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     }
 784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(sAlarm->AlarmTime.Minutes));
 785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(sAlarm->AlarmTime.Seconds));
 786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     if(sAlarm->AlarmDateWeekDaySel == RTC_ALARMDATEWEEKDAYSEL_DATE)
 788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     {
 789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(sAlarm->AlarmDateWeekDay));
 790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     }
 791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     else
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 16


 792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     {
 793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(sAlarm->AlarmDateWeekDay));
 794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     }
 795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     tmpreg = (((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Hours) << 16U) | \
 797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << 8U) | \
 798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds)) | \
 799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmDateWeekDay) << 24U) | \
 801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmMask)); 
 803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   }
 804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   else
 805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   {
 806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     if((hrtc->Instance->CR & RTC_CR_FMT) != (uint32_t)RESET)
 807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     {
 808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       tmpreg = RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours);
 809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR12(tmpreg));
 810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       assert_param(IS_RTC_HOURFORMAT12(sAlarm->AlarmTime.TimeFormat));
 811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     } 
 812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     else
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     {
 814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       sAlarm->AlarmTime.TimeFormat = 0x00U;
 815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
 816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     }
 817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)));
 819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds)));
 820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     if(sAlarm->AlarmDateWeekDaySel == RTC_ALARMDATEWEEKDAYSEL_DATE)
 822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     {
 823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       tmpreg = RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay);
 824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(tmpreg));    
 825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     }
 826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     else
 827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     {
 828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       tmpreg = RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay);
 829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(tmpreg));      
 830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     }  
 831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     tmpreg = (((uint32_t)(sAlarm->AlarmTime.Hours) << 16U) | \
 833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << 8U) | \
 834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t) sAlarm->AlarmTime.Seconds) | \
 835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmDateWeekDay) << 24U) | \
 837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmMask));   
 839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   }
 840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Configure the Alarm A Sub Second registers */
 842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   subsecondtmpreg = (uint32_t)((uint32_t)(sAlarm->AlarmTime.SubSeconds) | (uint32_t)(sAlarm->AlarmS
 843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
 845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Disable the Alarm A interrupt */
 848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   __HAL_RTC_ALARMA_DISABLE(hrtc);
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 17


 849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* In case of interrupt mode is used, the interrupt source must disabled */ 
 851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   __HAL_RTC_ALARM_DISABLE_IT(hrtc, RTC_IT_ALRA);
 852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****          
 853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   tickstart = HAL_GetTick();
 854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Wait till RTC ALRAWF flag is set and if Time out is reached exit */
 855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   while(__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRAWF) == RESET)
 856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   {
 857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     if((HAL_GetTick()-tickstart) > RTC_TIMEOUT_VALUE)
 858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     {
 859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       /* Enable the write protection for RTC registers */
 860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       hrtc->State = HAL_RTC_STATE_TIMEOUT; 
 863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       /* Process Unlocked */ 
 865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       __HAL_UNLOCK(hrtc);
 866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         
 867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       return HAL_TIMEOUT;
 868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     }
 869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   }
 870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   hrtc->Instance->ALRMAR = (uint32_t)tmpreg;
 872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Configure the Alarm A Sub Second register */
 873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   hrtc->Instance->ALRMASSR = subsecondtmpreg;
 874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Configure the Alarm state: Enable Alarm */
 875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   __HAL_RTC_ALARMA_ENABLE(hrtc);
 876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Enable the write protection for RTC registers */
 878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);   
 879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Change RTC state */
 881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY; 
 882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Process Unlocked */ 
 884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);
 885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   return HAL_OK;
 887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** }
 888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** /**
 890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @brief  Set the specified RTC Alarm with Interrupt.
 891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @param  hrtc: RTC handle
 892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @param  sAlarm: Pointer to Alarm structure
 893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @param  Format: Specifies the format of the entered parameters.
 894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BIN: Binary data format 
 896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BCD: BCD data format
 897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @note   The Alarm register can only be written when the corresponding Alarm
 898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *         is disabled (Use the HAL_RTC_DeactivateAlarm()).   
 899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @note   The HAL_RTC_SetTime() must be called before enabling the Alarm feature.   
 900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @retval HAL status
 901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   */
 902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetAlarm_IT(RTC_HandleTypeDef *hrtc, RTC_AlarmTypeDef *sAlarm, uint32_t F
 903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** {
 904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   uint32_t tickstart = 0U;
 905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   uint32_t tmpreg = 0U, subsecondtmpreg = 0U;
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 18


 906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Check the parameters */
 908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
 909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM(sAlarm->Alarm));
 910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_MASK(sAlarm->AlarmMask));
 911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_DATE_WEEKDAY_SEL(sAlarm->AlarmDateWeekDaySel));
 912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_SUB_SECOND_VALUE(sAlarm->AlarmTime.SubSeconds));
 913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_SUB_SECOND_MASK(sAlarm->AlarmSubSecondMask));
 914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       
 915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Process Locked */ 
 916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
 917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   if(Format == RTC_FORMAT_BIN)
 921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   {
 922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     if((hrtc->Instance->CR & RTC_CR_FMT) != (uint32_t)RESET)
 923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     {
 924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR12(sAlarm->AlarmTime.Hours));
 925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       assert_param(IS_RTC_HOURFORMAT12(sAlarm->AlarmTime.TimeFormat));
 926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     } 
 927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     else
 928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     {
 929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       sAlarm->AlarmTime.TimeFormat = 0x00U;
 930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(sAlarm->AlarmTime.Hours));
 931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     }
 932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(sAlarm->AlarmTime.Minutes));
 933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(sAlarm->AlarmTime.Seconds));
 934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     if(sAlarm->AlarmDateWeekDaySel == RTC_ALARMDATEWEEKDAYSEL_DATE)
 936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     {
 937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(sAlarm->AlarmDateWeekDay));
 938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     }
 939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     else
 940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     {
 941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(sAlarm->AlarmDateWeekDay));
 942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     }
 943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     tmpreg = (((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Hours) << 16U) | \
 944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << 8U) | \
 945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds)) | \
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmDateWeekDay) << 24U) | \
 948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmMask)); 
 950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   }
 951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   else
 952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   {
 953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     if((hrtc->Instance->CR & RTC_CR_FMT) != (uint32_t)RESET)
 954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     {
 955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       tmpreg = RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours);
 956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR12(tmpreg));
 957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       assert_param(IS_RTC_HOURFORMAT12(sAlarm->AlarmTime.TimeFormat));
 958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     } 
 959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     else
 960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     {
 961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       sAlarm->AlarmTime.TimeFormat = 0x00U;
 962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 19


 963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     }
 964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)));
 966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds)));
 967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     if(sAlarm->AlarmDateWeekDaySel == RTC_ALARMDATEWEEKDAYSEL_DATE)
 969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     {
 970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       tmpreg = RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay);
 971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(tmpreg));    
 972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     }
 973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     else
 974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     {
 975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       tmpreg = RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay);
 976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(tmpreg));      
 977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     }
 978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     tmpreg = (((uint32_t)(sAlarm->AlarmTime.Hours) << 16U) | \
 979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << 8U) | \
 980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t) sAlarm->AlarmTime.Seconds) | \
 981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmDateWeekDay) << 24U) | \
 983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmMask));     
 985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   }
 986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Configure the Alarm A Sub Second registers */
 987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   subsecondtmpreg = (uint32_t)((uint32_t)(sAlarm->AlarmTime.SubSeconds) | (uint32_t)(sAlarm->AlarmS
 988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
 990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Disable the Alarm A interrupt */
 993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   __HAL_RTC_ALARMA_DISABLE(hrtc);
 994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Clear flag alarm A */
 996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRAF);
 997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   tickstart = HAL_GetTick();
 999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
1000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Wait till RTC ALRAWF flag is set and if Time out is reached exit */
1001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   while(__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRAWF) == RESET)
1002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   {
1003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     if((HAL_GetTick()-tickstart) > RTC_TIMEOUT_VALUE)
1004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     {
1005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       /* Enable the write protection for RTC registers */
1006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         
1008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       hrtc->State = HAL_RTC_STATE_TIMEOUT; 
1009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         
1010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       /* Process Unlocked */ 
1011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       __HAL_UNLOCK(hrtc);
1012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         
1013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       return HAL_TIMEOUT;
1014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     }  
1015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   }
1016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
1017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   hrtc->Instance->ALRMAR = (uint32_t)tmpreg;
1018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Configure the Alarm A Sub Second register */
1019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   hrtc->Instance->ALRMASSR = subsecondtmpreg;
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 20


1020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Configure the Alarm state: Enable Alarm */
1021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   __HAL_RTC_ALARMA_ENABLE(hrtc);
1022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Configure the Alarm interrupt */
1023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   __HAL_RTC_ALARM_ENABLE_IT(hrtc,RTC_IT_ALRA);
1024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
1025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* RTC Alarm Interrupt Configuration: EXTI configuration */
1026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   __HAL_RTC_ALARM_EXTI_ENABLE_IT();
1027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
1028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   __HAL_RTC_ALARM_EXTI_ENABLE_RISING_EDGE();
1029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
1030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Enable the write protection for RTC registers */
1031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);  
1032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
1033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY; 
1034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
1035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Process Unlocked */ 
1036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);  
1037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
1038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   return HAL_OK;
1039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** }
1040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
1041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** /**
1042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @brief  Deactivate the specified RTC Alarm.
1043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @param  hrtc: RTC handle
1044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @param  Alarm: Specifies the Alarm.
1045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *          This parameter can be one of the following values:
1046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *            @arg RTC_ALARM_A:  AlarmA
1047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @retval HAL status
1048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   */
1049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_DeactivateAlarm(RTC_HandleTypeDef *hrtc, uint32_t Alarm)
1050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** {
  70              		.loc 1 1050 0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 0, uses_anonymous_args = 0
  74              	.LVL2:
  75 0000 70B5     		push	{r4, r5, r6, lr}
  76              	.LCFI0:
  77              		.cfi_def_cfa_offset 16
  78              		.cfi_offset 4, -16
  79              		.cfi_offset 5, -12
  80              		.cfi_offset 6, -8
  81              		.cfi_offset 14, -4
  82 0002 0400     		movs	r4, r0
  83              	.LVL3:
1051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   uint32_t tickstart = 0U;
1052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
1053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Check the parameters */
1054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM(Alarm));
1055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
1056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Process Locked */ 
1057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
  84              		.loc 1 1057 0
  85 0004 037F     		ldrb	r3, [r0, #28]
  86 0006 012B     		cmp	r3, #1
  87 0008 01D1     		bne	.L8
  88 000a 0220     		movs	r0, #2
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 21


  89              	.LVL4:
  90              	.L4:
1058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
1059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
1060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
1061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
1062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
1063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
1064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   __HAL_RTC_ALARMA_DISABLE(hrtc);
1065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
1066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* In case of interrupt mode is used, the interrupt source must disabled */ 
1067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   __HAL_RTC_ALARM_DISABLE_IT(hrtc, RTC_IT_ALRA);
1068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
1069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   tickstart = HAL_GetTick();
1070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
1071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Wait till RTC ALRxWF flag is set and if Time out is reached exit */
1072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   while(__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRAWF) == RESET)
1073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   {
1074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     if((HAL_GetTick()-tickstart) > RTC_TIMEOUT_VALUE)
1075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     { 
1076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       /* Enable the write protection for RTC registers */
1077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         
1079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       hrtc->State = HAL_RTC_STATE_TIMEOUT; 
1080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         
1081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       /* Process Unlocked */ 
1082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       __HAL_UNLOCK(hrtc);
1083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         
1084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       return HAL_TIMEOUT;
1085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     }      
1086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   }
1087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Enable the write protection for RTC registers */
1088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
1090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY; 
1091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
1092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Process Unlocked */ 
1093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);  
1094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
1095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   return HAL_OK; 
1096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** }
  91              		.loc 1 1096 0
  92              		@ sp needed
  93              	.LVL5:
  94 000c 70BD     		pop	{r4, r5, r6, pc}
  95              	.LVL6:
  96              	.L8:
1057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
  97              		.loc 1 1057 0 discriminator 2
  98 000e 0123     		movs	r3, #1
  99 0010 0377     		strb	r3, [r0, #28]
1059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 100              		.loc 1 1059 0 discriminator 2
 101 0012 0133     		adds	r3, r3, #1
 102 0014 4377     		strb	r3, [r0, #29]
1062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 103              		.loc 1 1062 0 discriminator 2
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 22


 104 0016 0368     		ldr	r3, [r0]
 105 0018 CA22     		movs	r2, #202
 106 001a 5A62     		str	r2, [r3, #36]
 107 001c 0368     		ldr	r3, [r0]
 108 001e 773A     		subs	r2, r2, #119
 109 0020 5A62     		str	r2, [r3, #36]
1064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 110              		.loc 1 1064 0 discriminator 2
 111 0022 0268     		ldr	r2, [r0]
 112 0024 9368     		ldr	r3, [r2, #8]
 113 0026 1349     		ldr	r1, .L10
 114              	.LVL7:
 115 0028 0B40     		ands	r3, r1
 116 002a 9360     		str	r3, [r2, #8]
1067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 117              		.loc 1 1067 0 discriminator 2
 118 002c 0268     		ldr	r2, [r0]
 119 002e 9368     		ldr	r3, [r2, #8]
 120 0030 1149     		ldr	r1, .L10+4
 121 0032 0B40     		ands	r3, r1
 122 0034 9360     		str	r3, [r2, #8]
1069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 123              		.loc 1 1069 0 discriminator 2
 124 0036 FFF7FEFF 		bl	HAL_GetTick
 125              	.LVL8:
 126 003a 0500     		movs	r5, r0
 127              	.LVL9:
 128              	.L5:
1072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   {
 129              		.loc 1 1072 0
 130 003c 2368     		ldr	r3, [r4]
 131 003e DA68     		ldr	r2, [r3, #12]
 132 0040 D207     		lsls	r2, r2, #31
 133 0042 0FD4     		bmi	.L9
1074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     { 
 134              		.loc 1 1074 0
 135 0044 FFF7FEFF 		bl	HAL_GetTick
 136              	.LVL10:
 137 0048 401B     		subs	r0, r0, r5
 138 004a FA23     		movs	r3, #250
 139 004c 9B00     		lsls	r3, r3, #2
 140 004e 9842     		cmp	r0, r3
 141 0050 F4D9     		bls	.L5
1077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         
 142              		.loc 1 1077 0
 143 0052 2368     		ldr	r3, [r4]
 144 0054 FF22     		movs	r2, #255
 145 0056 5A62     		str	r2, [r3, #36]
1079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         
 146              		.loc 1 1079 0
 147 0058 0323     		movs	r3, #3
 148 005a 6377     		strb	r3, [r4, #29]
1082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         
 149              		.loc 1 1082 0
 150 005c 0023     		movs	r3, #0
 151 005e 2377     		strb	r3, [r4, #28]
1084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     }      
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 23


 152              		.loc 1 1084 0
 153 0060 0320     		movs	r0, #3
 154 0062 D3E7     		b	.L4
 155              	.L9:
1088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 156              		.loc 1 1088 0
 157 0064 FF22     		movs	r2, #255
 158 0066 5A62     		str	r2, [r3, #36]
1090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 159              		.loc 1 1090 0
 160 0068 0123     		movs	r3, #1
 161 006a 6377     		strb	r3, [r4, #29]
1093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 162              		.loc 1 1093 0
 163 006c 0023     		movs	r3, #0
 164 006e 2377     		strb	r3, [r4, #28]
1095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** }
 165              		.loc 1 1095 0
 166 0070 0020     		movs	r0, #0
 167 0072 CBE7     		b	.L4
 168              	.L11:
 169              		.align	2
 170              	.L10:
 171 0074 FFFEFFFF 		.word	-257
 172 0078 FFEFFFFF 		.word	-4097
 173              		.cfi_endproc
 174              	.LFE45:
 176              		.section	.text.HAL_RTC_AlarmAEventCallback,"ax",%progbits
 177              		.align	1
 178              		.weak	HAL_RTC_AlarmAEventCallback
 179              		.syntax unified
 180              		.code	16
 181              		.thumb_func
 182              		.fpu softvfp
 184              	HAL_RTC_AlarmAEventCallback:
 185              	.LFB48:
1097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****            
1098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** /**
1099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @brief  Get the RTC Alarm value and masks.
1100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @param  hrtc: RTC handle
1101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @param  sAlarm: Pointer to Date structure
1102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @param  Alarm: Specifies the Alarm.
1103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *          This parameter can be one of the following values:
1104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *             @arg RTC_ALARM_A: AlarmA
1105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @param  Format: Specifies the format of the entered parameters.
1106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *          This parameter can be one of the following values:
1107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BIN: Binary data format 
1108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BCD: BCD data format
1109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @retval HAL status
1110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   */
1111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_GetAlarm(RTC_HandleTypeDef *hrtc, RTC_AlarmTypeDef *sAlarm, uint32_t Alar
1112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** {
1113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   uint32_t tmpreg = 0U, subsecondtmpreg = 0U;
1114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
1115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Check the parameters */
1116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
1117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM(Alarm));
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 24


1118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
1119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   sAlarm->Alarm = RTC_ALARM_A;
1120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
1121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   tmpreg = (uint32_t)(hrtc->Instance->ALRMAR);
1122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   subsecondtmpreg = (uint32_t)((hrtc->Instance->ALRMASSR ) & RTC_ALRMASSR_SS);
1123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
1124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Fill the structure with the read parameters */
1125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   sAlarm->AlarmTime.Hours = (uint32_t)((tmpreg & (RTC_ALRMAR_HT | RTC_ALRMAR_HU)) >> 16U);
1126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   sAlarm->AlarmTime.Minutes = (uint32_t)((tmpreg & (RTC_ALRMAR_MNT | RTC_ALRMAR_MNU)) >> 8U);
1127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   sAlarm->AlarmTime.Seconds = (uint32_t)(tmpreg & (RTC_ALRMAR_ST | RTC_ALRMAR_SU));
1128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   sAlarm->AlarmTime.TimeFormat = (uint32_t)((tmpreg & RTC_ALRMAR_PM) >> 16U);
1129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   sAlarm->AlarmTime.SubSeconds = (uint32_t) subsecondtmpreg;
1130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   sAlarm->AlarmDateWeekDay = (uint32_t)((tmpreg & (RTC_ALRMAR_DT | RTC_ALRMAR_DU)) >> 24U);
1131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   sAlarm->AlarmDateWeekDaySel = (uint32_t)(tmpreg & RTC_ALRMAR_WDSEL);
1132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   sAlarm->AlarmMask = (uint32_t)(tmpreg & RTC_ALARMMASK_ALL);
1133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
1134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   if(Format == RTC_FORMAT_BIN)
1135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   {
1136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     sAlarm->AlarmTime.Hours = RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours);
1137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     sAlarm->AlarmTime.Minutes = RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes);
1138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     sAlarm->AlarmTime.Seconds = RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds);
1139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     sAlarm->AlarmDateWeekDay = RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay);
1140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   }  
1141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
1142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   return HAL_OK;
1143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** }
1144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
1145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** /**
1146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @brief  Handle Alarm interrupt request.
1147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @param  hrtc: RTC handle
1148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @retval None
1149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   */
1150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** void HAL_RTC_AlarmIRQHandler(RTC_HandleTypeDef* hrtc)
1151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** {  
1152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Get the AlarmA interrupt source enable status */
1153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   if(__HAL_RTC_ALARM_GET_IT_SOURCE(hrtc, RTC_IT_ALRA) != RESET)
1154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   {
1155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     /* Get the pending status of the AlarmA Interrupt */
1156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     if(__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRAF) != RESET)
1157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     {
1158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       /* AlarmA callback */
1159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       HAL_RTC_AlarmAEventCallback(hrtc);
1160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
1161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       /* Clear the AlarmA interrupt pending bit */
1162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRAF);
1163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     }
1164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   }
1165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
1166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Clear the EXTI's line Flag for RTC Alarm */
1167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   __HAL_RTC_ALARM_EXTI_CLEAR_FLAG();
1168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
1169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Change RTC state */
1170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY; 
1171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** }
1172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
1173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** /**
1174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @brief  Alarm A callback.
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 25


1175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @param  hrtc: RTC handle
1176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @retval None
1177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   */
1178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** __weak void HAL_RTC_AlarmAEventCallback(RTC_HandleTypeDef *hrtc)
1179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** {
 186              		.loc 1 1179 0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 0
 189              		@ frame_needed = 0, uses_anonymous_args = 0
 190              		@ link register save eliminated.
 191              	.LVL11:
1180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
1181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   UNUSED(hrtc);
1182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
1183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****             the HAL_RTC_AlarmAEventCallback could be implemented in the user file
1185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****    */
1186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** }
 192              		.loc 1 1186 0
 193              		@ sp needed
 194 0000 7047     		bx	lr
 195              		.cfi_endproc
 196              	.LFE48:
 198              		.section	.text.HAL_RTC_AlarmIRQHandler,"ax",%progbits
 199              		.align	1
 200              		.global	HAL_RTC_AlarmIRQHandler
 201              		.syntax unified
 202              		.code	16
 203              		.thumb_func
 204              		.fpu softvfp
 206              	HAL_RTC_AlarmIRQHandler:
 207              	.LFB47:
1151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Get the AlarmA interrupt source enable status */
 208              		.loc 1 1151 0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 0
 211              		@ frame_needed = 0, uses_anonymous_args = 0
 212              	.LVL12:
 213 0000 10B5     		push	{r4, lr}
 214              	.LCFI1:
 215              		.cfi_def_cfa_offset 8
 216              		.cfi_offset 4, -8
 217              		.cfi_offset 14, -4
 218 0002 0400     		movs	r4, r0
1153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   {
 219              		.loc 1 1153 0
 220 0004 0368     		ldr	r3, [r0]
 221 0006 9A68     		ldr	r2, [r3, #8]
 222 0008 D204     		lsls	r2, r2, #19
 223 000a 02D5     		bpl	.L14
1156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     {
 224              		.loc 1 1156 0
 225 000c DB68     		ldr	r3, [r3, #12]
 226 000e DB05     		lsls	r3, r3, #23
 227 0010 06D4     		bmi	.L15
 228              	.LVL13:
 229              	.L14:
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 26


1167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 230              		.loc 1 1167 0
 231 0012 8022     		movs	r2, #128
 232 0014 9202     		lsls	r2, r2, #10
 233 0016 074B     		ldr	r3, .L16
 234 0018 5A61     		str	r2, [r3, #20]
1170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** }
 235              		.loc 1 1170 0
 236 001a 0123     		movs	r3, #1
 237 001c 6377     		strb	r3, [r4, #29]
1171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 238              		.loc 1 1171 0
 239              		@ sp needed
 240              	.LVL14:
 241 001e 10BD     		pop	{r4, pc}
 242              	.LVL15:
 243              	.L15:
1159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 244              		.loc 1 1159 0
 245 0020 FFF7FEFF 		bl	HAL_RTC_AlarmAEventCallback
 246              	.LVL16:
1162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     }
 247              		.loc 1 1162 0
 248 0024 2168     		ldr	r1, [r4]
 249 0026 CA68     		ldr	r2, [r1, #12]
 250 0028 FF23     		movs	r3, #255
 251 002a 1A40     		ands	r2, r3
 252 002c 024B     		ldr	r3, .L16+4
 253 002e 1343     		orrs	r3, r2
 254 0030 CB60     		str	r3, [r1, #12]
 255 0032 EEE7     		b	.L14
 256              	.L17:
 257              		.align	2
 258              	.L16:
 259 0034 00040140 		.word	1073808384
 260 0038 7FFEFFFF 		.word	-385
 261              		.cfi_endproc
 262              	.LFE47:
 264              		.section	.text.HAL_RTC_PollForAlarmAEvent,"ax",%progbits
 265              		.align	1
 266              		.global	HAL_RTC_PollForAlarmAEvent
 267              		.syntax unified
 268              		.code	16
 269              		.thumb_func
 270              		.fpu softvfp
 272              	HAL_RTC_PollForAlarmAEvent:
 273              	.LFB49:
1187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
1188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** /**
1189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @brief  Handle AlarmA Polling request.
1190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @param  hrtc: RTC handle
1191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @param  Timeout: Timeout duration
1192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @retval HAL status
1193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   */
1194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_PollForAlarmAEvent(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
1195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** {
 274              		.loc 1 1195 0
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 27


 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 0
 277              		@ frame_needed = 0, uses_anonymous_args = 0
 278              	.LVL17:
 279 0000 70B5     		push	{r4, r5, r6, lr}
 280              	.LCFI2:
 281              		.cfi_def_cfa_offset 16
 282              		.cfi_offset 4, -16
 283              		.cfi_offset 5, -12
 284              		.cfi_offset 6, -8
 285              		.cfi_offset 14, -4
 286 0002 0400     		movs	r4, r0
 287 0004 0D00     		movs	r5, r1
1196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
1197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   uint32_t tickstart = HAL_GetTick();   
 288              		.loc 1 1197 0
 289 0006 FFF7FEFF 		bl	HAL_GetTick
 290              	.LVL18:
 291 000a 0600     		movs	r6, r0
 292              	.LVL19:
 293              	.L20:
1198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
1199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   while(__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRAF) == RESET)
 294              		.loc 1 1199 0
 295 000c 2368     		ldr	r3, [r4]
 296 000e DA68     		ldr	r2, [r3, #12]
 297 0010 D205     		lsls	r2, r2, #23
 298 0012 0CD4     		bmi	.L24
1200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   {
1201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     if(Timeout != HAL_MAX_DELAY)
 299              		.loc 1 1201 0
 300 0014 6B1C     		adds	r3, r5, #1
 301 0016 F9D0     		beq	.L20
1202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     {
1203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       if((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 302              		.loc 1 1203 0
 303 0018 002D     		cmp	r5, #0
 304 001a 04D0     		beq	.L21
 305              		.loc 1 1203 0 is_stmt 0 discriminator 1
 306 001c FFF7FEFF 		bl	HAL_GetTick
 307              	.LVL20:
 308 0020 801B     		subs	r0, r0, r6
 309 0022 8542     		cmp	r5, r0
 310 0024 F2D2     		bcs	.L20
 311              	.L21:
1204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       {
1205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 312              		.loc 1 1205 0 is_stmt 1
 313 0026 0323     		movs	r3, #3
 314 0028 6377     		strb	r3, [r4, #29]
1206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         return HAL_TIMEOUT;
 315              		.loc 1 1206 0
 316 002a 0320     		movs	r0, #3
 317 002c 08E0     		b	.L22
 318              	.L24:
1207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       }
1208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     }
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 28


1209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   }
1210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
1211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Clear the Alarm interrupt pending bit */
1212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRAF);
 319              		.loc 1 1212 0
 320 002e D968     		ldr	r1, [r3, #12]
 321 0030 FF22     		movs	r2, #255
 322 0032 1140     		ands	r1, r2
 323 0034 034A     		ldr	r2, .L25
 324 0036 0A43     		orrs	r2, r1
 325 0038 DA60     		str	r2, [r3, #12]
1213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
1214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Change RTC state */
1215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY; 
 326              		.loc 1 1215 0
 327 003a 0123     		movs	r3, #1
 328 003c 6377     		strb	r3, [r4, #29]
1216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
1217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   return HAL_OK;  
 329              		.loc 1 1217 0
 330 003e 0020     		movs	r0, #0
 331              	.L22:
1218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** }
 332              		.loc 1 1218 0
 333              		@ sp needed
 334              	.LVL21:
 335              	.LVL22:
 336              	.LVL23:
 337 0040 70BD     		pop	{r4, r5, r6, pc}
 338              	.L26:
 339 0042 C046     		.align	2
 340              	.L25:
 341 0044 7FFEFFFF 		.word	-385
 342              		.cfi_endproc
 343              	.LFE49:
 345              		.section	.text.HAL_RTC_WaitForSynchro,"ax",%progbits
 346              		.align	1
 347              		.global	HAL_RTC_WaitForSynchro
 348              		.syntax unified
 349              		.code	16
 350              		.thumb_func
 351              		.fpu softvfp
 353              	HAL_RTC_WaitForSynchro:
 354              	.LFB50:
1219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
1220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** /**
1221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @}
1222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   */
1223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
1224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** /** @addtogroup RTC_Exported_Functions_Group4
1225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****  *  @brief   Peripheral Control functions 
1226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****  *
1227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** @verbatim   
1228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****  ===============================================================================
1229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****                      ##### Peripheral Control functions #####
1230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****  ===============================================================================  
1231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     [..]
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 29


1232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     This subsection provides functions allowing to
1233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       (+) Wait for RTC Time and Date Synchronization
1234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
1235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** @endverbatim
1236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @{
1237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   */
1238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
1239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** /**
1240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @brief  Wait until the RTC Time and Date registers (RTC_TR and RTC_DR) are
1241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *         synchronized with RTC APB clock.
1242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @note   The RTC Resynchronization mode is write protected, use the 
1243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *         __HAL_RTC_WRITEPROTECTION_DISABLE() before calling this function. 
1244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @note   To read the calendar through the shadow registers after Calendar 
1245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *         initialization, calendar update or after wakeup from low power modes
1246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *         the software must first clear the RSF flag.
1247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *         The software must then wait until it is set again before reading
1248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *         the calendar, which means that the calendar registers have been
1249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *         correctly copied into the RTC_TR and RTC_DR shadow registers.
1250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @param  hrtc: RTC handle
1251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @retval HAL status
1252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   */
1253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_WaitForSynchro(RTC_HandleTypeDef* hrtc)
1254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** {
 355              		.loc 1 1254 0
 356              		.cfi_startproc
 357              		@ args = 0, pretend = 0, frame = 0
 358              		@ frame_needed = 0, uses_anonymous_args = 0
 359              	.LVL24:
 360 0000 70B5     		push	{r4, r5, r6, lr}
 361              	.LCFI3:
 362              		.cfi_def_cfa_offset 16
 363              		.cfi_offset 4, -16
 364              		.cfi_offset 5, -12
 365              		.cfi_offset 6, -8
 366              		.cfi_offset 14, -4
 367 0002 0400     		movs	r4, r0
 368              	.LVL25:
1255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   uint32_t tickstart = 0U;
1256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
1257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Clear RSF flag */
1258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   hrtc->Instance->ISR &= (uint32_t)RTC_RSF_MASK;
 369              		.loc 1 1258 0
 370 0004 0268     		ldr	r2, [r0]
 371 0006 D368     		ldr	r3, [r2, #12]
 372 0008 A021     		movs	r1, #160
 373 000a 8B43     		bics	r3, r1
 374 000c D360     		str	r3, [r2, #12]
1259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
1260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   tickstart = HAL_GetTick();
 375              		.loc 1 1260 0
 376 000e FFF7FEFF 		bl	HAL_GetTick
 377              	.LVL26:
 378 0012 0500     		movs	r5, r0
 379              	.LVL27:
 380              	.L28:
1261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
1262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Wait the registers to be synchronised */
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 30


1263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   while((hrtc->Instance->ISR & RTC_ISR_RSF) == (uint32_t)RESET)
 381              		.loc 1 1263 0
 382 0014 2368     		ldr	r3, [r4]
 383 0016 DB68     		ldr	r3, [r3, #12]
 384 0018 9B06     		lsls	r3, r3, #26
 385 001a 08D4     		bmi	.L32
1264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   {
1265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     if((HAL_GetTick()-tickstart) > RTC_TIMEOUT_VALUE)
 386              		.loc 1 1265 0
 387 001c FFF7FEFF 		bl	HAL_GetTick
 388              	.LVL28:
 389 0020 401B     		subs	r0, r0, r5
 390 0022 FA23     		movs	r3, #250
 391 0024 9B00     		lsls	r3, r3, #2
 392 0026 9842     		cmp	r0, r3
 393 0028 F4D9     		bls	.L28
1266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     {       
1267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       return HAL_TIMEOUT;
 394              		.loc 1 1267 0
 395 002a 0320     		movs	r0, #3
 396 002c 00E0     		b	.L29
 397              	.L32:
1268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     } 
1269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   }
1270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
1271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   return HAL_OK;
 398              		.loc 1 1271 0
 399 002e 0020     		movs	r0, #0
 400              	.L29:
1272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** }
 401              		.loc 1 1272 0
 402              		@ sp needed
 403              	.LVL29:
 404              	.LVL30:
 405 0030 70BD     		pop	{r4, r5, r6, pc}
 406              		.cfi_endproc
 407              	.LFE50:
 409              		.section	.text.HAL_RTC_GetState,"ax",%progbits
 410              		.align	1
 411              		.global	HAL_RTC_GetState
 412              		.syntax unified
 413              		.code	16
 414              		.thumb_func
 415              		.fpu softvfp
 417              	HAL_RTC_GetState:
 418              	.LFB51:
1273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
1274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** /**
1275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @}
1276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   */
1277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
1278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** /** @addtogroup RTC_Exported_Functions_Group5
1279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****  *  @brief   Peripheral State functions 
1280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****  *
1281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** @verbatim   
1282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****  ===============================================================================
1283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****                      ##### Peripheral State functions #####
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 31


1284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****  ===============================================================================  
1285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     [..]
1286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     This subsection provides functions allowing to
1287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       (+) Get RTC state
1288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
1289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** @endverbatim
1290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @{
1291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   */
1292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** /**
1293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @brief  Return the RTC handle state.
1294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @param  hrtc: RTC handle
1295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @retval HAL state
1296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   */
1297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** HAL_RTCStateTypeDef HAL_RTC_GetState(RTC_HandleTypeDef* hrtc)
1298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** {
 419              		.loc 1 1298 0
 420              		.cfi_startproc
 421              		@ args = 0, pretend = 0, frame = 0
 422              		@ frame_needed = 0, uses_anonymous_args = 0
 423              		@ link register save eliminated.
 424              	.LVL31:
1299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Return RTC handle state */
1300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   return hrtc->State;
 425              		.loc 1 1300 0
 426 0000 407F     		ldrb	r0, [r0, #29]
 427              	.LVL32:
 428 0002 C0B2     		uxtb	r0, r0
1301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** }
 429              		.loc 1 1301 0
 430              		@ sp needed
 431 0004 7047     		bx	lr
 432              		.cfi_endproc
 433              	.LFE51:
 435              		.section	.text.RTC_EnterInitMode,"ax",%progbits
 436              		.align	1
 437              		.global	RTC_EnterInitMode
 438              		.syntax unified
 439              		.code	16
 440              		.thumb_func
 441              		.fpu softvfp
 443              	RTC_EnterInitMode:
 444              	.LFB52:
1302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
1303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** /**
1304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @}
1305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   */
1306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
1307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** /**
1308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @}
1309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   */
1310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
1311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** /** @addtogroup RTC_Private_Functions
1312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @{
1313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   */
1314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** /**
1315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @brief  Enter the RTC Initialization mode.
1316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @note   The RTC Initialization mode is write protected, use the
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 32


1317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   *         __HAL_RTC_WRITEPROTECTION_DISABLE() before calling this function.
1318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @param  hrtc: RTC handle
1319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @retval HAL status
1320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   */
1321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** HAL_StatusTypeDef RTC_EnterInitMode(RTC_HandleTypeDef* hrtc)
1322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** {
 445              		.loc 1 1322 0
 446              		.cfi_startproc
 447              		@ args = 0, pretend = 0, frame = 0
 448              		@ frame_needed = 0, uses_anonymous_args = 0
 449              	.LVL33:
 450 0000 70B5     		push	{r4, r5, r6, lr}
 451              	.LCFI4:
 452              		.cfi_def_cfa_offset 16
 453              		.cfi_offset 4, -16
 454              		.cfi_offset 5, -12
 455              		.cfi_offset 6, -8
 456              		.cfi_offset 14, -4
 457 0002 0400     		movs	r4, r0
 458              	.LVL34:
1323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   uint32_t tickstart = 0U;
1324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
1325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Check if the Initialization mode is set */
1326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   if((hrtc->Instance->ISR & RTC_ISR_INITF) == (uint32_t)RESET)
 459              		.loc 1 1326 0
 460 0004 0368     		ldr	r3, [r0]
 461 0006 DA68     		ldr	r2, [r3, #12]
 462 0008 5206     		lsls	r2, r2, #25
 463 000a 01D5     		bpl	.L40
1327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   {
1328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     /* Set the Initialization mode */
1329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     hrtc->Instance->ISR = (uint32_t)RTC_INIT_MASK;
1330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
1331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     tickstart = HAL_GetTick();
1332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
1333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     /* Wait till RTC is in INIT state and if Time out is reached exit */
1334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     while((hrtc->Instance->ISR & RTC_ISR_INITF) == (uint32_t)RESET)
1335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     {
1336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       if((HAL_GetTick()-tickstart) > RTC_TIMEOUT_VALUE)
1337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       {       
1338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         return HAL_TIMEOUT;
1339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       } 
1340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     }
1341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   }
1342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
1343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   return HAL_OK;  
 464              		.loc 1 1343 0
 465 000c 0020     		movs	r0, #0
 466              	.LVL35:
 467              	.L35:
1344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** }
 468              		.loc 1 1344 0
 469              		@ sp needed
 470              	.LVL36:
 471 000e 70BD     		pop	{r4, r5, r6, pc}
 472              	.LVL37:
 473              	.L40:
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 33


1329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 474              		.loc 1 1329 0
 475 0010 0122     		movs	r2, #1
 476 0012 5242     		rsbs	r2, r2, #0
 477 0014 DA60     		str	r2, [r3, #12]
1331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 478              		.loc 1 1331 0
 479 0016 FFF7FEFF 		bl	HAL_GetTick
 480              	.LVL38:
 481 001a 0500     		movs	r5, r0
 482              	.LVL39:
 483              	.L36:
1334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     {
 484              		.loc 1 1334 0
 485 001c 2368     		ldr	r3, [r4]
 486 001e DB68     		ldr	r3, [r3, #12]
 487 0020 5B06     		lsls	r3, r3, #25
 488 0022 08D4     		bmi	.L41
1336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       {       
 489              		.loc 1 1336 0
 490 0024 FFF7FEFF 		bl	HAL_GetTick
 491              	.LVL40:
 492 0028 401B     		subs	r0, r0, r5
 493 002a FA23     		movs	r3, #250
 494 002c 9B00     		lsls	r3, r3, #2
 495 002e 9842     		cmp	r0, r3
 496 0030 F4D9     		bls	.L36
1338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       } 
 497              		.loc 1 1338 0
 498 0032 0320     		movs	r0, #3
 499 0034 EBE7     		b	.L35
 500              	.L41:
1343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** }
 501              		.loc 1 1343 0
 502 0036 0020     		movs	r0, #0
 503 0038 E9E7     		b	.L35
 504              		.cfi_endproc
 505              	.LFE52:
 507              		.section	.text.HAL_RTC_Init,"ax",%progbits
 508              		.align	1
 509              		.global	HAL_RTC_Init
 510              		.syntax unified
 511              		.code	16
 512              		.thumb_func
 513              		.fpu softvfp
 515              	HAL_RTC_Init:
 516              	.LFB35:
 151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Check the RTC peripheral state */
 517              		.loc 1 151 0
 518              		.cfi_startproc
 519              		@ args = 0, pretend = 0, frame = 0
 520              		@ frame_needed = 0, uses_anonymous_args = 0
 521              	.LVL41:
 522 0000 70B5     		push	{r4, r5, r6, lr}
 523              	.LCFI5:
 524              		.cfi_def_cfa_offset 16
 525              		.cfi_offset 4, -16
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 34


 526              		.cfi_offset 5, -12
 527              		.cfi_offset 6, -8
 528              		.cfi_offset 14, -4
 529 0002 041E     		subs	r4, r0, #0
 153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   {
 530              		.loc 1 153 0
 531 0004 57D0     		beq	.L47
 167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   {
 532              		.loc 1 167 0
 533 0006 437F     		ldrb	r3, [r0, #29]
 534 0008 002B     		cmp	r3, #0
 535 000a 3DD0     		beq	.L48
 536              	.LVL42:
 537              	.L44:
 177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****        
 538              		.loc 1 177 0
 539 000c 0223     		movs	r3, #2
 540 000e 6377     		strb	r3, [r4, #29]
 180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 541              		.loc 1 180 0
 542 0010 2368     		ldr	r3, [r4]
 543 0012 CA22     		movs	r2, #202
 544 0014 5A62     		str	r2, [r3, #36]
 545 0016 2368     		ldr	r3, [r4]
 546 0018 773A     		subs	r2, r2, #119
 547 001a 5A62     		str	r2, [r3, #36]
 183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   {
 548              		.loc 1 183 0
 549 001c 2000     		movs	r0, r4
 550 001e FFF7FEFF 		bl	RTC_EnterInitMode
 551              	.LVL43:
 552 0022 051E     		subs	r5, r0, #0
 553 0024 34D1     		bne	.L49
 196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     /* Set RTC_CR register */
 554              		.loc 1 196 0
 555 0026 2268     		ldr	r2, [r4]
 556 0028 9368     		ldr	r3, [r2, #8]
 557 002a 2449     		ldr	r1, .L51
 558 002c 0B40     		ands	r3, r1
 559 002e 9360     		str	r3, [r2, #8]
 198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 560              		.loc 1 198 0
 561 0030 2168     		ldr	r1, [r4]
 562 0032 8A68     		ldr	r2, [r1, #8]
 563 0034 6368     		ldr	r3, [r4, #4]
 564 0036 2069     		ldr	r0, [r4, #16]
 565 0038 0343     		orrs	r3, r0
 566 003a 6069     		ldr	r0, [r4, #20]
 567 003c 0343     		orrs	r3, r0
 568 003e 1343     		orrs	r3, r2
 569 0040 8B60     		str	r3, [r1, #8]
 201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     hrtc->Instance->PRER |= (uint32_t)(hrtc->Init.AsynchPrediv << 16U);
 570              		.loc 1 201 0
 571 0042 2368     		ldr	r3, [r4]
 572 0044 E268     		ldr	r2, [r4, #12]
 573 0046 1A61     		str	r2, [r3, #16]
 202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 35


 574              		.loc 1 202 0
 575 0048 2168     		ldr	r1, [r4]
 576 004a 0B69     		ldr	r3, [r1, #16]
 577 004c A268     		ldr	r2, [r4, #8]
 578 004e 1204     		lsls	r2, r2, #16
 579 0050 1343     		orrs	r3, r2
 580 0052 0B61     		str	r3, [r1, #16]
 205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 581              		.loc 1 205 0
 582 0054 2268     		ldr	r2, [r4]
 583 0056 D368     		ldr	r3, [r2, #12]
 584 0058 8021     		movs	r1, #128
 585 005a 8B43     		bics	r3, r1
 586 005c D360     		str	r3, [r2, #12]
 208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     {
 587              		.loc 1 208 0
 588 005e 2368     		ldr	r3, [r4]
 589 0060 9B68     		ldr	r3, [r3, #8]
 590 0062 9B06     		lsls	r3, r3, #26
 591 0064 1BD5     		bpl	.L50
 592              	.L46:
 221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     hrtc->Instance->TAFCR |= (uint32_t)(hrtc->Init.OutPutType); 
 593              		.loc 1 221 0
 594 0066 2268     		ldr	r2, [r4]
 595 0068 136C     		ldr	r3, [r2, #64]
 596 006a 1549     		ldr	r1, .L51+4
 597 006c 0B40     		ands	r3, r1
 598 006e 1364     		str	r3, [r2, #64]
 222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 599              		.loc 1 222 0
 600 0070 2268     		ldr	r2, [r4]
 601 0072 136C     		ldr	r3, [r2, #64]
 602 0074 A169     		ldr	r1, [r4, #24]
 603 0076 0B43     		orrs	r3, r1
 604 0078 1364     		str	r3, [r2, #64]
 225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 605              		.loc 1 225 0
 606 007a 2368     		ldr	r3, [r4]
 607 007c FF22     		movs	r2, #255
 608 007e 5A62     		str	r2, [r3, #36]
 228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 609              		.loc 1 228 0
 610 0080 0123     		movs	r3, #1
 611 0082 6377     		strb	r3, [r4, #29]
 612              	.L43:
 232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 613              		.loc 1 232 0
 614 0084 2800     		movs	r0, r5
 615              		@ sp needed
 616              	.LVL44:
 617 0086 70BD     		pop	{r4, r5, r6, pc}
 618              	.LVL45:
 619              	.L48:
 170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 620              		.loc 1 170 0
 621 0088 0377     		strb	r3, [r0, #28]
 173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   }
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 36


 622              		.loc 1 173 0
 623 008a FFF7FEFF 		bl	HAL_RTC_MspInit
 624              	.LVL46:
 625 008e BDE7     		b	.L44
 626              	.L49:
 186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 627              		.loc 1 186 0
 628 0090 2368     		ldr	r3, [r4]
 629 0092 FF22     		movs	r2, #255
 630 0094 5A62     		str	r2, [r3, #36]
 189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 631              		.loc 1 189 0
 632 0096 0423     		movs	r3, #4
 633 0098 6377     		strb	r3, [r4, #29]
 191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   } 
 634              		.loc 1 191 0
 635 009a 0125     		movs	r5, #1
 636 009c F2E7     		b	.L43
 637              	.L50:
 210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       {
 638              		.loc 1 210 0
 639 009e 2000     		movs	r0, r4
 640 00a0 FFF7FEFF 		bl	HAL_RTC_WaitForSynchro
 641              	.LVL47:
 642 00a4 0028     		cmp	r0, #0
 643 00a6 DED0     		beq	.L46
 213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 644              		.loc 1 213 0
 645 00a8 2368     		ldr	r3, [r4]
 646 00aa FF22     		movs	r2, #255
 647 00ac 5A62     		str	r2, [r3, #36]
 215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 648              		.loc 1 215 0
 649 00ae 0423     		movs	r3, #4
 650 00b0 6377     		strb	r3, [r4, #29]
 217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       }
 651              		.loc 1 217 0
 652 00b2 0125     		movs	r5, #1
 653 00b4 E6E7     		b	.L43
 654              	.LVL48:
 655              	.L47:
 155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   }
 656              		.loc 1 155 0
 657 00b6 0125     		movs	r5, #1
 658 00b8 E4E7     		b	.L43
 659              	.L52:
 660 00ba C046     		.align	2
 661              	.L51:
 662 00bc BFFF8FFF 		.word	-7340097
 663 00c0 FFFFFBFF 		.word	-262145
 664              		.cfi_endproc
 665              	.LFE35:
 667              		.section	.text.HAL_RTC_DeInit,"ax",%progbits
 668              		.align	1
 669              		.global	HAL_RTC_DeInit
 670              		.syntax unified
 671              		.code	16
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 37


 672              		.thumb_func
 673              		.fpu softvfp
 675              	HAL_RTC_DeInit:
 676              	.LFB36:
 241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** #if defined (STM32F030xC) || defined (STM32F070xB) || \
 677              		.loc 1 241 0
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 0
 680              		@ frame_needed = 0, uses_anonymous_args = 0
 681              	.LVL49:
 682 0000 70B5     		push	{r4, r5, r6, lr}
 683              	.LCFI6:
 684              		.cfi_def_cfa_offset 16
 685              		.cfi_offset 4, -16
 686              		.cfi_offset 5, -12
 687              		.cfi_offset 6, -8
 688              		.cfi_offset 14, -4
 689 0002 0400     		movs	r4, r0
 690              	.LVL50:
 254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 691              		.loc 1 254 0
 692 0004 0223     		movs	r3, #2
 693 0006 4377     		strb	r3, [r0, #29]
 257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 694              		.loc 1 257 0
 695 0008 0368     		ldr	r3, [r0]
 696 000a CA22     		movs	r2, #202
 697 000c 5A62     		str	r2, [r3, #36]
 698 000e 0368     		ldr	r3, [r0]
 699 0010 773A     		subs	r2, r2, #119
 700 0012 5A62     		str	r2, [r3, #36]
 260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   {
 701              		.loc 1 260 0
 702 0014 FFF7FEFF 		bl	RTC_EnterInitMode
 703              	.LVL51:
 704 0018 051E     		subs	r5, r0, #0
 705 001a 07D0     		beq	.L54
 263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 706              		.loc 1 263 0
 707 001c 2368     		ldr	r3, [r4]
 708 001e FF22     		movs	r2, #255
 709 0020 5A62     		str	r2, [r3, #36]
 266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 710              		.loc 1 266 0
 711 0022 0423     		movs	r3, #4
 712 0024 6377     		strb	r3, [r4, #29]
 268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   }  
 713              		.loc 1 268 0
 714 0026 0125     		movs	r5, #1
 715              	.LVL52:
 716              	.L55:
 350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 717              		.loc 1 350 0
 718 0028 2800     		movs	r0, r5
 719              		@ sp needed
 720              	.LVL53:
 721 002a 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 38


 722              	.LVL54:
 723              	.L54:
 273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     hrtc->Instance->DR = 0x00002101U;
 724              		.loc 1 273 0
 725 002c 2368     		ldr	r3, [r4]
 726 002e 0022     		movs	r2, #0
 727 0030 1A60     		str	r2, [r3]
 274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 728              		.loc 1 274 0
 729 0032 2368     		ldr	r3, [r4]
 730 0034 254A     		ldr	r2, .L61
 731 0036 5A60     		str	r2, [r3, #4]
 280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 732              		.loc 1 280 0
 733 0038 2268     		ldr	r2, [r4]
 734 003a 9168     		ldr	r1, [r2, #8]
 735 003c 0723     		movs	r3, #7
 736 003e 0B40     		ands	r3, r1
 737 0040 9360     		str	r3, [r2, #8]
 282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 738              		.loc 1 282 0
 739 0042 FFF7FEFF 		bl	HAL_GetTick
 740              	.LVL55:
 741 0046 0600     		movs	r6, r0
 742              	.LVL56:
 743              	.L56:
 285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     {
 744              		.loc 1 285 0
 745 0048 2368     		ldr	r3, [r4]
 746 004a DA68     		ldr	r2, [r3, #12]
 747 004c 5207     		lsls	r2, r2, #29
 748 004e 0DD4     		bmi	.L59
 287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       { 
 749              		.loc 1 287 0
 750 0050 FFF7FEFF 		bl	HAL_GetTick
 751              	.LVL57:
 752 0054 801B     		subs	r0, r0, r6
 753 0056 FA23     		movs	r3, #250
 754 0058 9B00     		lsls	r3, r3, #2
 755 005a 9842     		cmp	r0, r3
 756 005c F4D9     		bls	.L56
 290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         
 757              		.loc 1 290 0
 758 005e 2368     		ldr	r3, [r4]
 759 0060 FF22     		movs	r2, #255
 760 0062 5A62     		str	r2, [r3, #36]
 293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         
 761              		.loc 1 293 0
 762 0064 0323     		movs	r3, #3
 763 0066 6377     		strb	r3, [r4, #29]
 295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       } 
 764              		.loc 1 295 0
 765 0068 0325     		movs	r5, #3
 766 006a DDE7     		b	.L55
 767              	.L59:
 303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** #if defined (STM32F030xC) || defined (STM32F070xB) || \
 768              		.loc 1 303 0
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 39


 769 006c 9A68     		ldr	r2, [r3, #8]
 770 006e 0022     		movs	r2, #0
 771 0070 9A60     		str	r2, [r3, #8]
 307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** #endif /* defined (STM32F030xC) || defined (STM32F070xB) ||\
 772              		.loc 1 307 0
 773 0072 2368     		ldr	r3, [r4]
 774 0074 1649     		ldr	r1, .L61+4
 775 0076 5961     		str	r1, [r3, #20]
 311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     hrtc->Instance->ALRMAR = 0x00000000U;        
 776              		.loc 1 311 0
 777 0078 2368     		ldr	r3, [r4]
 778 007a 1649     		ldr	r1, .L61+8
 779 007c 1961     		str	r1, [r3, #16]
 312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     hrtc->Instance->SHIFTR = 0x00000000U;
 780              		.loc 1 312 0
 781 007e 2368     		ldr	r3, [r4]
 782 0080 DA61     		str	r2, [r3, #28]
 313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     hrtc->Instance->CALR = 0x00000000U;
 783              		.loc 1 313 0
 784 0082 2368     		ldr	r3, [r4]
 785 0084 DA62     		str	r2, [r3, #44]
 314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     hrtc->Instance->ALRMASSR = 0x00000000U;
 786              		.loc 1 314 0
 787 0086 2368     		ldr	r3, [r4]
 788 0088 DA63     		str	r2, [r3, #60]
 315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 789              		.loc 1 315 0
 790 008a 2368     		ldr	r3, [r4]
 791 008c 5A64     		str	r2, [r3, #68]
 318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 792              		.loc 1 318 0
 793 008e 2368     		ldr	r3, [r4]
 794 0090 DA60     		str	r2, [r3, #12]
 321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 795              		.loc 1 321 0
 796 0092 2368     		ldr	r3, [r4]
 797 0094 1A64     		str	r2, [r3, #64]
 324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     {
 798              		.loc 1 324 0
 799 0096 2368     		ldr	r3, [r4]
 800 0098 9B68     		ldr	r3, [r3, #8]
 801 009a 9B06     		lsls	r3, r3, #26
 802 009c 04D4     		bmi	.L58
 326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       {
 803              		.loc 1 326 0
 804 009e 2000     		movs	r0, r4
 805 00a0 FFF7FEFF 		bl	HAL_RTC_WaitForSynchro
 806              	.LVL58:
 807 00a4 0028     		cmp	r0, #0
 808 00a6 09D1     		bne	.L60
 809              	.L58:
 339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 810              		.loc 1 339 0
 811 00a8 2368     		ldr	r3, [r4]
 812 00aa FF22     		movs	r2, #255
 813 00ac 5A62     		str	r2, [r3, #36]
 342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 40


 814              		.loc 1 342 0
 815 00ae 2000     		movs	r0, r4
 816 00b0 FFF7FEFF 		bl	HAL_RTC_MspDeInit
 817              	.LVL59:
 344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 818              		.loc 1 344 0
 819 00b4 0023     		movs	r3, #0
 820 00b6 6377     		strb	r3, [r4, #29]
 347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 821              		.loc 1 347 0
 822 00b8 2377     		strb	r3, [r4, #28]
 349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** }
 823              		.loc 1 349 0
 824 00ba B5E7     		b	.L55
 825              	.L60:
 329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         
 826              		.loc 1 329 0
 827 00bc 2368     		ldr	r3, [r4]
 828 00be FF22     		movs	r2, #255
 829 00c0 5A62     		str	r2, [r3, #36]
 331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         
 830              		.loc 1 331 0
 831 00c2 0423     		movs	r3, #4
 832 00c4 6377     		strb	r3, [r4, #29]
 333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       }
 833              		.loc 1 333 0
 834 00c6 0125     		movs	r5, #1
 835 00c8 AEE7     		b	.L55
 836              	.L62:
 837 00ca C046     		.align	2
 838              	.L61:
 839 00cc 01210000 		.word	8449
 840 00d0 FFFF0000 		.word	65535
 841 00d4 FF007F00 		.word	8323327
 842              		.cfi_endproc
 843              	.LFE36:
 845              		.section	.text.RTC_ByteToBcd2,"ax",%progbits
 846              		.align	1
 847              		.global	RTC_ByteToBcd2
 848              		.syntax unified
 849              		.code	16
 850              		.thumb_func
 851              		.fpu softvfp
 853              	RTC_ByteToBcd2:
 854              	.LFB53:
1345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
1346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
1347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** /**
1348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @brief  Convert a 2 digit decimal to BCD format.
1349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @param  Value: Byte to be converted
1350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @retval Converted byte
1351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   */
1352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** uint8_t RTC_ByteToBcd2(uint8_t Value)
1353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** {
 855              		.loc 1 1353 0
 856              		.cfi_startproc
 857              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 41


 858              		@ frame_needed = 0, uses_anonymous_args = 0
 859              		@ link register save eliminated.
 860              	.LVL60:
1354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   uint32_t bcdhigh = 0U;
 861              		.loc 1 1354 0
 862 0000 0023     		movs	r3, #0
1355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
1356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   while(Value >= 10U)
 863              		.loc 1 1356 0
 864 0002 02E0     		b	.L64
 865              	.LVL61:
 866              	.L65:
1357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   {
1358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     bcdhigh++;
 867              		.loc 1 1358 0
 868 0004 0133     		adds	r3, r3, #1
 869              	.LVL62:
1359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     Value -= 10U;
 870              		.loc 1 1359 0
 871 0006 0A38     		subs	r0, r0, #10
 872              	.LVL63:
 873 0008 C0B2     		uxtb	r0, r0
 874              	.LVL64:
 875              	.L64:
1356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   {
 876              		.loc 1 1356 0
 877 000a 0928     		cmp	r0, #9
 878 000c FAD8     		bhi	.L65
1360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   }
1361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
1362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   return  ((uint8_t)(bcdhigh << 4U) | Value);
 879              		.loc 1 1362 0
 880 000e 1B01     		lsls	r3, r3, #4
 881              	.LVL65:
 882 0010 DBB2     		uxtb	r3, r3
 883 0012 1843     		orrs	r0, r3
 884              	.LVL66:
1363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** }
 885              		.loc 1 1363 0
 886              		@ sp needed
 887 0014 7047     		bx	lr
 888              		.cfi_endproc
 889              	.LFE53:
 891              		.section	.text.HAL_RTC_SetTime,"ax",%progbits
 892              		.align	1
 893              		.global	HAL_RTC_SetTime
 894              		.syntax unified
 895              		.code	16
 896              		.thumb_func
 897              		.fpu softvfp
 899              	HAL_RTC_SetTime:
 900              	.LFB39:
 411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   uint32_t tmpreg = 0U;
 901              		.loc 1 411 0
 902              		.cfi_startproc
 903              		@ args = 0, pretend = 0, frame = 0
 904              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 42


 905              	.LVL67:
 906 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 907              	.LCFI7:
 908              		.cfi_def_cfa_offset 24
 909              		.cfi_offset 3, -24
 910              		.cfi_offset 4, -20
 911              		.cfi_offset 5, -16
 912              		.cfi_offset 6, -12
 913              		.cfi_offset 7, -8
 914              		.cfi_offset 14, -4
 915 0002 0400     		movs	r4, r0
 916 0004 0E00     		movs	r6, r1
 917              	.LVL68:
 420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 918              		.loc 1 420 0
 919 0006 037F     		ldrb	r3, [r0, #28]
 920 0008 012B     		cmp	r3, #1
 921 000a 6FD0     		beq	.L74
 420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 922              		.loc 1 420 0 is_stmt 0 discriminator 2
 923 000c 0123     		movs	r3, #1
 924 000e 0377     		strb	r3, [r0, #28]
 422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 925              		.loc 1 422 0 is_stmt 1 discriminator 2
 926 0010 0133     		adds	r3, r3, #1
 927 0012 4377     		strb	r3, [r0, #29]
 424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   {
 928              		.loc 1 424 0 discriminator 2
 929 0014 002A     		cmp	r2, #0
 930 0016 41D1     		bne	.L68
 426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     {
 931              		.loc 1 426 0
 932 0018 0368     		ldr	r3, [r0]
 933 001a 9B68     		ldr	r3, [r3, #8]
 934 001c 5B06     		lsls	r3, r3, #25
 935 001e 01D4     		bmi	.L69
 433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(sTime->Hours));
 936              		.loc 1 433 0
 937 0020 0023     		movs	r3, #0
 938 0022 CB70     		strb	r3, [r1, #3]
 939              	.L69:
 439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****                         ((uint32_t)RTC_ByteToBcd2(sTime->Minutes) << 8U) | \
 940              		.loc 1 439 0
 941 0024 3078     		ldrb	r0, [r6]
 942              	.LVL69:
 943 0026 FFF7FEFF 		bl	RTC_ByteToBcd2
 944              	.LVL70:
 945 002a 0504     		lsls	r5, r0, #16
 440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****                         ((uint32_t)RTC_ByteToBcd2(sTime->Seconds)) | \
 946              		.loc 1 440 0
 947 002c 7078     		ldrb	r0, [r6, #1]
 948 002e FFF7FEFF 		bl	RTC_ByteToBcd2
 949              	.LVL71:
 950 0032 0002     		lsls	r0, r0, #8
 439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****                         ((uint32_t)RTC_ByteToBcd2(sTime->Minutes) << 8U) | \
 951              		.loc 1 439 0
 952 0034 0543     		orrs	r5, r0
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 43


 441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****                         (((uint32_t)sTime->TimeFormat) << 16U));  
 953              		.loc 1 441 0
 954 0036 B078     		ldrb	r0, [r6, #2]
 955 0038 FFF7FEFF 		bl	RTC_ByteToBcd2
 956              	.LVL72:
 440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****                         ((uint32_t)RTC_ByteToBcd2(sTime->Seconds)) | \
 957              		.loc 1 440 0
 958 003c 0543     		orrs	r5, r0
 442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   }
 959              		.loc 1 442 0
 960 003e F078     		ldrb	r0, [r6, #3]
 961 0040 0004     		lsls	r0, r0, #16
 439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****                         ((uint32_t)RTC_ByteToBcd2(sTime->Minutes) << 8U) | \
 962              		.loc 1 439 0
 963 0042 0543     		orrs	r5, r0
 964              	.LVL73:
 965              	.L70:
 466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 966              		.loc 1 466 0
 967 0044 2368     		ldr	r3, [r4]
 968 0046 CA22     		movs	r2, #202
 969 0048 5A62     		str	r2, [r3, #36]
 970 004a 2368     		ldr	r3, [r4]
 971 004c 773A     		subs	r2, r2, #119
 972 004e 5A62     		str	r2, [r3, #36]
 469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   {
 973              		.loc 1 469 0
 974 0050 2000     		movs	r0, r4
 975 0052 FFF7FEFF 		bl	RTC_EnterInitMode
 976              	.LVL74:
 977 0056 071E     		subs	r7, r0, #0
 978 0058 31D1     		bne	.L75
 485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****      
 979              		.loc 1 485 0
 980 005a 2368     		ldr	r3, [r4]
 981 005c 2548     		ldr	r0, .L77
 982 005e 0540     		ands	r5, r0
 983              	.LVL75:
 984 0060 1D60     		str	r5, [r3]
 488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 985              		.loc 1 488 0
 986 0062 2268     		ldr	r2, [r4]
 987 0064 9368     		ldr	r3, [r2, #8]
 988 0066 2449     		ldr	r1, .L77+4
 989 0068 0B40     		ands	r3, r1
 990 006a 9360     		str	r3, [r2, #8]
 491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 991              		.loc 1 491 0
 992 006c 2168     		ldr	r1, [r4]
 993 006e 8B68     		ldr	r3, [r1, #8]
 994 0070 F268     		ldr	r2, [r6, #12]
 995 0072 3069     		ldr	r0, [r6, #16]
 996 0074 0243     		orrs	r2, r0
 997 0076 1343     		orrs	r3, r2
 998 0078 8B60     		str	r3, [r1, #8]
 494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 999              		.loc 1 494 0
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 44


 1000 007a 2268     		ldr	r2, [r4]
 1001 007c D368     		ldr	r3, [r2, #12]
 1002 007e 8021     		movs	r1, #128
 1003 0080 8B43     		bics	r3, r1
 1004 0082 D360     		str	r3, [r2, #12]
 497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     {
 1005              		.loc 1 497 0
 1006 0084 2368     		ldr	r3, [r4]
 1007 0086 9B68     		ldr	r3, [r3, #8]
 1008 0088 9B06     		lsls	r3, r3, #26
 1009 008a 21D5     		bpl	.L76
 1010              	.L73:
 514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 1011              		.loc 1 514 0
 1012 008c 2368     		ldr	r3, [r4]
 1013 008e FF22     		movs	r2, #255
 1014 0090 5A62     		str	r2, [r3, #36]
 516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 1015              		.loc 1 516 0
 1016 0092 0123     		movs	r3, #1
 1017 0094 6377     		strb	r3, [r4, #29]
 518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****      
 1018              		.loc 1 518 0
 1019 0096 0023     		movs	r3, #0
 1020 0098 2377     		strb	r3, [r4, #28]
 520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   }
 1021              		.loc 1 520 0
 1022 009a 28E0     		b	.L67
 1023              	.LVL76:
 1024              	.L68:
 446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     {
 1025              		.loc 1 446 0
 1026 009c 0368     		ldr	r3, [r0]
 1027 009e 9B68     		ldr	r3, [r3, #8]
 1028 00a0 5B06     		lsls	r3, r3, #25
 1029 00a2 01D4     		bmi	.L71
 454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sTime->Hours)));
 1030              		.loc 1 454 0
 1031 00a4 0023     		movs	r3, #0
 1032 00a6 CB70     		strb	r3, [r1, #3]
 1033              	.L71:
 459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)(sTime->Minutes) << 8U) | \
 1034              		.loc 1 459 0
 1035 00a8 3578     		ldrb	r5, [r6]
 1036 00aa 2D04     		lsls	r5, r5, #16
 460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)sTime->Seconds) | \
 1037              		.loc 1 460 0
 1038 00ac 7078     		ldrb	r0, [r6, #1]
 1039              	.LVL77:
 1040 00ae 0002     		lsls	r0, r0, #8
 459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)(sTime->Minutes) << 8U) | \
 1041              		.loc 1 459 0
 1042 00b0 0543     		orrs	r5, r0
 461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)(sTime->TimeFormat) << 16U));   
 1043              		.loc 1 461 0
 1044 00b2 B078     		ldrb	r0, [r6, #2]
 460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)sTime->Seconds) | \
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 45


 1045              		.loc 1 460 0
 1046 00b4 0543     		orrs	r5, r0
 462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   }
 1047              		.loc 1 462 0
 1048 00b6 F078     		ldrb	r0, [r6, #3]
 1049 00b8 0004     		lsls	r0, r0, #16
 459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)(sTime->Minutes) << 8U) | \
 1050              		.loc 1 459 0
 1051 00ba 0543     		orrs	r5, r0
 1052              	.LVL78:
 1053 00bc C2E7     		b	.L70
 1054              	.LVL79:
 1055              	.L75:
 472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 1056              		.loc 1 472 0
 1057 00be 2368     		ldr	r3, [r4]
 1058 00c0 FF22     		movs	r2, #255
 1059 00c2 5A62     		str	r2, [r3, #36]
 475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 1060              		.loc 1 475 0
 1061 00c4 0423     		movs	r3, #4
 1062 00c6 6377     		strb	r3, [r4, #29]
 478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 1063              		.loc 1 478 0
 1064 00c8 0023     		movs	r3, #0
 1065 00ca 2377     		strb	r3, [r4, #28]
 480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   } 
 1066              		.loc 1 480 0
 1067 00cc 0127     		movs	r7, #1
 1068 00ce 0EE0     		b	.L67
 1069              	.LVL80:
 1070              	.L76:
 499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       {        
 1071              		.loc 1 499 0
 1072 00d0 2000     		movs	r0, r4
 1073 00d2 FFF7FEFF 		bl	HAL_RTC_WaitForSynchro
 1074              	.LVL81:
 1075 00d6 0028     		cmp	r0, #0
 1076 00d8 D8D0     		beq	.L73
 502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         
 1077              		.loc 1 502 0
 1078 00da 2368     		ldr	r3, [r4]
 1079 00dc FF22     		movs	r2, #255
 1080 00de 5A62     		str	r2, [r3, #36]
 504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         
 1081              		.loc 1 504 0
 1082 00e0 0423     		movs	r3, #4
 1083 00e2 6377     		strb	r3, [r4, #29]
 507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         
 1084              		.loc 1 507 0
 1085 00e4 0023     		movs	r3, #0
 1086 00e6 2377     		strb	r3, [r4, #28]
 509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       }
 1087              		.loc 1 509 0
 1088 00e8 0127     		movs	r7, #1
 1089 00ea 00E0     		b	.L67
 1090              	.LVL82:
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 46


 1091              	.L74:
 420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 1092              		.loc 1 420 0
 1093 00ec 0227     		movs	r7, #2
 1094              	.LVL83:
 1095              	.L67:
 522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 1096              		.loc 1 522 0
 1097 00ee 3800     		movs	r0, r7
 1098              		@ sp needed
 1099              	.LVL84:
 1100              	.LVL85:
 1101 00f0 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1102              	.L78:
 1103 00f2 C046     		.align	2
 1104              	.L77:
 1105 00f4 7F7F7F00 		.word	8355711
 1106 00f8 FFFFFBFF 		.word	-262145
 1107              		.cfi_endproc
 1108              	.LFE39:
 1110              		.section	.text.HAL_RTC_SetDate,"ax",%progbits
 1111              		.align	1
 1112              		.global	HAL_RTC_SetDate
 1113              		.syntax unified
 1114              		.code	16
 1115              		.thumb_func
 1116              		.fpu softvfp
 1118              	HAL_RTC_SetDate:
 1119              	.LFB41:
 590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   uint32_t datetmpreg = 0U;
 1120              		.loc 1 590 0
 1121              		.cfi_startproc
 1122              		@ args = 0, pretend = 0, frame = 0
 1123              		@ frame_needed = 0, uses_anonymous_args = 0
 1124              	.LVL86:
 1125 0000 70B5     		push	{r4, r5, r6, lr}
 1126              	.LCFI8:
 1127              		.cfi_def_cfa_offset 16
 1128              		.cfi_offset 4, -16
 1129              		.cfi_offset 5, -12
 1130              		.cfi_offset 6, -8
 1131              		.cfi_offset 14, -4
 1132 0002 0400     		movs	r4, r0
 1133 0004 0E00     		movs	r6, r1
 1134              	.LVL87:
 597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 1135              		.loc 1 597 0
 1136 0006 037F     		ldrb	r3, [r0, #28]
 1137 0008 012B     		cmp	r3, #1
 1138 000a 60D0     		beq	.L86
 597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 1139              		.loc 1 597 0 is_stmt 0 discriminator 2
 1140 000c 0123     		movs	r3, #1
 1141 000e 0377     		strb	r3, [r0, #28]
 599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 1142              		.loc 1 599 0 is_stmt 1 discriminator 2
 1143 0010 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 47


 1144 0012 4377     		strb	r3, [r0, #29]
 601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   {
 1145              		.loc 1 601 0 discriminator 2
 1146 0014 002A     		cmp	r2, #0
 1147 0016 06D1     		bne	.L81
 601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   {
 1148              		.loc 1 601 0 is_stmt 0 discriminator 1
 1149 0018 4B78     		ldrb	r3, [r1, #1]
 1150 001a D906     		lsls	r1, r3, #27
 1151 001c 03D5     		bpl	.L81
 1152              	.LVL88:
 603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   }
 1153              		.loc 1 603 0 is_stmt 1
 1154 001e 1021     		movs	r1, #16
 1155 0020 8B43     		bics	r3, r1
 1156 0022 0A33     		adds	r3, r3, #10
 1157 0024 7370     		strb	r3, [r6, #1]
 1158              	.L81:
 608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   {   
 1159              		.loc 1 608 0
 1160 0026 002A     		cmp	r2, #0
 1161 0028 2FD1     		bne	.L82
 614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****                  ((uint32_t)RTC_ByteToBcd2(sDate->Month) << 8U) | \
 1162              		.loc 1 614 0
 1163 002a F078     		ldrb	r0, [r6, #3]
 1164              	.LVL89:
 1165 002c FFF7FEFF 		bl	RTC_ByteToBcd2
 1166              	.LVL90:
 1167 0030 0504     		lsls	r5, r0, #16
 615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****                  ((uint32_t)RTC_ByteToBcd2(sDate->Date)) | \
 1168              		.loc 1 615 0
 1169 0032 7078     		ldrb	r0, [r6, #1]
 1170 0034 FFF7FEFF 		bl	RTC_ByteToBcd2
 1171              	.LVL91:
 1172 0038 0002     		lsls	r0, r0, #8
 614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****                  ((uint32_t)RTC_ByteToBcd2(sDate->Month) << 8U) | \
 1173              		.loc 1 614 0
 1174 003a 0543     		orrs	r5, r0
 616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****                  ((uint32_t)sDate->WeekDay << 13U));   
 1175              		.loc 1 616 0
 1176 003c B078     		ldrb	r0, [r6, #2]
 1177 003e FFF7FEFF 		bl	RTC_ByteToBcd2
 1178              	.LVL92:
 615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****                  ((uint32_t)RTC_ByteToBcd2(sDate->Date)) | \
 1179              		.loc 1 615 0
 1180 0042 0543     		orrs	r5, r0
 617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   }
 1181              		.loc 1 617 0
 1182 0044 3078     		ldrb	r0, [r6]
 1183 0046 4003     		lsls	r0, r0, #13
 614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****                  ((uint32_t)RTC_ByteToBcd2(sDate->Month) << 8U) | \
 1184              		.loc 1 614 0
 1185 0048 0543     		orrs	r5, r0
 1186              	.LVL93:
 1187              	.L83:
 634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 1188              		.loc 1 634 0
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 48


 1189 004a 2368     		ldr	r3, [r4]
 1190 004c CA22     		movs	r2, #202
 1191 004e 5A62     		str	r2, [r3, #36]
 1192 0050 2368     		ldr	r3, [r4]
 1193 0052 773A     		subs	r2, r2, #119
 1194 0054 5A62     		str	r2, [r3, #36]
 637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   {
 1195              		.loc 1 637 0
 1196 0056 2000     		movs	r0, r4
 1197 0058 FFF7FEFF 		bl	RTC_EnterInitMode
 1198              	.LVL94:
 1199 005c 061E     		subs	r6, r0, #0
 1200              	.LVL95:
 1201 005e 1FD1     		bne	.L87
 653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 1202              		.loc 1 653 0
 1203 0060 2368     		ldr	r3, [r4]
 1204 0062 1C48     		ldr	r0, .L89
 1205 0064 0540     		ands	r5, r0
 1206              	.LVL96:
 1207 0066 5D60     		str	r5, [r3, #4]
 656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 1208              		.loc 1 656 0
 1209 0068 2268     		ldr	r2, [r4]
 1210 006a D368     		ldr	r3, [r2, #12]
 1211 006c 8021     		movs	r1, #128
 1212 006e 8B43     		bics	r3, r1
 1213 0070 D360     		str	r3, [r2, #12]
 659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     {
 1214              		.loc 1 659 0
 1215 0072 2368     		ldr	r3, [r4]
 1216 0074 9B68     		ldr	r3, [r3, #8]
 1217 0076 9B06     		lsls	r3, r3, #26
 1218 0078 1BD5     		bpl	.L88
 1219              	.L85:
 676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 1220              		.loc 1 676 0
 1221 007a 2368     		ldr	r3, [r4]
 1222 007c FF22     		movs	r2, #255
 1223 007e 5A62     		str	r2, [r3, #36]
 678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 1224              		.loc 1 678 0
 1225 0080 0123     		movs	r3, #1
 1226 0082 6377     		strb	r3, [r4, #29]
 681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 1227              		.loc 1 681 0
 1228 0084 0023     		movs	r3, #0
 1229 0086 2377     		strb	r3, [r4, #28]
 683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   }
 1230              		.loc 1 683 0
 1231 0088 22E0     		b	.L80
 1232              	.LVL97:
 1233              	.L82:
 622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     assert_param(IS_RTC_MONTH(datetmpreg));
 1234              		.loc 1 622 0
 1235 008a 7378     		ldrb	r3, [r6, #1]
 1236              	.LVL98:
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 49


 624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     assert_param(IS_RTC_DATE(datetmpreg));
 1237              		.loc 1 624 0
 1238 008c B078     		ldrb	r0, [r6, #2]
 1239              	.LVL99:
 627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****                   (((uint32_t)sDate->Month) << 8U) | \
 1240              		.loc 1 627 0
 1241 008e F578     		ldrb	r5, [r6, #3]
 1242 0090 2D04     		lsls	r5, r5, #16
 628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****                   ((uint32_t)sDate->Date) | \
 1243              		.loc 1 628 0
 1244 0092 1B02     		lsls	r3, r3, #8
 627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****                   (((uint32_t)sDate->Month) << 8U) | \
 1245              		.loc 1 627 0
 1246 0094 1D43     		orrs	r5, r3
 628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****                   ((uint32_t)sDate->Date) | \
 1247              		.loc 1 628 0
 1248 0096 0543     		orrs	r5, r0
 630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   }
 1249              		.loc 1 630 0
 1250 0098 3078     		ldrb	r0, [r6]
 1251 009a 4003     		lsls	r0, r0, #13
 627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****                   (((uint32_t)sDate->Month) << 8U) | \
 1252              		.loc 1 627 0
 1253 009c 0543     		orrs	r5, r0
 1254              	.LVL100:
 1255 009e D4E7     		b	.L83
 1256              	.LVL101:
 1257              	.L87:
 640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 1258              		.loc 1 640 0
 1259 00a0 2368     		ldr	r3, [r4]
 1260 00a2 FF22     		movs	r2, #255
 1261 00a4 5A62     		str	r2, [r3, #36]
 643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 1262              		.loc 1 643 0
 1263 00a6 0423     		movs	r3, #4
 1264 00a8 6377     		strb	r3, [r4, #29]
 646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 1265              		.loc 1 646 0
 1266 00aa 0023     		movs	r3, #0
 1267 00ac 2377     		strb	r3, [r4, #28]
 648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   } 
 1268              		.loc 1 648 0
 1269 00ae 0126     		movs	r6, #1
 1270 00b0 0EE0     		b	.L80
 1271              	.LVL102:
 1272              	.L88:
 661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       { 
 1273              		.loc 1 661 0
 1274 00b2 2000     		movs	r0, r4
 1275 00b4 FFF7FEFF 		bl	HAL_RTC_WaitForSynchro
 1276              	.LVL103:
 1277 00b8 0028     		cmp	r0, #0
 1278 00ba DED0     		beq	.L85
 664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         
 1279              		.loc 1 664 0
 1280 00bc 2368     		ldr	r3, [r4]
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 50


 1281 00be FF22     		movs	r2, #255
 1282 00c0 5A62     		str	r2, [r3, #36]
 666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         
 1283              		.loc 1 666 0
 1284 00c2 0423     		movs	r3, #4
 1285 00c4 6377     		strb	r3, [r4, #29]
 669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         
 1286              		.loc 1 669 0
 1287 00c6 0023     		movs	r3, #0
 1288 00c8 2377     		strb	r3, [r4, #28]
 671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       }
 1289              		.loc 1 671 0
 1290 00ca 0126     		movs	r6, #1
 1291 00cc 00E0     		b	.L80
 1292              	.LVL104:
 1293              	.L86:
 597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 1294              		.loc 1 597 0
 1295 00ce 0226     		movs	r6, #2
 1296              	.LVL105:
 1297              	.L80:
 685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 1298              		.loc 1 685 0
 1299 00d0 3000     		movs	r0, r6
 1300              		@ sp needed
 1301              	.LVL106:
 1302 00d2 70BD     		pop	{r4, r5, r6, pc}
 1303              	.L90:
 1304              		.align	2
 1305              	.L89:
 1306 00d4 3FFFFF00 		.word	16777023
 1307              		.cfi_endproc
 1308              	.LFE41:
 1310              		.section	.text.HAL_RTC_SetAlarm,"ax",%progbits
 1311              		.align	1
 1312              		.global	HAL_RTC_SetAlarm
 1313              		.syntax unified
 1314              		.code	16
 1315              		.thumb_func
 1316              		.fpu softvfp
 1318              	HAL_RTC_SetAlarm:
 1319              	.LFB43:
 755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   uint32_t tickstart = 0U;
 1320              		.loc 1 755 0
 1321              		.cfi_startproc
 1322              		@ args = 0, pretend = 0, frame = 0
 1323              		@ frame_needed = 0, uses_anonymous_args = 0
 1324              	.LVL107:
 1325 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1326              	.LCFI9:
 1327              		.cfi_def_cfa_offset 24
 1328              		.cfi_offset 3, -24
 1329              		.cfi_offset 4, -20
 1330              		.cfi_offset 5, -16
 1331              		.cfi_offset 6, -12
 1332              		.cfi_offset 7, -8
 1333              		.cfi_offset 14, -4
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 51


 1334 0002 0400     		movs	r4, r0
 1335 0004 0D00     		movs	r5, r1
 1336              	.LVL108:
 768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 1337              		.loc 1 768 0
 1338 0006 037F     		ldrb	r3, [r0, #28]
 1339 0008 012B     		cmp	r3, #1
 1340 000a 7AD0     		beq	.L99
 768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 1341              		.loc 1 768 0 is_stmt 0 discriminator 2
 1342 000c 0123     		movs	r3, #1
 1343 000e 0377     		strb	r3, [r0, #28]
 770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 1344              		.loc 1 770 0 is_stmt 1 discriminator 2
 1345 0010 0133     		adds	r3, r3, #1
 1346 0012 4377     		strb	r3, [r0, #29]
 772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   {
 1347              		.loc 1 772 0 discriminator 2
 1348 0014 002A     		cmp	r2, #0
 1349 0016 49D1     		bne	.L93
 774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     {
 1350              		.loc 1 774 0
 1351 0018 0368     		ldr	r3, [r0]
 1352 001a 9B68     		ldr	r3, [r3, #8]
 1353 001c 5B06     		lsls	r3, r3, #25
 1354 001e 01D4     		bmi	.L94
 781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(sAlarm->AlarmTime.Hours));
 1355              		.loc 1 781 0
 1356 0020 0023     		movs	r3, #0
 1357 0022 CB70     		strb	r3, [r1, #3]
 1358              	.L94:
 787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     {
 1359              		.loc 1 787 0
 1360 0024 EE69     		ldr	r6, [r5, #28]
 796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << 8U) | \
 1361              		.loc 1 796 0
 1362 0026 2878     		ldrb	r0, [r5]
 1363              	.LVL109:
 1364 0028 FFF7FEFF 		bl	RTC_ByteToBcd2
 1365              	.LVL110:
 1366 002c 0704     		lsls	r7, r0, #16
 797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds)) | \
 1367              		.loc 1 797 0
 1368 002e 6878     		ldrb	r0, [r5, #1]
 1369 0030 FFF7FEFF 		bl	RTC_ByteToBcd2
 1370              	.LVL111:
 1371 0034 0002     		lsls	r0, r0, #8
 796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << 8U) | \
 1372              		.loc 1 796 0
 1373 0036 0743     		orrs	r7, r0
 798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 1374              		.loc 1 798 0
 1375 0038 A878     		ldrb	r0, [r5, #2]
 1376 003a FFF7FEFF 		bl	RTC_ByteToBcd2
 1377              	.LVL112:
 797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds)) | \
 1378              		.loc 1 797 0
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 52


 1379 003e 0743     		orrs	r7, r0
 799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmDateWeekDay) << 24U) | \
 1380              		.loc 1 799 0
 1381 0040 E878     		ldrb	r0, [r5, #3]
 1382 0042 0004     		lsls	r0, r0, #16
 798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 1383              		.loc 1 798 0
 1384 0044 0743     		orrs	r7, r0
 800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 1385              		.loc 1 800 0
 1386 0046 2023     		movs	r3, #32
 1387 0048 E85C     		ldrb	r0, [r5, r3]
 1388 004a FFF7FEFF 		bl	RTC_ByteToBcd2
 1389              	.LVL113:
 1390 004e 0006     		lsls	r0, r0, #24
 799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmDateWeekDay) << 24U) | \
 1391              		.loc 1 799 0
 1392 0050 0743     		orrs	r7, r0
 800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 1393              		.loc 1 800 0
 1394 0052 3E43     		orrs	r6, r7
 796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << 8U) | \
 1395              		.loc 1 796 0
 1396 0054 6B69     		ldr	r3, [r5, #20]
 1397 0056 1E43     		orrs	r6, r3
 1398              	.LVL114:
 1399              	.L95:
 842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 1400              		.loc 1 842 0
 1401 0058 6F68     		ldr	r7, [r5, #4]
 1402 005a AB69     		ldr	r3, [r5, #24]
 1403 005c 1F43     		orrs	r7, r3
 1404              	.LVL115:
 845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 1405              		.loc 1 845 0
 1406 005e 2368     		ldr	r3, [r4]
 1407 0060 CA22     		movs	r2, #202
 1408 0062 5A62     		str	r2, [r3, #36]
 1409 0064 2368     		ldr	r3, [r4]
 1410 0066 773A     		subs	r2, r2, #119
 1411 0068 5A62     		str	r2, [r3, #36]
 848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 1412              		.loc 1 848 0
 1413 006a 2268     		ldr	r2, [r4]
 1414 006c 9368     		ldr	r3, [r2, #8]
 1415 006e 2649     		ldr	r1, .L101
 1416 0070 0B40     		ands	r3, r1
 1417 0072 9360     		str	r3, [r2, #8]
 851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****          
 1418              		.loc 1 851 0
 1419 0074 2268     		ldr	r2, [r4]
 1420 0076 9368     		ldr	r3, [r2, #8]
 1421 0078 2449     		ldr	r1, .L101+4
 1422 007a 0B40     		ands	r3, r1
 1423 007c 9360     		str	r3, [r2, #8]
 853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Wait till RTC ALRAWF flag is set and if Time out is reached exit */
 1424              		.loc 1 853 0
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 53


 1425 007e FFF7FEFF 		bl	HAL_GetTick
 1426              	.LVL116:
 1427 0082 0500     		movs	r5, r0
 1428              	.LVL117:
 1429              	.L97:
 855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   {
 1430              		.loc 1 855 0
 1431 0084 2368     		ldr	r3, [r4]
 1432 0086 DA68     		ldr	r2, [r3, #12]
 1433 0088 D207     		lsls	r2, r2, #31
 1434 008a 28D4     		bmi	.L100
 857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     {
 1435              		.loc 1 857 0
 1436 008c FFF7FEFF 		bl	HAL_GetTick
 1437              	.LVL118:
 1438 0090 401B     		subs	r0, r0, r5
 1439 0092 FA23     		movs	r3, #250
 1440 0094 9B00     		lsls	r3, r3, #2
 1441 0096 9842     		cmp	r0, r3
 1442 0098 F4D9     		bls	.L97
 860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 1443              		.loc 1 860 0
 1444 009a 2368     		ldr	r3, [r4]
 1445 009c FF22     		movs	r2, #255
 1446 009e 5A62     		str	r2, [r3, #36]
 862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 1447              		.loc 1 862 0
 1448 00a0 0323     		movs	r3, #3
 1449 00a2 6377     		strb	r3, [r4, #29]
 865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         
 1450              		.loc 1 865 0
 1451 00a4 0023     		movs	r3, #0
 1452 00a6 2377     		strb	r3, [r4, #28]
 867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     }
 1453              		.loc 1 867 0
 1454 00a8 0320     		movs	r0, #3
 1455 00aa 2BE0     		b	.L92
 1456              	.LVL119:
 1457              	.L93:
 806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     {
 1458              		.loc 1 806 0
 1459 00ac 0368     		ldr	r3, [r0]
 1460 00ae 9B68     		ldr	r3, [r3, #8]
 1461 00b0 5B06     		lsls	r3, r3, #25
 1462 00b2 01D4     		bmi	.L96
 814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
 1463              		.loc 1 814 0
 1464 00b4 0023     		movs	r3, #0
 1465 00b6 CB70     		strb	r3, [r1, #3]
 1466              	.L96:
 832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << 8U) | \
 1467              		.loc 1 832 0
 1468 00b8 2E78     		ldrb	r6, [r5]
 1469 00ba 3604     		lsls	r6, r6, #16
 833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t) sAlarm->AlarmTime.Seconds) | \
 1470              		.loc 1 833 0
 1471 00bc 6B78     		ldrb	r3, [r5, #1]
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 54


 1472 00be 1B02     		lsls	r3, r3, #8
 832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << 8U) | \
 1473              		.loc 1 832 0
 1474 00c0 1E43     		orrs	r6, r3
 834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 1475              		.loc 1 834 0
 1476 00c2 AB78     		ldrb	r3, [r5, #2]
 833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t) sAlarm->AlarmTime.Seconds) | \
 1477              		.loc 1 833 0
 1478 00c4 1E43     		orrs	r6, r3
 835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmDateWeekDay) << 24U) | \
 1479              		.loc 1 835 0
 1480 00c6 EB78     		ldrb	r3, [r5, #3]
 1481 00c8 1B04     		lsls	r3, r3, #16
 834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 1482              		.loc 1 834 0
 1483 00ca 1E43     		orrs	r6, r3
 836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 1484              		.loc 1 836 0
 1485 00cc 2023     		movs	r3, #32
 1486 00ce EB5C     		ldrb	r3, [r5, r3]
 1487 00d0 1B06     		lsls	r3, r3, #24
 835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmDateWeekDay) << 24U) | \
 1488              		.loc 1 835 0
 1489 00d2 1E43     		orrs	r6, r3
 836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 1490              		.loc 1 836 0
 1491 00d4 EB69     		ldr	r3, [r5, #28]
 1492 00d6 1E43     		orrs	r6, r3
 832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << 8U) | \
 1493              		.loc 1 832 0
 1494 00d8 6B69     		ldr	r3, [r5, #20]
 1495 00da 1E43     		orrs	r6, r3
 1496              	.LVL120:
 1497 00dc BCE7     		b	.L95
 1498              	.LVL121:
 1499              	.L100:
 871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Configure the Alarm A Sub Second register */
 1500              		.loc 1 871 0
 1501 00de DE61     		str	r6, [r3, #28]
 873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Configure the Alarm state: Enable Alarm */
 1502              		.loc 1 873 0
 1503 00e0 2368     		ldr	r3, [r4]
 1504 00e2 5F64     		str	r7, [r3, #68]
 875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 1505              		.loc 1 875 0
 1506 00e4 2268     		ldr	r2, [r4]
 1507 00e6 9168     		ldr	r1, [r2, #8]
 1508 00e8 8023     		movs	r3, #128
 1509 00ea 5B00     		lsls	r3, r3, #1
 1510 00ec 0B43     		orrs	r3, r1
 1511 00ee 9360     		str	r3, [r2, #8]
 878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 1512              		.loc 1 878 0
 1513 00f0 2368     		ldr	r3, [r4]
 1514 00f2 FF22     		movs	r2, #255
 1515 00f4 5A62     		str	r2, [r3, #36]
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 55


 881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 1516              		.loc 1 881 0
 1517 00f6 0123     		movs	r3, #1
 1518 00f8 6377     		strb	r3, [r4, #29]
 884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 1519              		.loc 1 884 0
 1520 00fa 0023     		movs	r3, #0
 1521 00fc 2377     		strb	r3, [r4, #28]
 886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** }
 1522              		.loc 1 886 0
 1523 00fe 0020     		movs	r0, #0
 1524 0100 00E0     		b	.L92
 1525              	.LVL122:
 1526              	.L99:
 768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 1527              		.loc 1 768 0
 1528 0102 0220     		movs	r0, #2
 1529              	.LVL123:
 1530              	.L92:
 887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 1531              		.loc 1 887 0
 1532              		@ sp needed
 1533              	.LVL124:
 1534 0104 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1535              	.L102:
 1536 0106 C046     		.align	2
 1537              	.L101:
 1538 0108 FFFEFFFF 		.word	-257
 1539 010c FFEFFFFF 		.word	-4097
 1540              		.cfi_endproc
 1541              	.LFE43:
 1543              		.section	.text.HAL_RTC_SetAlarm_IT,"ax",%progbits
 1544              		.align	1
 1545              		.global	HAL_RTC_SetAlarm_IT
 1546              		.syntax unified
 1547              		.code	16
 1548              		.thumb_func
 1549              		.fpu softvfp
 1551              	HAL_RTC_SetAlarm_IT:
 1552              	.LFB44:
 903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   uint32_t tickstart = 0U;
 1553              		.loc 1 903 0
 1554              		.cfi_startproc
 1555              		@ args = 0, pretend = 0, frame = 0
 1556              		@ frame_needed = 0, uses_anonymous_args = 0
 1557              	.LVL125:
 1558 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1559              	.LCFI10:
 1560              		.cfi_def_cfa_offset 24
 1561              		.cfi_offset 3, -24
 1562              		.cfi_offset 4, -20
 1563              		.cfi_offset 5, -16
 1564              		.cfi_offset 6, -12
 1565              		.cfi_offset 7, -8
 1566              		.cfi_offset 14, -4
 1567 0002 0400     		movs	r4, r0
 1568 0004 0D00     		movs	r5, r1
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 56


 1569              	.LVL126:
 916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 1570              		.loc 1 916 0
 1571 0006 037F     		ldrb	r3, [r0, #28]
 1572 0008 012B     		cmp	r3, #1
 1573 000a 00D1     		bne	.LCB1439
 1574 000c 8BE0     		b	.L111	@long jump
 1575              	.LCB1439:
 916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 1576              		.loc 1 916 0 is_stmt 0 discriminator 2
 1577 000e 0123     		movs	r3, #1
 1578 0010 0377     		strb	r3, [r0, #28]
 918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 1579              		.loc 1 918 0 is_stmt 1 discriminator 2
 1580 0012 0133     		adds	r3, r3, #1
 1581 0014 4377     		strb	r3, [r0, #29]
 920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   {
 1582              		.loc 1 920 0 discriminator 2
 1583 0016 002A     		cmp	r2, #0
 1584 0018 4BD1     		bne	.L105
 922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     {
 1585              		.loc 1 922 0
 1586 001a 0368     		ldr	r3, [r0]
 1587 001c 9B68     		ldr	r3, [r3, #8]
 1588 001e 5B06     		lsls	r3, r3, #25
 1589 0020 01D4     		bmi	.L106
 929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(sAlarm->AlarmTime.Hours));
 1590              		.loc 1 929 0
 1591 0022 0023     		movs	r3, #0
 1592 0024 CB70     		strb	r3, [r1, #3]
 1593              	.L106:
 935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     {
 1594              		.loc 1 935 0
 1595 0026 EE69     		ldr	r6, [r5, #28]
 943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << 8U) | \
 1596              		.loc 1 943 0
 1597 0028 2878     		ldrb	r0, [r5]
 1598              	.LVL127:
 1599 002a FFF7FEFF 		bl	RTC_ByteToBcd2
 1600              	.LVL128:
 1601 002e 0704     		lsls	r7, r0, #16
 944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds)) | \
 1602              		.loc 1 944 0
 1603 0030 6878     		ldrb	r0, [r5, #1]
 1604 0032 FFF7FEFF 		bl	RTC_ByteToBcd2
 1605              	.LVL129:
 1606 0036 0002     		lsls	r0, r0, #8
 943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << 8U) | \
 1607              		.loc 1 943 0
 1608 0038 0743     		orrs	r7, r0
 945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 1609              		.loc 1 945 0
 1610 003a A878     		ldrb	r0, [r5, #2]
 1611 003c FFF7FEFF 		bl	RTC_ByteToBcd2
 1612              	.LVL130:
 944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds)) | \
 1613              		.loc 1 944 0
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 57


 1614 0040 0743     		orrs	r7, r0
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmDateWeekDay) << 24U) | \
 1615              		.loc 1 946 0
 1616 0042 E878     		ldrb	r0, [r5, #3]
 1617 0044 0004     		lsls	r0, r0, #16
 945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 1618              		.loc 1 945 0
 1619 0046 0743     		orrs	r7, r0
 947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 1620              		.loc 1 947 0
 1621 0048 2023     		movs	r3, #32
 1622 004a E85C     		ldrb	r0, [r5, r3]
 1623 004c FFF7FEFF 		bl	RTC_ByteToBcd2
 1624              	.LVL131:
 1625 0050 0006     		lsls	r0, r0, #24
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmDateWeekDay) << 24U) | \
 1626              		.loc 1 946 0
 1627 0052 0743     		orrs	r7, r0
 947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 1628              		.loc 1 947 0
 1629 0054 3E43     		orrs	r6, r7
 943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << 8U) | \
 1630              		.loc 1 943 0
 1631 0056 6B69     		ldr	r3, [r5, #20]
 1632 0058 1E43     		orrs	r6, r3
 1633              	.LVL132:
 1634              	.L107:
 987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 1635              		.loc 1 987 0
 1636 005a 6F68     		ldr	r7, [r5, #4]
 1637 005c AB69     		ldr	r3, [r5, #24]
 1638 005e 1F43     		orrs	r7, r3
 1639              	.LVL133:
 990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 1640              		.loc 1 990 0
 1641 0060 2368     		ldr	r3, [r4]
 1642 0062 CA22     		movs	r2, #202
 1643 0064 5A62     		str	r2, [r3, #36]
 1644 0066 2368     		ldr	r3, [r4]
 1645 0068 773A     		subs	r2, r2, #119
 1646 006a 5A62     		str	r2, [r3, #36]
 993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 1647              		.loc 1 993 0
 1648 006c 2268     		ldr	r2, [r4]
 1649 006e 9368     		ldr	r3, [r2, #8]
 1650 0070 2E49     		ldr	r1, .L113
 1651 0072 0B40     		ands	r3, r1
 1652 0074 9360     		str	r3, [r2, #8]
 996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 1653              		.loc 1 996 0
 1654 0076 2168     		ldr	r1, [r4]
 1655 0078 CA68     		ldr	r2, [r1, #12]
 1656 007a FF23     		movs	r3, #255
 1657 007c 1A40     		ands	r2, r3
 1658 007e 2C4B     		ldr	r3, .L113+4
 1659 0080 1343     		orrs	r3, r2
 1660 0082 CB60     		str	r3, [r1, #12]
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 58


 998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 1661              		.loc 1 998 0
 1662 0084 FFF7FEFF 		bl	HAL_GetTick
 1663              	.LVL134:
 1664 0088 0500     		movs	r5, r0
 1665              	.LVL135:
 1666              	.L109:
1001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   {
 1667              		.loc 1 1001 0
 1668 008a 2368     		ldr	r3, [r4]
 1669 008c DA68     		ldr	r2, [r3, #12]
 1670 008e D207     		lsls	r2, r2, #31
 1671 0090 28D4     		bmi	.L112
1003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     {
 1672              		.loc 1 1003 0
 1673 0092 FFF7FEFF 		bl	HAL_GetTick
 1674              	.LVL136:
 1675 0096 401B     		subs	r0, r0, r5
 1676 0098 FA23     		movs	r3, #250
 1677 009a 9B00     		lsls	r3, r3, #2
 1678 009c 9842     		cmp	r0, r3
 1679 009e F4D9     		bls	.L109
1006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         
 1680              		.loc 1 1006 0
 1681 00a0 2368     		ldr	r3, [r4]
 1682 00a2 FF22     		movs	r2, #255
 1683 00a4 5A62     		str	r2, [r3, #36]
1008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         
 1684              		.loc 1 1008 0
 1685 00a6 0323     		movs	r3, #3
 1686 00a8 6377     		strb	r3, [r4, #29]
1011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****         
 1687              		.loc 1 1011 0
 1688 00aa 0023     		movs	r3, #0
 1689 00ac 2377     		strb	r3, [r4, #28]
1013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     }  
 1690              		.loc 1 1013 0
 1691 00ae 0320     		movs	r0, #3
 1692 00b0 3AE0     		b	.L104
 1693              	.LVL137:
 1694              	.L105:
 953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     {
 1695              		.loc 1 953 0
 1696 00b2 0368     		ldr	r3, [r0]
 1697 00b4 9B68     		ldr	r3, [r3, #8]
 1698 00b6 5B06     		lsls	r3, r3, #25
 1699 00b8 01D4     		bmi	.L108
 961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
 1700              		.loc 1 961 0
 1701 00ba 0023     		movs	r3, #0
 1702 00bc CB70     		strb	r3, [r1, #3]
 1703              	.L108:
 978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << 8U) | \
 1704              		.loc 1 978 0
 1705 00be 2E78     		ldrb	r6, [r5]
 1706 00c0 3604     		lsls	r6, r6, #16
 979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t) sAlarm->AlarmTime.Seconds) | \
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 59


 1707              		.loc 1 979 0
 1708 00c2 6B78     		ldrb	r3, [r5, #1]
 1709 00c4 1B02     		lsls	r3, r3, #8
 978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << 8U) | \
 1710              		.loc 1 978 0
 1711 00c6 1E43     		orrs	r6, r3
 980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 1712              		.loc 1 980 0
 1713 00c8 AB78     		ldrb	r3, [r5, #2]
 979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t) sAlarm->AlarmTime.Seconds) | \
 1714              		.loc 1 979 0
 1715 00ca 1E43     		orrs	r6, r3
 981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmDateWeekDay) << 24U) | \
 1716              		.loc 1 981 0
 1717 00cc EB78     		ldrb	r3, [r5, #3]
 1718 00ce 1B04     		lsls	r3, r3, #16
 980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 1719              		.loc 1 980 0
 1720 00d0 1E43     		orrs	r6, r3
 982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 1721              		.loc 1 982 0
 1722 00d2 2023     		movs	r3, #32
 1723 00d4 EB5C     		ldrb	r3, [r5, r3]
 1724 00d6 1B06     		lsls	r3, r3, #24
 981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmDateWeekDay) << 24U) | \
 1725              		.loc 1 981 0
 1726 00d8 1E43     		orrs	r6, r3
 982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 1727              		.loc 1 982 0
 1728 00da EB69     		ldr	r3, [r5, #28]
 1729 00dc 1E43     		orrs	r6, r3
 978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << 8U) | \
 1730              		.loc 1 978 0
 1731 00de 6B69     		ldr	r3, [r5, #20]
 1732 00e0 1E43     		orrs	r6, r3
 1733              	.LVL138:
 1734 00e2 BAE7     		b	.L107
 1735              	.LVL139:
 1736              	.L112:
1017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Configure the Alarm A Sub Second register */
 1737              		.loc 1 1017 0
 1738 00e4 DE61     		str	r6, [r3, #28]
1019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Configure the Alarm state: Enable Alarm */
 1739              		.loc 1 1019 0
 1740 00e6 2368     		ldr	r3, [r4]
 1741 00e8 5F64     		str	r7, [r3, #68]
1021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   /* Configure the Alarm interrupt */
 1742              		.loc 1 1021 0
 1743 00ea 2268     		ldr	r2, [r4]
 1744 00ec 9168     		ldr	r1, [r2, #8]
 1745 00ee 8023     		movs	r3, #128
 1746 00f0 5B00     		lsls	r3, r3, #1
 1747 00f2 0B43     		orrs	r3, r1
 1748 00f4 9360     		str	r3, [r2, #8]
1023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 1749              		.loc 1 1023 0
 1750 00f6 2268     		ldr	r2, [r4]
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 60


 1751 00f8 9168     		ldr	r1, [r2, #8]
 1752 00fa 8023     		movs	r3, #128
 1753 00fc 5B01     		lsls	r3, r3, #5
 1754 00fe 0B43     		orrs	r3, r1
 1755 0100 9360     		str	r3, [r2, #8]
1026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 1756              		.loc 1 1026 0
 1757 0102 0C4B     		ldr	r3, .L113+8
 1758 0104 1968     		ldr	r1, [r3]
 1759 0106 8022     		movs	r2, #128
 1760 0108 9202     		lsls	r2, r2, #10
 1761 010a 1143     		orrs	r1, r2
 1762 010c 1960     		str	r1, [r3]
1028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 1763              		.loc 1 1028 0
 1764 010e 9968     		ldr	r1, [r3, #8]
 1765 0110 0A43     		orrs	r2, r1
 1766 0112 9A60     		str	r2, [r3, #8]
1031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 1767              		.loc 1 1031 0
 1768 0114 2368     		ldr	r3, [r4]
 1769 0116 FF22     		movs	r2, #255
 1770 0118 5A62     		str	r2, [r3, #36]
1033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 1771              		.loc 1 1033 0
 1772 011a 0123     		movs	r3, #1
 1773 011c 6377     		strb	r3, [r4, #29]
1036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 1774              		.loc 1 1036 0
 1775 011e 0023     		movs	r3, #0
 1776 0120 2377     		strb	r3, [r4, #28]
1038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** }
 1777              		.loc 1 1038 0
 1778 0122 0020     		movs	r0, #0
 1779 0124 00E0     		b	.L104
 1780              	.LVL140:
 1781              	.L111:
 916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 1782              		.loc 1 916 0
 1783 0126 0220     		movs	r0, #2
 1784              	.LVL141:
 1785              	.L104:
1039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 1786              		.loc 1 1039 0
 1787              		@ sp needed
 1788              	.LVL142:
 1789 0128 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1790              	.L114:
 1791 012a C046     		.align	2
 1792              	.L113:
 1793 012c FFFEFFFF 		.word	-257
 1794 0130 7FFEFFFF 		.word	-385
 1795 0134 00040140 		.word	1073808384
 1796              		.cfi_endproc
 1797              	.LFE44:
 1799              		.section	.text.RTC_Bcd2ToByte,"ax",%progbits
 1800              		.align	1
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 61


 1801              		.global	RTC_Bcd2ToByte
 1802              		.syntax unified
 1803              		.code	16
 1804              		.thumb_func
 1805              		.fpu softvfp
 1807              	RTC_Bcd2ToByte:
 1808              	.LFB54:
1364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
1365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** /**
1366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @brief  Convert from 2 digit BCD to Binary.
1367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @param  Value: BCD value to be converted
1368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   * @retval Converted word
1369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   */
1370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** uint8_t RTC_Bcd2ToByte(uint8_t Value)
1371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** {
 1809              		.loc 1 1371 0
 1810              		.cfi_startproc
 1811              		@ args = 0, pretend = 0, frame = 0
 1812              		@ frame_needed = 0, uses_anonymous_args = 0
 1813              		@ link register save eliminated.
 1814              	.LVL143:
1372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   uint32_t tmp = 0U;
1373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   tmp = ((uint8_t)(Value & (uint8_t)0xF0U) >> (uint8_t)0x4U) * 10U;
 1815              		.loc 1 1373 0
 1816 0000 0209     		lsrs	r2, r0, #4
 1817 0002 9300     		lsls	r3, r2, #2
 1818 0004 9B18     		adds	r3, r3, r2
 1819 0006 5A00     		lsls	r2, r3, #1
 1820              	.LVL144:
1374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   return (tmp + (Value & (uint8_t)0x0FU));
 1821              		.loc 1 1374 0
 1822 0008 0F23     		movs	r3, #15
 1823 000a 1840     		ands	r0, r3
 1824              	.LVL145:
 1825 000c 8018     		adds	r0, r0, r2
 1826 000e C0B2     		uxtb	r0, r0
1375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** }
 1827              		.loc 1 1375 0
 1828              		@ sp needed
 1829 0010 7047     		bx	lr
 1830              		.cfi_endproc
 1831              	.LFE54:
 1833              		.section	.text.HAL_RTC_GetTime,"ax",%progbits
 1834              		.align	1
 1835              		.global	HAL_RTC_GetTime
 1836              		.syntax unified
 1837              		.code	16
 1838              		.thumb_func
 1839              		.fpu softvfp
 1841              	HAL_RTC_GetTime:
 1842              	.LFB40:
 546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   uint32_t tmpreg = 0;
 1843              		.loc 1 546 0
 1844              		.cfi_startproc
 1845              		@ args = 0, pretend = 0, frame = 0
 1846              		@ frame_needed = 0, uses_anonymous_args = 0
 1847              	.LVL146:
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 62


 1848 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1849              	.LCFI11:
 1850              		.cfi_def_cfa_offset 24
 1851              		.cfi_offset 3, -24
 1852              		.cfi_offset 4, -20
 1853              		.cfi_offset 5, -16
 1854              		.cfi_offset 6, -12
 1855              		.cfi_offset 7, -8
 1856              		.cfi_offset 14, -4
 1857 0002 0C00     		movs	r4, r1
 1858              	.LVL147:
 553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 1859              		.loc 1 553 0
 1860 0004 0368     		ldr	r3, [r0]
 1861 0006 9B6A     		ldr	r3, [r3, #40]
 1862 0008 4B60     		str	r3, [r1, #4]
 556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 1863              		.loc 1 556 0
 1864 000a 0368     		ldr	r3, [r0]
 1865 000c 1B69     		ldr	r3, [r3, #16]
 1866 000e 5B04     		lsls	r3, r3, #17
 1867 0010 5B0C     		lsrs	r3, r3, #17
 1868 0012 8B60     		str	r3, [r1, #8]
 559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 1869              		.loc 1 559 0
 1870 0014 0368     		ldr	r3, [r0]
 1871 0016 1B68     		ldr	r3, [r3]
 1872 0018 0E49     		ldr	r1, .L118
 1873              	.LVL148:
 1874 001a 0B40     		ands	r3, r1
 1875              	.LVL149:
 562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   sTime->Minutes = (uint8_t)((tmpreg & (RTC_TR_MNT | RTC_TR_MNU)) >>8U);
 1876              		.loc 1 562 0
 1877 001c 1E0C     		lsrs	r6, r3, #16
 1878 001e 3F20     		movs	r0, #63
 1879              	.LVL150:
 1880 0020 3040     		ands	r0, r6
 1881 0022 2070     		strb	r0, [r4]
 563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   sTime->Seconds = (uint8_t)(tmpreg & (RTC_TR_ST | RTC_TR_SU));
 1882              		.loc 1 563 0
 1883 0024 1D0A     		lsrs	r5, r3, #8
 1884 0026 7F27     		movs	r7, #127
 1885 0028 3D40     		ands	r5, r7
 1886 002a 6570     		strb	r5, [r4, #1]
 564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   sTime->TimeFormat = (uint8_t)((tmpreg & (RTC_TR_PM)) >> 16U); 
 1887              		.loc 1 564 0
 1888 002c 1F40     		ands	r7, r3
 1889 002e A770     		strb	r7, [r4, #2]
 565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   
 1890              		.loc 1 565 0
 1891 0030 4021     		movs	r1, #64
 1892 0032 3140     		ands	r1, r6
 1893 0034 E170     		strb	r1, [r4, #3]
 568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   {
 1894              		.loc 1 568 0
 1895 0036 002A     		cmp	r2, #0
 1896 0038 0AD1     		bne	.L117
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 63


 571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     sTime->Minutes = (uint8_t)RTC_Bcd2ToByte(sTime->Minutes);
 1897              		.loc 1 571 0
 1898 003a FFF7FEFF 		bl	RTC_Bcd2ToByte
 1899              	.LVL151:
 1900 003e 2070     		strb	r0, [r4]
 572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     sTime->Seconds = (uint8_t)RTC_Bcd2ToByte(sTime->Seconds);  
 1901              		.loc 1 572 0
 1902 0040 2800     		movs	r0, r5
 1903 0042 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1904              	.LVL152:
 1905 0046 6070     		strb	r0, [r4, #1]
 573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   }
 1906              		.loc 1 573 0
 1907 0048 3800     		movs	r0, r7
 1908 004a FFF7FEFF 		bl	RTC_Bcd2ToByte
 1909              	.LVL153:
 1910 004e A070     		strb	r0, [r4, #2]
 1911              	.L117:
 577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 1912              		.loc 1 577 0
 1913 0050 0020     		movs	r0, #0
 1914              		@ sp needed
 1915              	.LVL154:
 1916 0052 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1917              	.L119:
 1918              		.align	2
 1919              	.L118:
 1920 0054 7F7F7F00 		.word	8355711
 1921              		.cfi_endproc
 1922              	.LFE40:
 1924              		.section	.text.HAL_RTC_GetDate,"ax",%progbits
 1925              		.align	1
 1926              		.global	HAL_RTC_GetDate
 1927              		.syntax unified
 1928              		.code	16
 1929              		.thumb_func
 1930              		.fpu softvfp
 1932              	HAL_RTC_GetDate:
 1933              	.LFB42:
 701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   uint32_t datetmpreg = 0;
 1934              		.loc 1 701 0
 1935              		.cfi_startproc
 1936              		@ args = 0, pretend = 0, frame = 0
 1937              		@ frame_needed = 0, uses_anonymous_args = 0
 1938              	.LVL155:
 1939 0000 70B5     		push	{r4, r5, r6, lr}
 1940              	.LCFI12:
 1941              		.cfi_def_cfa_offset 16
 1942              		.cfi_offset 4, -16
 1943              		.cfi_offset 5, -12
 1944              		.cfi_offset 6, -8
 1945              		.cfi_offset 14, -4
 1946 0002 0C00     		movs	r4, r1
 1947              	.LVL156:
 708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 1948              		.loc 1 708 0
 1949 0004 0368     		ldr	r3, [r0]
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 64


 1950 0006 5B68     		ldr	r3, [r3, #4]
 1951 0008 0E49     		ldr	r1, .L122
 1952              	.LVL157:
 1953 000a 0B40     		ands	r3, r1
 1954              	.LVL158:
 711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   sDate->Month = (uint8_t)((datetmpreg & (RTC_DR_MT | RTC_DR_MU)) >> 8U);
 1955              		.loc 1 711 0
 1956 000c 180C     		lsrs	r0, r3, #16
 1957              	.LVL159:
 1958 000e E070     		strb	r0, [r4, #3]
 712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   sDate->Date = (uint8_t)(datetmpreg & (RTC_DR_DT | RTC_DR_DU));
 1959              		.loc 1 712 0
 1960 0010 190A     		lsrs	r1, r3, #8
 1961 0012 1F26     		movs	r6, #31
 1962 0014 0E40     		ands	r6, r1
 1963 0016 6670     		strb	r6, [r4, #1]
 713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   sDate->WeekDay = (uint8_t)((datetmpreg & (RTC_DR_WDU)) >> 13U); 
 1964              		.loc 1 713 0
 1965 0018 3F25     		movs	r5, #63
 1966 001a 1D40     		ands	r5, r3
 1967 001c A570     		strb	r5, [r4, #2]
 714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 1968              		.loc 1 714 0
 1969 001e 5B0B     		lsrs	r3, r3, #13
 1970              	.LVL160:
 1971 0020 0721     		movs	r1, #7
 1972 0022 0B40     		ands	r3, r1
 1973 0024 2370     		strb	r3, [r4]
 717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   {    
 1974              		.loc 1 717 0
 1975 0026 002A     		cmp	r2, #0
 1976 0028 0AD1     		bne	.L121
 720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     sDate->Month = (uint8_t)RTC_Bcd2ToByte(sDate->Month);
 1977              		.loc 1 720 0
 1978 002a FFF7FEFF 		bl	RTC_Bcd2ToByte
 1979              	.LVL161:
 1980 002e E070     		strb	r0, [r4, #3]
 721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     sDate->Date = (uint8_t)RTC_Bcd2ToByte(sDate->Date);  
 1981              		.loc 1 721 0
 1982 0030 3000     		movs	r0, r6
 1983 0032 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1984              	.LVL162:
 1985 0036 6070     		strb	r0, [r4, #1]
 722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   }
 1986              		.loc 1 722 0
 1987 0038 2800     		movs	r0, r5
 1988 003a FFF7FEFF 		bl	RTC_Bcd2ToByte
 1989              	.LVL163:
 1990 003e A070     		strb	r0, [r4, #2]
 1991              	.L121:
 725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 1992              		.loc 1 725 0
 1993 0040 0020     		movs	r0, #0
 1994              		@ sp needed
 1995              	.LVL164:
 1996 0042 70BD     		pop	{r4, r5, r6, pc}
 1997              	.L123:
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 65


 1998              		.align	2
 1999              	.L122:
 2000 0044 3FFFFF00 		.word	16777023
 2001              		.cfi_endproc
 2002              	.LFE42:
 2004              		.section	.text.HAL_RTC_GetAlarm,"ax",%progbits
 2005              		.align	1
 2006              		.global	HAL_RTC_GetAlarm
 2007              		.syntax unified
 2008              		.code	16
 2009              		.thumb_func
 2010              		.fpu softvfp
 2012              	HAL_RTC_GetAlarm:
 2013              	.LFB46:
1112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   uint32_t tmpreg = 0U, subsecondtmpreg = 0U;
 2014              		.loc 1 1112 0
 2015              		.cfi_startproc
 2016              		@ args = 0, pretend = 0, frame = 0
 2017              		@ frame_needed = 0, uses_anonymous_args = 0
 2018              	.LVL165:
 2019 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2020              	.LCFI13:
 2021              		.cfi_def_cfa_offset 20
 2022              		.cfi_offset 4, -20
 2023              		.cfi_offset 5, -16
 2024              		.cfi_offset 6, -12
 2025              		.cfi_offset 7, -8
 2026              		.cfi_offset 14, -4
 2027 0002 C646     		mov	lr, r8
 2028 0004 00B5     		push	{lr}
 2029              	.LCFI14:
 2030              		.cfi_def_cfa_offset 24
 2031              		.cfi_offset 8, -24
 2032 0006 0C00     		movs	r4, r1
 2033              	.LVL166:
1119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 2034              		.loc 1 1119 0
 2035 0008 8022     		movs	r2, #128
 2036              	.LVL167:
 2037 000a 5200     		lsls	r2, r2, #1
 2038 000c 4A62     		str	r2, [r1, #36]
1121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   subsecondtmpreg = (uint32_t)((hrtc->Instance->ALRMASSR ) & RTC_ALRMASSR_SS);
 2039              		.loc 1 1121 0
 2040 000e 0168     		ldr	r1, [r0]
 2041              	.LVL168:
 2042 0010 CA69     		ldr	r2, [r1, #28]
 2043              	.LVL169:
1122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 2044              		.loc 1 1122 0
 2045 0012 496C     		ldr	r1, [r1, #68]
 2046 0014 4904     		lsls	r1, r1, #17
 2047 0016 490C     		lsrs	r1, r1, #17
 2048              	.LVL170:
1125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   sAlarm->AlarmTime.Minutes = (uint32_t)((tmpreg & (RTC_ALRMAR_MNT | RTC_ALRMAR_MNU)) >> 8U);
 2049              		.loc 1 1125 0
 2050 0018 170C     		lsrs	r7, r2, #16
 2051 001a FFB2     		uxtb	r7, r7
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 66


 2052 001c 3F20     		movs	r0, #63
 2053              	.LVL171:
 2054 001e 8446     		mov	ip, r0
 2055 0020 3840     		ands	r0, r7
 2056 0022 2070     		strb	r0, [r4]
1126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   sAlarm->AlarmTime.Seconds = (uint32_t)(tmpreg & (RTC_ALRMAR_ST | RTC_ALRMAR_SU));
 2057              		.loc 1 1126 0
 2058 0024 150A     		lsrs	r5, r2, #8
 2059 0026 7F26     		movs	r6, #127
 2060 0028 3540     		ands	r5, r6
 2061 002a A846     		mov	r8, r5
 2062 002c 6570     		strb	r5, [r4, #1]
1127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   sAlarm->AlarmTime.TimeFormat = (uint32_t)((tmpreg & RTC_ALRMAR_PM) >> 16U);
 2063              		.loc 1 1127 0
 2064 002e 1640     		ands	r6, r2
 2065 0030 A670     		strb	r6, [r4, #2]
1128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   sAlarm->AlarmTime.SubSeconds = (uint32_t) subsecondtmpreg;
 2066              		.loc 1 1128 0
 2067 0032 4025     		movs	r5, #64
 2068 0034 2F40     		ands	r7, r5
 2069 0036 E770     		strb	r7, [r4, #3]
1129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   sAlarm->AlarmDateWeekDay = (uint32_t)((tmpreg & (RTC_ALRMAR_DT | RTC_ALRMAR_DU)) >> 24U);
 2070              		.loc 1 1129 0
 2071 0038 6160     		str	r1, [r4, #4]
1130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   sAlarm->AlarmDateWeekDaySel = (uint32_t)(tmpreg & RTC_ALRMAR_WDSEL);
 2072              		.loc 1 1130 0
 2073 003a 150E     		lsrs	r5, r2, #24
 2074 003c 6146     		mov	r1, ip
 2075              	.LVL172:
 2076 003e 0D40     		ands	r5, r1
 2077 0040 1F39     		subs	r1, r1, #31
 2078 0042 6554     		strb	r5, [r4, r1]
 2079              	.LVL173:
1131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   sAlarm->AlarmMask = (uint32_t)(tmpreg & RTC_ALARMMASK_ALL);
 2080              		.loc 1 1131 0
 2081 0044 8021     		movs	r1, #128
 2082 0046 C905     		lsls	r1, r1, #23
 2083 0048 1140     		ands	r1, r2
 2084 004a E161     		str	r1, [r4, #28]
1132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     
 2085              		.loc 1 1132 0
 2086 004c 0C49     		ldr	r1, .L126
 2087 004e 0A40     		ands	r2, r1
 2088              	.LVL174:
 2089 0050 6261     		str	r2, [r4, #20]
1134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   {
 2090              		.loc 1 1134 0
 2091 0052 002B     		cmp	r3, #0
 2092 0054 0FD1     		bne	.L125
1136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     sAlarm->AlarmTime.Minutes = RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes);
 2093              		.loc 1 1136 0
 2094 0056 FFF7FEFF 		bl	RTC_Bcd2ToByte
 2095              	.LVL175:
 2096 005a 2070     		strb	r0, [r4]
1137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     sAlarm->AlarmTime.Seconds = RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds);
 2097              		.loc 1 1137 0
 2098 005c 4046     		mov	r0, r8
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 67


 2099 005e FFF7FEFF 		bl	RTC_Bcd2ToByte
 2100              	.LVL176:
 2101 0062 6070     		strb	r0, [r4, #1]
1138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****     sAlarm->AlarmDateWeekDay = RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay);
 2102              		.loc 1 1138 0
 2103 0064 3000     		movs	r0, r6
 2104 0066 FFF7FEFF 		bl	RTC_Bcd2ToByte
 2105              	.LVL177:
 2106 006a A070     		strb	r0, [r4, #2]
1139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c ****   }  
 2107              		.loc 1 1139 0
 2108 006c 2800     		movs	r0, r5
 2109 006e FFF7FEFF 		bl	RTC_Bcd2ToByte
 2110              	.LVL178:
 2111 0072 2023     		movs	r3, #32
 2112 0074 E054     		strb	r0, [r4, r3]
 2113              	.L125:
1143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc.c **** 
 2114              		.loc 1 1143 0
 2115 0076 0020     		movs	r0, #0
 2116              		@ sp needed
 2117              	.LVL179:
 2118 0078 04BC     		pop	{r2}
 2119 007a 9046     		mov	r8, r2
 2120 007c F0BD     		pop	{r4, r5, r6, r7, pc}
 2121              	.L127:
 2122 007e C046     		.align	2
 2123              	.L126:
 2124 0080 80808080 		.word	-2139062144
 2125              		.cfi_endproc
 2126              	.LFE46:
 2128              		.text
 2129              	.Letext0:
 2130              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q1-update\\arm-none-eabi\\include
 2131              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q1-update\\arm-none-eabi\\include
 2132              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 2133              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 2134              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q1-update\\arm-none-eabi\\include
 2135              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q1-update\\arm-none-eabi\\include
 2136              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q1-update\\lib\\gcc\\arm-none-eab
 2137              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q1-update\\arm-none-eabi\\include
 2138              		.file 10 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 2139              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 2140              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rtc.h"
 2141              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 68


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f0xx_hal_rtc.c
C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s:16     .text.HAL_RTC_MspInit:00000000 $t
C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s:23     .text.HAL_RTC_MspInit:00000000 HAL_RTC_MspInit
C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s:39     .text.HAL_RTC_MspDeInit:00000000 $t
C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s:46     .text.HAL_RTC_MspDeInit:00000000 HAL_RTC_MspDeInit
C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s:61     .text.HAL_RTC_DeactivateAlarm:00000000 $t
C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s:68     .text.HAL_RTC_DeactivateAlarm:00000000 HAL_RTC_DeactivateAlarm
C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s:171    .text.HAL_RTC_DeactivateAlarm:00000074 $d
C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s:177    .text.HAL_RTC_AlarmAEventCallback:00000000 $t
C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s:184    .text.HAL_RTC_AlarmAEventCallback:00000000 HAL_RTC_AlarmAEventCallback
C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s:199    .text.HAL_RTC_AlarmIRQHandler:00000000 $t
C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s:206    .text.HAL_RTC_AlarmIRQHandler:00000000 HAL_RTC_AlarmIRQHandler
C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s:259    .text.HAL_RTC_AlarmIRQHandler:00000034 $d
C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s:265    .text.HAL_RTC_PollForAlarmAEvent:00000000 $t
C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s:272    .text.HAL_RTC_PollForAlarmAEvent:00000000 HAL_RTC_PollForAlarmAEvent
C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s:341    .text.HAL_RTC_PollForAlarmAEvent:00000044 $d
C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s:346    .text.HAL_RTC_WaitForSynchro:00000000 $t
C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s:353    .text.HAL_RTC_WaitForSynchro:00000000 HAL_RTC_WaitForSynchro
C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s:410    .text.HAL_RTC_GetState:00000000 $t
C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s:417    .text.HAL_RTC_GetState:00000000 HAL_RTC_GetState
C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s:436    .text.RTC_EnterInitMode:00000000 $t
C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s:443    .text.RTC_EnterInitMode:00000000 RTC_EnterInitMode
C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s:508    .text.HAL_RTC_Init:00000000 $t
C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s:515    .text.HAL_RTC_Init:00000000 HAL_RTC_Init
C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s:662    .text.HAL_RTC_Init:000000bc $d
C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s:668    .text.HAL_RTC_DeInit:00000000 $t
C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s:675    .text.HAL_RTC_DeInit:00000000 HAL_RTC_DeInit
C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s:839    .text.HAL_RTC_DeInit:000000cc $d
C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s:846    .text.RTC_ByteToBcd2:00000000 $t
C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s:853    .text.RTC_ByteToBcd2:00000000 RTC_ByteToBcd2
C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s:892    .text.HAL_RTC_SetTime:00000000 $t
C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s:899    .text.HAL_RTC_SetTime:00000000 HAL_RTC_SetTime
C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s:1105   .text.HAL_RTC_SetTime:000000f4 $d
C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s:1111   .text.HAL_RTC_SetDate:00000000 $t
C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s:1118   .text.HAL_RTC_SetDate:00000000 HAL_RTC_SetDate
C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s:1306   .text.HAL_RTC_SetDate:000000d4 $d
C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s:1311   .text.HAL_RTC_SetAlarm:00000000 $t
C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s:1318   .text.HAL_RTC_SetAlarm:00000000 HAL_RTC_SetAlarm
C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s:1538   .text.HAL_RTC_SetAlarm:00000108 $d
C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s:1544   .text.HAL_RTC_SetAlarm_IT:00000000 $t
C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s:1551   .text.HAL_RTC_SetAlarm_IT:00000000 HAL_RTC_SetAlarm_IT
C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s:1793   .text.HAL_RTC_SetAlarm_IT:0000012c $d
C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s:1800   .text.RTC_Bcd2ToByte:00000000 $t
C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s:1807   .text.RTC_Bcd2ToByte:00000000 RTC_Bcd2ToByte
C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s:1834   .text.HAL_RTC_GetTime:00000000 $t
C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s:1841   .text.HAL_RTC_GetTime:00000000 HAL_RTC_GetTime
C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s:1920   .text.HAL_RTC_GetTime:00000054 $d
C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s:1925   .text.HAL_RTC_GetDate:00000000 $t
C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s:1932   .text.HAL_RTC_GetDate:00000000 HAL_RTC_GetDate
C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s:2000   .text.HAL_RTC_GetDate:00000044 $d
C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s:2005   .text.HAL_RTC_GetAlarm:00000000 $t
C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s:2012   .text.HAL_RTC_GetAlarm:00000000 HAL_RTC_GetAlarm
C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s:2124   .text.HAL_RTC_GetAlarm:00000080 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccS7GMRH.s 			page 69


HAL_GetTick
