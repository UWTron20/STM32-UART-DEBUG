ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"queue.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.prvIsQueueFull,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.code	16
  19              		.thumb_func
  20              		.fpu softvfp
  22              	prvIsQueueFull:
  23              	.LFB20:
  24              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/queue.c"
   1:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     All rights reserved
   4:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
   5:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
   7:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     This file is part of the FreeRTOS distribution.
   8:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
   9:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     the terms of the GNU General Public License (version 2) as published by the
  11:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  13:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     ***************************************************************************
  14:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     ***************************************************************************
  19:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  20:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     link: http://www.freertos.org/a00114.html
  24:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  25:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     ***************************************************************************
  26:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****      *                                                                       *
  27:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****      *    robust, strictly quality controlled, supported, and cross          *
  29:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****      *    platform software that is more than just the market leader, it     *
  30:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****      *    is the industry's de facto standard.                               *
  31:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****      *                                                                       *
  32:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****      *    Help yourself get started quickly while simultaneously helping     *
  33:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****      *    tutorial book, reference manual, or both:                          *
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 2


  35:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****      *                                                                       *
  37:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     ***************************************************************************
  38:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  39:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     defined configASSERT()?
  42:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  43:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     embedded software for free we request you assist our global community by
  45:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     participating in the support forum.
  46:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  47:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     be as productive as possible as early as possible.  Now you can receive
  49:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  52:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  56:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  63:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     engineered and independently SIL3 certified version for use in safety and
  65:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     mission critical applications that require provable dependability.
  66:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     1 tab == 4 spaces!
  68:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** */
  69:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  70:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include <stdlib.h>
  71:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include <string.h>
  72:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  73:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  74:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** all the API functions to use the MPU wrappers.  That should only be done when
  75:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** task.h is included from an application file. */
  76:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  77:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include "FreeRTOS.h"
  79:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include "task.h"
  80:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include "queue.h"
  81:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  82:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
  83:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#include "croutine.h"
  84:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
  85:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  86:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  87:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  88:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** header files above, but not in this file, in order to generate the correct
  89:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** privileged Vs unprivileged linkage and placement. */
  90:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  91:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 3


  92:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  93:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Constants used with the cRxLock and cTxLock structure members. */
  94:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueUNLOCKED					( ( int8_t ) -1 )
  95:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueLOCKED_UNMODIFIED			( ( int8_t ) 0 )
  96:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  97:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* When the Queue_t structure is used to represent a base queue its pcHead and
  98:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** pcTail members are used as pointers into the queue storage area.  When the
  99:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t structure is used to represent a mutex pcHead and pcTail pointers are
 100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** not necessary, and the pcHead pointer is set to NULL to indicate that the
 101:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** pcTail pointer actually points to the mutex holder (if any).  Map alternative
 102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** names to the pcHead and pcTail structure members to ensure the readability of
 103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** the code is maintained despite this dual use of two structure members.  An
 104:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** alternative implementation would be to use a union, but use of a union is
 105:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** against the coding standard (although an exception to the standard has been
 106:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** permitted where the dual use also significantly changes the type of the
 107:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** structure member). */
 108:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define pxMutexHolder					pcTail
 109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define uxQueueType						pcHead
 110:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueQUEUE_IS_MUTEX				NULL
 111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Semaphores do not actually store or copy data, so have an item size of
 113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** zero. */
 114:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueSEMAPHORE_QUEUE_ITEM_LENGTH ( ( UBaseType_t ) 0 )
 115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueMUTEX_GIVE_BLOCK_TIME		 ( ( TickType_t ) 0U )
 116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 117:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_PREEMPTION == 0 )
 118:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* If the cooperative scheduler is being used then a yield should not be
 119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	performed just because a higher priority task has been woken. */
 120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION()
 121:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #else
 122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
 123:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 125:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 126:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Definition of the queue used by the scheduler.
 127:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Items are queued by copy, not reference.  See the following link for the
 128:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * rationale: http://www.freertos.org/Embedded-RTOS-Queues.html
 129:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** typedef struct QueueDefinition
 131:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 132:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcHead;					/*< Points to the beginning of the queue storage area. */
 133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcTail;					/*< Points to the byte at the end of the queue storage area.  Once more byte i
 134:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcWriteTo;				/*< Points to the free next place in the storage area. */
 135:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 136:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	union							/* Use of a union is an exception to the coding standard to ensure two mutually exclus
 137:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 138:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		int8_t *pcReadFrom;			/*< Points to the last place that a queued item was read from when the stru
 139:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		UBaseType_t uxRecursiveCallCount;/*< Maintains a count of the number of times a recursive mutex h
 140:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} u;
 141:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 142:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	List_t xTasksWaitingToSend;		/*< List of tasks that are blocked waiting to post onto this queue.  
 143:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	List_t xTasksWaitingToReceive;	/*< List of tasks that are blocked waiting to read from this queue.
 144:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 145:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	volatile UBaseType_t uxMessagesWaiting;/*< The number of items currently in the queue. */
 146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxLength;			/*< The length of the queue defined as the number of items it will hold, n
 147:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxItemSize;			/*< The size of each items that the queue will hold. */
 148:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 4


 149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	volatile int8_t cRxLock;		/*< Stores the number of items received from the queue (removed from the
 150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	volatile int8_t cTxLock;		/*< Stores the number of items transmitted to the queue (added to the qu
 151:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 152:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uint8_t ucStaticallyAllocated;	/*< Set to pdTRUE if the memory used by the queue was statically a
 154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 155:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 156:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configUSE_QUEUE_SETS == 1 )
 157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		struct QueueDefinition *pxQueueSetContainer;
 158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 159:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 161:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		UBaseType_t uxQueueNumber;
 162:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uint8_t ucQueueType;
 163:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 164:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 165:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } xQUEUE;
 166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 167:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* The old xQUEUE name is maintained above then typedefed to the new Queue_t
 168:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** name below to enable the use of older kernel aware debuggers. */
 169:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** typedef xQUEUE Queue_t;
 170:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 171:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 172:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 173:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 174:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * The queue registry is just a means for kernel aware debuggers to locate
 175:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * queue structures.  It has no other purpose so is an optional component.
 176:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 177:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
 178:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 179:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The type stored within the queue registry array.  This allows a name
 180:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	to be assigned to each queue making kernel aware debugging a little
 181:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	more user friendly. */
 182:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	typedef struct QUEUE_REGISTRY_ITEM
 183:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 184:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		const char *pcQueueName; /*lint !e971 Unqualified char types are allowed for strings and single c
 185:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		QueueHandle_t xHandle;
 186:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} xQueueRegistryItem;
 187:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 188:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The old xQueueRegistryItem name is maintained above then typedefed to the
 189:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	new xQueueRegistryItem name below to enable the use of older kernel aware
 190:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	debuggers. */
 191:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	typedef xQueueRegistryItem QueueRegistryItem_t;
 192:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 193:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The queue registry is simply an array of QueueRegistryItem_t structures.
 194:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	The pcQueueName member of a structure being NULL is indicative of the
 195:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	array position being vacant. */
 196:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	PRIVILEGED_DATA QueueRegistryItem_t xQueueRegistry[ configQUEUE_REGISTRY_SIZE ];
 197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 198:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
 199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 200:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 201:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Unlocks a queue locked by a call to prvLockQueue.  Locking a queue does not
 202:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * prevent an ISR from adding or removing items to the queue, but does prevent
 203:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * an ISR from removing tasks from the queue event lists.  If an ISR finds a
 204:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * queue is locked it will instead increment the appropriate queue lock count
 205:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * to indicate that a task may require unblocking.  When the queue in unlocked
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 5


 206:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * these lock counts are inspected, and the appropriate action taken.
 207:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 208:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue ) PRIVILEGED_FUNCTION;
 209:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 210:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 211:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Uses a critical section to determine if there is any data in a queue.
 212:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
 213:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * @return pdTRUE if the queue contains no items, otherwise pdFALSE.
 214:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 215:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 216:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 217:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 218:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Uses a critical section to determine if there is any space in a queue.
 219:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
 220:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * @return pdTRUE if there is no space, otherwise pdFALSE;
 221:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueFull( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 224:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 225:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Copies an item into the queue, either at the front of the queue or the
 226:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * back of the queue.
 227:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const Bas
 229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 230:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 231:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Copies an item out of a queue.
 232:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer ) PRIVILEGED_FUNCT
 234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_QUEUE_SETS == 1 )
 236:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*
 237:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * Checks to see if a queue is a member of a queue set, and if so, notifies
 238:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * the queue set that the queue contains data.
 239:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 */
 240:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static BaseType_t prvNotifyQueueSetContainer( const Queue_t * const pxQueue, const BaseType_t xCop
 241:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 242:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 243:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 244:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Called after a Queue_t structure has been allocated either statically or
 245:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * dynamically to fill in the structure's members.
 246:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 247:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, u
 248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 249:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 250:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Mutexes are a special type of queue.  When a mutex is created, first the
 251:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * queue is created, then prvInitialiseMutex() is called to configure the queue
 252:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * as a mutex.
 253:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 254:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static void prvInitialiseMutex( Queue_t *pxNewQueue ) PRIVILEGED_FUNCTION;
 256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 261:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Macro to mark a queue as locked.  Locking a queue prevents an ISR from
 262:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * accessing the queue event lists.
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 6


 263:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define prvLockQueue( pxQueue )								\
 265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();									\
 266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{														\
 267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( pxQueue )->cRxLock == queueUNLOCKED )			\
 268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{													\
 269:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxQueue )->cRxLock = queueLOCKED_UNMODIFIED;	\
 270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}													\
 271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( pxQueue )->cTxLock == queueUNLOCKED )			\
 272:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{													\
 273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxQueue )->cTxLock = queueLOCKED_UNMODIFIED;	\
 274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}													\
 275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}														\
 276:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL()
 277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericReset( QueueHandle_t xQueue, BaseType_t xNewQueue )
 280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 282:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
 286:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize );
 288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( UBaseType_t ) 1U ) * pxQueue-
 291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
 293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xNewQueue == pdFALSE )
 295:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* If there are tasks blocked waiting to read from the queue, then
 297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the tasks will remain blocked as after this function exits the queue
 298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			will still be empty.  If there are tasks blocked waiting to write to
 299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the queue, then one should be unblocked as after this function exits
 300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			it will be possible to write to it. */
 301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 304:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					queueYIELD_IF_USING_PREEMPTION();
 306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 307:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
 308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 312:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Ensure the event queues start in the correct state. */
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 7


 320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
 325:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 326:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* A value is returned for calling semantic consistency with previous
 327:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	versions. */
 328:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return pdPASS;
 329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 333:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 334:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueGenericCreateStatic( const UBaseType_t uxQueueLength, const UBaseType_t uxItem
 335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 338:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The StaticQueue_t structure and the queue storage area must be
 341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		supplied. */
 342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( pxStaticQueue != NULL );
 343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* A queue storage area should be provided if the item size is not 0, and
 345:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		should not be provided if the item size is 0. */
 346:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 347:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 349:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#if( configASSERT_DEFINED == 1 )
 350:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Sanity check that the size of the structure used to declare a
 352:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			variable of type StaticQueue_t or StaticSemaphore_t equals the size of
 353:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the real queue and semaphore structures. */
 354:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			volatile size_t xSize = sizeof( StaticQueue_t );
 355:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			configASSERT( xSize == sizeof( Queue_t ) );
 356:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 357:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#endif /* configASSERT_DEFINED */
 358:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 359:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The address of a statically allocated queue was passed in, use it.
 360:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		The address of a statically allocated storage area was also passed in
 361:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		but is already set. */
 362:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) pxStaticQueue; /*lint !e740 Unusual cast is ok as the structures are d
 363:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 365:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 366:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 367:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Queues can be allocated wither statically or dynamically, so
 369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				note this queue was allocated statically in case the queue is
 370:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				later deleted. */
 371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 372:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 373:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 376:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 8


 377:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
 379:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 380:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 381:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 382:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 383:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 384:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 385:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 386:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueGenericCreate( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, 
 387:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 388:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 389:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	size_t xQueueSizeInBytes;
 390:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uint8_t *pucQueueStorage;
 391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 392:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 393:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 394:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( uxItemSize == ( UBaseType_t ) 0 )
 395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 396:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* There is not going to be a queue storage area. */
 397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xQueueSizeInBytes = ( size_t ) 0;
 398:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 399:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 401:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Allocate enough space to hold the maximum number of items that
 402:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			can be in the queue at any time. */
 403:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as t
 404:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 405:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 406:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes );
 407:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 408:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 409:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 410:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Jump past the queue structure to find the location of the queue
 411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			storage area. */
 412:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pucQueueStorage = ( ( uint8_t * ) pxNewQueue ) + sizeof( Queue_t );
 413:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 414:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 416:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Queues can be created either statically or dynamically, so
 417:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				note this task was created dynamically in case it is later
 418:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				deleted. */
 419:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 420:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 421:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 422:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 423:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 424:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 426:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
 427:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 428:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 430:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 431:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 432:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, u
 433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 9


 434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Remove compiler warnings about unused parameters should
 435:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configUSE_TRACE_FACILITY not be set to 1. */
 436:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	( void ) ucQueueType;
 437:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( uxItemSize == ( UBaseType_t ) 0 )
 439:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 440:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* No RAM was allocated for the queue storage area, but PC head cannot
 441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		be set to NULL because NULL is used as a key to say the queue is used as
 442:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		a mutex.  Therefore just set pcHead to point to the queue as a benign
 443:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		value that is known to be within the memory map. */
 444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 445:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
 447:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Set the head to the start of the queue storage area. */
 449:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 450:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 451:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 452:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Initialise the queue members as described where the queue type is
 453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	defined. */
 454:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxNewQueue->uxLength = uxQueueLength;
 455:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxNewQueue->uxItemSize = uxItemSize;
 456:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 457:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 458:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 459:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 460:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->ucQueueType = ucQueueType;
 461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 462:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif /* configUSE_TRACE_FACILITY */
 463:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 464:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if( configUSE_QUEUE_SETS == 1 )
 465:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->pxQueueSetContainer = NULL;
 467:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 468:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif /* configUSE_QUEUE_SETS */
 469:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 470:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	traceQUEUE_CREATE( pxNewQueue );
 471:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 472:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 473:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 474:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 475:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 476:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static void prvInitialiseMutex( Queue_t *pxNewQueue )
 477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 479:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 480:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The queue create function will set all the queue structure members
 481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			correctly for a generic queue, but this function is creating a
 482:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mutex.  Overwrite those members that need to be set differently -
 483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			in particular the information required for priority inheritance. */
 484:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->pxMutexHolder = NULL;
 485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 486:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* In case this is a recursive mutex. */
 488:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->u.uxRecursiveCallCount = 0;
 489:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 490:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_MUTEX( pxNewQueue );
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 10


 491:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 492:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Start with the semaphore in the expected state. */
 493:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
 494:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 495:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 496:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 497:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_MUTEX_FAILED();
 498:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 499:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 500:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 501:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 503:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 504:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 505:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 506:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateMutex( const uint8_t ucQueueType )
 507:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 509:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 510:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) xQueueGenericCreate( uxMutexLength, uxMutexSize, ucQueueType );
 512:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( pxNewQueue );
 513:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 514:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
 515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 516:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 517:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 518:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 520:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 521:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 522:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateMutexStatic( const uint8_t ucQueueType, StaticQueue_t *pxStaticQueue )
 523:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 524:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 525:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 526:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 527:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Prevent compiler warnings about unused parameters if
 528:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configUSE_TRACE_FACILITY does not equal 1. */
 529:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) ucQueueType;
 530:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 531:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) xQueueGenericCreateStatic( uxMutexLength, uxMutexSize, NULL, pxStaticQ
 532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( pxNewQueue );
 533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
 535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 536:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 537:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 538:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 540:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 541:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 542:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void* xQueueGetMutexHolder( QueueHandle_t xSemaphore )
 543:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 544:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void *pxReturn;
 545:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 546:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* This function is called by xSemaphoreGetMutexHolder(), and should not
 547:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		be called directly.  Note:  This is a good way of determining if the
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 11


 548:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		calling task is the mutex holder, but not a good way of determining the
 549:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		identity of the mutex holder, as the holder may change between the
 550:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		following critical section exiting and the function returning. */
 551:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
 552:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 553:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( ( ( Queue_t * ) xSemaphore )->uxQueueType == queueQUEUE_IS_MUTEX )
 554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 555:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxReturn = ( void * ) ( ( Queue_t * ) xSemaphore )->pxMutexHolder;
 556:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 557:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 558:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 559:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxReturn = NULL;
 560:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 561:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 562:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
 563:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 564:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxReturn;
 565:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 566:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 567:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 568:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 569:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 570:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 571:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 572:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueGiveMutexRecursive( QueueHandle_t xMutex )
 573:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 574:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 575:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 576:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 577:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( pxMutex );
 578:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If this is the task that holds the mutex then pxMutexHolder will not
 580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		change outside of this task.  If this task does not hold the mutex then
 581:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxMutexHolder can never coincidentally equal the tasks handle, and as
 582:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		this is the only condition we are interested in it does not matter if
 583:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxMutexHolder is accessed simultaneously by another task.  Therefore no
 584:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		mutual exclusion is required to test the pxMutexHolder variable. */
 585:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxMutex->pxMutexHolder == ( void * ) xTaskGetCurrentTaskHandle() ) /*lint !e961 Not a redunda
 586:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 587:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceGIVE_MUTEX_RECURSIVE( pxMutex );
 588:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 589:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* uxRecursiveCallCount cannot be zero if pxMutexHolder is equal to
 590:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the task handle, therefore no underflow check is required.  Also,
 591:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxRecursiveCallCount is only modified by the mutex holder, and as
 592:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			there can only be one, no mutual exclusion is required to modify the
 593:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxRecursiveCallCount member. */
 594:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxMutex->u.uxRecursiveCallCount )--;
 595:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Has the recursive call count unwound to 0? */
 597:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxMutex->u.uxRecursiveCallCount == ( UBaseType_t ) 0 )
 598:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 599:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Return the mutex.  This will automatically unblock any other
 600:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				task that might be waiting to access the mutex. */
 601:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO_BACK );
 602:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 603:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 604:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 12


 605:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 606:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 608:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 609:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 610:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 612:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The mutex cannot be given because the calling task is not the
 613:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			holder. */
 614:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
 615:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceGIVE_MUTEX_RECURSIVE_FAILED( pxMutex );
 617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 618:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 619:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
 620:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 621:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 622:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 623:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 624:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 625:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 626:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 627:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueTakeMutexRecursive( QueueHandle_t xMutex, TickType_t xTicksToWait )
 628:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 630:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 631:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 632:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( pxMutex );
 633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 634:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Comments regarding mutual exclusion as per those within
 635:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xQueueGiveMutexRecursive(). */
 636:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 637:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		traceTAKE_MUTEX_RECURSIVE( pxMutex );
 638:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 639:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxMutex->pxMutexHolder == ( void * ) xTaskGetCurrentTaskHandle() ) /*lint !e961 Cast is not r
 640:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 641:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxMutex->u.uxRecursiveCallCount )++;
 642:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 643:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 645:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 646:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = xQueueGenericReceive( pxMutex, NULL, xTicksToWait, pdFALSE );
 647:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* pdPASS will only be returned if the mutex was successfully
 649:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			obtained.  The calling task may have entered the Blocked state
 650:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			before reaching here. */
 651:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xReturn != pdFAIL )
 652:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( pxMutex->u.uxRecursiveCallCount )++;
 654:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 655:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 656:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 657:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceTAKE_MUTEX_RECURSIVE_FAILED( pxMutex );
 658:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 659:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 660:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 661:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 13


 662:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 664:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 666:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 667:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 668:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 669:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphoreStatic( const UBaseType_t uxMaxCount, const UBaseType_t
 670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 671:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 672:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 673:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxMaxCount != 0 );
 674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 675:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStatic
 677:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 678:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xHandle != NULL )
 679:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 681:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 682:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 683:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 685:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 686:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 687:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 688:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 689:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xHandle;
 690:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 691:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 692:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
 693:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 694:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 695:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 696:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 697:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphore( const UBaseType_t uxMaxCount, const UBaseType_t uxIni
 698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 700:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 701:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxMaxCount != 0 );
 702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 703:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUN
 705:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xHandle != NULL )
 707:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 708:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 709:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 712:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 713:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 714:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 715:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 716:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 717:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xHandle;
 718:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 14


 719:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 720:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
 721:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 722:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 723:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickType_t xT
 724:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
 727:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 728:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 729:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 730:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 734:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 736:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 737:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 738:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 739:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
 740:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	statements within the function itself.  This is done in the interest
 741:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	of execution time efficiency. */
 742:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
 743:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 744:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
 745:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 746:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there room on the queue now?  The running task must be the
 747:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			highest priority task wanting to access the queue.  If the head item
 748:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			in the queue is to be overwritten then it does not matter if the
 749:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			queue is full. */
 750:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 751:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 752:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_SEND( pxQueue );
 753:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 754:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 755:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
 756:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 757:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
 758:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 759:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
 760:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 761:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The queue is a member of a queue set, and posting
 762:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							to the queue set caused a higher priority task to
 763:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							unblock. A context switch is required. */
 764:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 765:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 766:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 767:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 768:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 769:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 770:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 771:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
 772:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 773:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* If there was a task waiting for data to arrive on the
 774:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queue then unblock it now. */
 775:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 15


 776:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 777:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 778:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 779:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								/* The unblocked task has a priority higher than
 780:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								our own so yield immediately.  Yes it is ok to
 781:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								do this from within the critical section - the
 782:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								kernel takes care of that. */
 783:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								queueYIELD_IF_USING_PREEMPTION();
 784:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 785:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
 786:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 787:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 788:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 789:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 790:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else if( xYieldRequired != pdFALSE )
 791:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 792:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* This path is a special case that will only get
 793:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							executed if the task was holding multiple mutexes
 794:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							and the mutexes were given back in an order that is
 795:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							different to that in which they were taken. */
 796:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 797:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 798:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 799:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 800:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 801:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 802:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 803:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 804:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
 805:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 806:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* If there was a task waiting for data to arrive on the
 807:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					queue then unblock it now. */
 808:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 809:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 810:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 811:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 812:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The unblocked task has a priority higher than
 813:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							our own so yield immediately.  Yes it is ok to do
 814:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							this from within the critical section - the kernel
 815:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							takes care of that. */
 816:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 817:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 818:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 819:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 820:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 821:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 822:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 823:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else if( xYieldRequired != pdFALSE )
 824:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 825:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* This path is a special case that will only get
 826:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						executed if the task was holding multiple mutexes and
 827:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						the mutexes were given back in an order that is
 828:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						different to that in which they were taken. */
 829:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
 830:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 831:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
 832:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 16


 833:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
 834:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 835:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 836:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
 837:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 838:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
 839:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 840:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 841:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 842:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 843:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
 844:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 845:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was full and no block time is specified (or
 846:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the block time has expired) so leave now. */
 847:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
 848:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 849:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Return to the original privilege level before exiting
 850:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the function. */
 851:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_SEND_FAILED( pxQueue );
 852:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
 853:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 854:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
 855:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 856:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was full and a block time was specified so
 857:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					configure the timeout structure. */
 858:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskSetTimeOutState( &xTimeOut );
 859:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 860:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 861:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
 862:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 863:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
 864:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 865:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 866:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 867:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 868:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
 869:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 870:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
 871:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
 872:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 873:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
 874:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 875:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
 877:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 878:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 879:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
 880:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 881:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_SEND( pxQueue );
 882:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 883:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 884:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Unlocking the queue means queue events can effect the
 885:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				event list.  It is possible	that interrupts occurring now
 886:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				remove this task from the event	list again - but as the
 887:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				scheduler is suspended the task will go onto the pending
 888:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				ready last instead of the actual ready list. */
 889:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 17


 890:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 891:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Resuming the scheduler will move tasks from the pending
 892:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				ready list into the ready list - so it is feasible that this
 893:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				task is already in a ready list before it yields - in which
 894:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				case the yield will not cause a context switch unless there
 895:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				is also a higher priority task in the pending ready list. */
 896:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 897:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 898:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
 899:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 900:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 901:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 902:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 903:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Try again. */
 904:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 905:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 906:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 907:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 908:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 909:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 910:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The timeout has expired. */
 911:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
 912:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 913:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 914:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FAILED( pxQueue );
 915:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			return errQUEUE_FULL;
 916:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 917:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 918:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 919:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 920:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 921:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericSendFromISR( QueueHandle_t xQueue, const void * const pvItemToQueue, BaseTy
 922:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 923:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 924:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
 925:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 926:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 927:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 928:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 930:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
 932:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
 933:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
 934:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
 935:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
 936:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
 937:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
 938:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
 939:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
 940:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
 941:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
 942:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
 943:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
 944:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
 945:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 946:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 18


 947:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Similar to xQueueGenericSend, except without blocking if there is no room
 948:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	in the queue.  Also don't directly wake a task that was blocked on a queue
 949:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	read, instead return a flag to say whether a context switch is required or
 950:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
 951:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	post). */
 952:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 953:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 954:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 955:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 956:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
 957:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 958:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
 959:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 960:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Semaphores use xQueueGiveFromISR(), so pxQueue will not be a
 961:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			semaphore or mutex.  That means prvCopyDataToQueue() cannot result
 962:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			in a task disinheriting a priority and prvCopyDataToQueue() can be
 963:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			called here even though the disinherit function does not check if
 964:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the scheduler is suspended before accessing the ready lists. */
 965:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 966:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 967:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
 968:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			be done when the queue is unlocked later. */
 969:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( cTxLock == queueUNLOCKED )
 970:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 971:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
 972:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 973:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
 974:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 975:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
 976:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 977:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The queue is a member of a queue set, and posting
 978:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							to the queue set caused a higher priority task to
 979:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							unblock.  A context switch is required. */
 980:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
 981:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 982:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
 983:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 984:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
 985:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 986:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 987:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 988:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 989:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 990:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 991:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 992:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 993:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 994:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
 995:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 996:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 997:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 998:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 999:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1000:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								/* The task waiting has a higher priority so
1001:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								record that a context switch is required. */
1002:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1003:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 19


1004:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1005:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1006:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								else
1007:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1008:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1009:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1010:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1011:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1012:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1013:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1014:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1015:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1016:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1017:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1018:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1019:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1020:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1021:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1022:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
1023:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1024:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1025:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1026:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1027:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1028:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
1029:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							context	switch is required. */
1030:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1031:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1032:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1033:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1034:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1035:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1036:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1037:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1038:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1039:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1040:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1041:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1042:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1043:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1044:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1045:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1046:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1047:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1048:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1049:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1050:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1051:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1052:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1053:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1054:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				knows that data was posted while it was locked. */
1055:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
1056:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1057:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1058:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1059:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1060:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 20


1061:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1062:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1063:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = errQUEUE_FULL;
1064:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1065:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1066:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1067:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1068:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1069:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1070:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1071:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1072:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGiveFromISR( QueueHandle_t xQueue, BaseType_t * const pxHigherPriorityTaskWoken )
1073:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1074:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1075:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1076:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1077:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1078:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Similar to xQueueGenericSendFromISR() but used with semaphores where the
1079:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	item size is 0.  Don't directly wake a task that was blocked on a queue
1080:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	read, instead return a flag to say whether a context switch is required or
1081:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
1082:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	post). */
1083:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1084:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1085:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1086:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* xQueueGenericSendFromISR() should be used instead of xQueueGiveFromISR()
1087:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if the item size is not 0. */
1088:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize == 0 );
1089:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1090:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Normally a mutex would not be given from an interrupt, especially if
1091:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	there is a mutex holder, as priority inheritance makes no sense for an
1092:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	interrupts, only tasks. */
1093:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->pxMutexHolder != NU
1094:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1095:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1096:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1097:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1098:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1099:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1101:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1104:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1105:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1106:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1107:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1108:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1110:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1114:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* When the queue is used to implement a semaphore no data is ever
1116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		moved through the queue but it is still valid to see if the queue 'has
1117:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		space'. */
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 21


1118:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( uxMessagesWaiting < pxQueue->uxLength )
1119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
1121:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
1123:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* A task can only have an inherited priority if it is a mutex
1125:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			holder - and if there is a mutex holder then the mutex cannot be
1126:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			given from an ISR.  As this is the ISR version of the function it
1127:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			can be assumed there is no mutex holder and no need to determine if
1128:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			priority disinheritance is needed.  Simply increase the count of
1129:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			messages (semaphores) available. */
1130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting + 1;
1131:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1132:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
1133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			be done when the queue is unlocked later. */
1134:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( cTxLock == queueUNLOCKED )
1135:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1136:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
1137:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1138:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
1139:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1140:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
1141:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1142:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The semaphore is a member of a queue set, and
1143:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							posting	to the queue set caused a higher priority
1144:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							task to	unblock.  A context switch is required. */
1145:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1147:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1148:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1151:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1152:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1155:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1156:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1159:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1160:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1161:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1162:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1163:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1164:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1165:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								/* The task waiting has a higher priority so
1166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								record that a context switch is required. */
1167:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1168:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1169:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1170:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1171:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								else
1172:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1173:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1174:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 22


1175:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1176:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1177:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1178:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1179:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1180:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1181:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1182:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1183:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1184:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1185:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1186:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1187:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
1188:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1189:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1190:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1191:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1192:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1193:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
1194:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							context	switch is required. */
1195:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1196:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1198:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1200:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1201:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1202:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1203:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1204:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1205:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1206:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1207:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1208:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1209:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1210:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1211:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1212:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1213:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1214:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1215:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1216:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1217:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1218:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1219:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				knows that data was posted while it was locked. */
1220:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
1221:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1224:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1226:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1227:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = errQUEUE_FULL;
1229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1230:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1231:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 23


1232:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1236:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1237:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericReceive( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWa
1238:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1239:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1240:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
1241:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** int8_t *pcOriginalReadPosition;
1242:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1243:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1244:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1246:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1247:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1249:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
1251:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1252:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
1253:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	statements within the function itself.  This is done in the interest
1254:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	of execution time efficiency. */
1255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
1257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
1259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1261:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			must be the highest priority task wanting to access the queue. */
1264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Remember the read position in case the queue is only being
1267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				peeked. */
1268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pcOriginalReadPosition = pxQueue->u.pcReadFrom;
1269:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvCopyDataFromQueue( pxQueue, pvBuffer );
1271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1272:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xJustPeeking == pdFALSE )
1273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE( pxQueue );
1275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1276:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Actually removing data, not just peeking. */
1277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					pxQueue->uxMessagesWaiting = uxMessagesWaiting - 1;
1278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					#if ( configUSE_MUTEXES == 1 )
1280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1282:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* Record the information required to implement
1284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							priority inheritance should it become necessary. */
1285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							pxQueue->pxMutexHolder = ( int8_t * ) pvTaskIncrementMutexHeldCount(); /*lint !e961 Cast is 
1286:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 24


1289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					#endif /* configUSE_MUTEXES */
1293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1295:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
1299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1304:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1307:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1312:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_PEEK( pxQueue );
1313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The data is not being removed, so reset the read
1315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					pointer. */
1316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					pxQueue->u.pcReadFrom = pcOriginalReadPosition;
1317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The data is being left in the queue, so see if there are
1319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					any other tasks waiting for the data. */
1320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority than this task. */
1325:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
1326:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1327:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1328:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1333:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1334:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1338:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
1339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
1340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1345:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and no block time is specified (or
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 25


1346:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the block time has expired) so leave now. */
1347:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
1348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1349:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_EMPTY;
1350:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1352:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1353:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and a block time was specified so
1354:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					configure the timeout structure. */
1355:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskSetTimeOutState( &xTimeOut );
1356:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
1357:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1358:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1359:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1360:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
1361:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1362:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1363:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1365:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
1366:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1367:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
1368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
1369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1370:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
1371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
1372:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1373:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1376:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1377:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1379:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1380:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1381:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1382:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1383:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1384:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskENTER_CRITICAL();
1385:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1386:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							vTaskPriorityInherit( ( void * ) pxQueue->pxMutexHolder );
1387:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1388:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskEXIT_CRITICAL();
1389:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1390:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1392:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1393:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1394:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif
1396:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1398:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1399:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1401:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
1402:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 26


1403:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1404:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1405:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1406:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1407:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1408:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1409:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1410:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Try again. */
1411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1412:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
1413:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1414:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1416:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1417:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
1418:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
1419:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1420:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1421:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1422:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE_FAILED( pxQueue );
1423:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return errQUEUE_EMPTY;
1424:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1426:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1427:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1428:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1430:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1431:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1432:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueReceiveFromISR( QueueHandle_t xQueue, void * const pvBuffer, BaseType_t * const px
1435:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1436:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1437:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1439:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1440:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1442:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1443:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1445:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1447:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1449:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1450:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1451:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1452:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1454:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1455:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1456:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1457:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1458:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1459:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 27


1460:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1462:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1463:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1464:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1465:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const int8_t cRxLock = pxQueue->cRxLock;
1467:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1468:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR( pxQueue );
1469:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1470:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
1471:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting - 1;
1472:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1473:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* If the queue is locked the event list will not be modified.
1474:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			Instead update the lock count so the task that unlocks the queue
1475:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			will know that an ISR has removed data while the queue was
1476:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			locked. */
1477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( cRxLock == queueUNLOCKED )
1478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1479:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1480:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1482:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The task waiting has a higher priority than us so
1484:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						force a context switch. */
1485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( pxHigherPriorityTaskWoken != NULL )
1486:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							*pxHigherPriorityTaskWoken = pdTRUE;
1488:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1489:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1490:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1491:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1492:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1493:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1494:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1495:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1496:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1497:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1498:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1499:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1500:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1501:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1503:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1504:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1505:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1506:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1507:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				knows that data was removed while it was locked. */
1508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
1509:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1510:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1512:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1513:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1514:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
1516:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 28


1517:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1518:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1520:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1521:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1522:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1523:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1524:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1525:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueuePeekFromISR( QueueHandle_t xQueue,  void * const pvBuffer )
1526:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1527:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1528:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1529:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** int8_t *pcOriginalReadPosition;
1530:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1531:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
1535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1536:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1537:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1538:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1540:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1541:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1542:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1543:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1544:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1545:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1546:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1547:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1548:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1549:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1550:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1551:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1552:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1553:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1555:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
1556:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1557:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR( pxQueue );
1558:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1559:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Remember the read position so it can be reset as nothing is
1560:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			actually being removed from the queue. */
1561:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pcOriginalReadPosition = pxQueue->u.pcReadFrom;
1562:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
1563:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.pcReadFrom = pcOriginalReadPosition;
1564:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1565:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1566:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1567:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1568:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1569:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
1570:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
1571:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1572:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1573:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 29


1574:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1575:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1576:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1577:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1578:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueMessagesWaiting( const QueueHandle_t xQueue )
1580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1581:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1582:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1583:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( xQueue );
1584:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1585:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
1586:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1587:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
1588:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1589:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
1590:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1591:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return uxReturn;
1592:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1593:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1594:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1595:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueSpacesAvailable( const QueueHandle_t xQueue )
1596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1597:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1598:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t *pxQueue;
1599:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1600:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxQueue = ( Queue_t * ) xQueue;
1601:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1602:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1603:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
1604:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1605:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uxReturn = pxQueue->uxLength - pxQueue->uxMessagesWaiting;
1606:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
1608:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1609:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return uxReturn;
1610:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1612:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1613:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueMessagesWaitingFromISR( const QueueHandle_t xQueue )
1614:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1615:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( xQueue );
1618:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1619:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
1620:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1621:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return uxReturn;
1622:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1623:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1624:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1625:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** void vQueueDelete( QueueHandle_t xQueue )
1626:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1627:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1628:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1630:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	traceQUEUE_DELETE( pxQueue );
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 30


1631:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1632:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configQUEUE_REGISTRY_SIZE > 0 )
1633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1634:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vQueueUnregisterQueue( pxQueue );
1635:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1636:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
1637:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1638:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) )
1639:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1640:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The queue can only have been allocated dynamically - free it
1641:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		again. */
1642:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vPortFree( pxQueue );
1643:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#elif( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
1645:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1646:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The queue could have been allocated statically or dynamically, so
1647:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		check before attempting to free the memory. */
1648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
1649:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1650:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vPortFree( pxQueue );
1651:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1652:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1654:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1655:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1656:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1657:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#else
1658:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1659:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The queue must have been statically allocated, so is not going to be
1660:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		deleted.  Avoid compiler warnings about the unused parameter. */
1661:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) pxQueue;
1662:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
1664:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1666:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1667:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1668:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1669:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxQueueGetQueueNumber( QueueHandle_t xQueue )
1670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1671:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->uxQueueNumber;
1672:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1673:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
1675:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1677:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1678:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1679:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueSetQueueNumber( QueueHandle_t xQueue, UBaseType_t uxQueueNumber )
1680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1681:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( ( Queue_t * ) xQueue )->uxQueueNumber = uxQueueNumber;
1682:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1683:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
1685:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1686:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1687:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 31


1688:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1689:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uint8_t ucQueueGetQueueType( QueueHandle_t xQueue )
1690:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1691:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->ucQueueType;
1692:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1693:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1694:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
1695:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1696:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1697:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const Bas
1698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn = pdFALSE;
1700:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
1701:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* This function is called from a critical section. */
1703:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1705:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
1707:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1708:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#if ( configUSE_MUTEXES == 1 )
1709:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1712:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The mutex is no longer being held. */
1713:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = xTaskPriorityDisinherit( ( void * ) pxQueue->pxMutexHolder );
1714:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->pxMutexHolder = NULL;
1715:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1716:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1717:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1718:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1719:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1720:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1721:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#endif /* configUSE_MUTEXES */
1722:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1723:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else if( xPosition == queueSEND_TO_BACK )
1724:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); 
1726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize;
1727:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison 
1728:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1729:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->pcWriteTo = pxQueue->pcHead;
1730:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1734:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1736:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
1737:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1738:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->u.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize 
1739:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
1740:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as compariso
1741:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1742:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.pcReadFrom = ( pxQueue->pcTail - pxQueue->uxItemSize );
1743:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1744:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 32


1745:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1746:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1747:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1748:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1749:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xPosition == queueOVERWRITE )
1750:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1751:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1752:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1753:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* An item is not being added but overwritten, so subtract
1754:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				one from the recorded number of items in the queue so when
1755:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				one is added again below the number of recorded items remains
1756:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				correct. */
1757:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				--uxMessagesWaiting;
1758:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1759:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1760:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1761:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1762:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1763:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1764:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1765:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1766:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1767:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1768:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1769:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1770:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxQueue->uxMessagesWaiting = uxMessagesWaiting + 1;
1771:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1772:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1773:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1774:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1775:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1776:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer )
1777:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1778:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
1779:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1780:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
1781:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of t
1782:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1783:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.pcReadFrom = pxQueue->pcHead;
1784:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1785:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1786:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1787:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1788:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1789:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( size_t ) pxQueue->uxIte
1790:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1791:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1792:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1793:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1794:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue )
1795:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1796:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
1797:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1798:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The lock counts contains the number of extra data items placed or
1799:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	removed from the queue while the queue was locked.  When a queue is
1800:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	locked items can be added or removed, but the event lists cannot be
1801:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	updated. */
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 33


1802:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
1803:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1804:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		int8_t cTxLock = pxQueue->cTxLock;
1805:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1806:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* See if data was added to the queue while it was locked. */
1807:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		while( cTxLock > queueLOCKED_UNMODIFIED )
1808:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1809:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Data was posted while the queue was locked.  Are any tasks
1810:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			blocked waiting for data to become available? */
1811:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#if ( configUSE_QUEUE_SETS == 1 )
1812:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1813:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( pxQueue->pxQueueSetContainer != NULL )
1814:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1815:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
1816:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1817:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The queue is a member of a queue set, and posting to
1818:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						the queue set caused a higher priority task to unblock.
1819:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						A context switch is required. */
1820:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						vTaskMissedYield();
1821:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1822:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1823:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1824:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1825:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1826:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1827:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1828:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1829:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Tasks that are removed from the event list will get
1830:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					added to the pending ready list as the scheduler is still
1831:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					suspended. */
1832:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1833:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1834:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1835:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1836:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
1837:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							context	switch is required. */
1838:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							vTaskMissedYield();
1839:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1840:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1841:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1842:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1843:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1844:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1845:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1846:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1847:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						break;
1848:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1849:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1850:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1851:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#else /* configUSE_QUEUE_SETS */
1852:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1853:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Tasks that are removed from the event list will get added to
1854:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				the pending ready list as the scheduler is still suspended. */
1855:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1856:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1857:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1858:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 34


1859:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The task waiting has a higher priority so record that
1860:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						a context switch is required. */
1861:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						vTaskMissedYield();
1862:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1863:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1864:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1865:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1866:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1867:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1868:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1869:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1870:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					break;
1871:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1872:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1873:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#endif /* configUSE_QUEUE_SETS */
1874:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1875:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			--cTxLock;
1876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1877:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1878:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
1879:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1880:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
1881:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1882:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Do the same for the Rx lock. */
1883:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
1884:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1885:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		int8_t cRxLock = pxQueue->cRxLock;
1886:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1887:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		while( cRxLock > queueLOCKED_UNMODIFIED )
1888:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1889:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1890:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1891:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1892:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1893:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskMissedYield();
1894:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1895:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1896:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1897:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1898:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1899:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1900:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				--cRxLock;
1901:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1902:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1903:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1904:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
1905:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1906:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1907:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1908:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
1909:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1910:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
1911:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1912:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1913:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1914:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
1915:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 35


1916:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1917:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1918:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
1919:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1920:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
1921:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1922:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdTRUE;
1923:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1924:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1925:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1926:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFALSE;
1927:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1928:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
1930:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1932:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1933:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1934:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1935:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueIsQueueEmptyFromISR( const QueueHandle_t xQueue )
1936:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1937:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1938:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1939:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( xQueue );
1940:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( UBaseType_t ) 0 )
1941:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1942:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdTRUE;
1943:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1944:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
1945:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1946:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdFALSE;
1947:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1948:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1949:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1950:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
1951:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1952:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1953:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
1954:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
  25              		.loc 1 1954 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              	.LVL0:
  30 0000 10B5     		push	{r4, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 4, -8
  34              		.cfi_offset 14, -4
  35 0002 0400     		movs	r4, r0
1955:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1956:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1957:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
  36              		.loc 1 1957 0
  37 0004 FFF7FEFF 		bl	vPortEnterCritical
  38              	.LVL1:
1958:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 36


1959:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
  39              		.loc 1 1959 0
  40 0008 A26B     		ldr	r2, [r4, #56]
  41 000a E36B     		ldr	r3, [r4, #60]
  42 000c 9A42     		cmp	r2, r3
  43 000e 04D0     		beq	.L4
1960:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1961:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdTRUE;
1962:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1963:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1964:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1965:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFALSE;
  44              		.loc 1 1965 0
  45 0010 0024     		movs	r4, #0
  46              	.LVL2:
  47              	.L2:
1966:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1967:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1968:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
  48              		.loc 1 1968 0
  49 0012 FFF7FEFF 		bl	vPortExitCritical
  50              	.LVL3:
1969:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1970:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1971:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
  51              		.loc 1 1971 0
  52 0016 2000     		movs	r0, r4
  53              		@ sp needed
  54              	.LVL4:
  55 0018 10BD     		pop	{r4, pc}
  56              	.LVL5:
  57              	.L4:
1961:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
  58              		.loc 1 1961 0
  59 001a 0124     		movs	r4, #1
  60              	.LVL6:
  61 001c F9E7     		b	.L2
  62              		.cfi_endproc
  63              	.LFE20:
  65              		.section	.text.prvIsQueueEmpty,"ax",%progbits
  66              		.align	1
  67              		.syntax unified
  68              		.code	16
  69              		.thumb_func
  70              		.fpu softvfp
  72              	prvIsQueueEmpty:
  73              	.LFB18:
1915:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
  74              		.loc 1 1915 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              	.LVL7:
  79 0000 10B5     		push	{r4, lr}
  80              	.LCFI1:
  81              		.cfi_def_cfa_offset 8
  82              		.cfi_offset 4, -8
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 37


  83              		.cfi_offset 14, -4
  84 0002 0400     		movs	r4, r0
1918:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
  85              		.loc 1 1918 0
  86 0004 FFF7FEFF 		bl	vPortEnterCritical
  87              	.LVL8:
1920:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
  88              		.loc 1 1920 0
  89 0008 A36B     		ldr	r3, [r4, #56]
  90 000a 002B     		cmp	r3, #0
  91 000c 04D0     		beq	.L8
1926:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
  92              		.loc 1 1926 0
  93 000e 0024     		movs	r4, #0
  94              	.LVL9:
  95              	.L6:
1929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  96              		.loc 1 1929 0
  97 0010 FFF7FEFF 		bl	vPortExitCritical
  98              	.LVL10:
1932:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
  99              		.loc 1 1932 0
 100 0014 2000     		movs	r0, r4
 101              		@ sp needed
 102              	.LVL11:
 103 0016 10BD     		pop	{r4, pc}
 104              	.LVL12:
 105              	.L8:
1922:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 106              		.loc 1 1922 0
 107 0018 0124     		movs	r4, #1
 108              	.LVL13:
 109 001a F9E7     		b	.L6
 110              		.cfi_endproc
 111              	.LFE18:
 113              		.section	.text.prvCopyDataToQueue,"ax",%progbits
 114              		.align	1
 115              		.syntax unified
 116              		.code	16
 117              		.thumb_func
 118              		.fpu softvfp
 120              	prvCopyDataToQueue:
 121              	.LFB15:
1698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn = pdFALSE;
 122              		.loc 1 1698 0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              	.LVL14:
 127 0000 70B5     		push	{r4, r5, r6, lr}
 128              	.LCFI2:
 129              		.cfi_def_cfa_offset 16
 130              		.cfi_offset 4, -16
 131              		.cfi_offset 5, -12
 132              		.cfi_offset 6, -8
 133              		.cfi_offset 14, -4
 134 0002 0400     		movs	r4, r0
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 38


 135 0004 1600     		movs	r6, r2
 136              	.LVL15:
1704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 137              		.loc 1 1704 0
 138 0006 856B     		ldr	r5, [r0, #56]
 139              	.LVL16:
1706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 140              		.loc 1 1706 0
 141 0008 026C     		ldr	r2, [r0, #64]
 142              	.LVL17:
 143 000a 002A     		cmp	r2, #0
 144 000c 0AD1     		bne	.L10
1710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 145              		.loc 1 1710 0
 146 000e 0368     		ldr	r3, [r0]
 147 0010 002B     		cmp	r3, #0
 148 0012 2ED1     		bne	.L14
1713:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->pxMutexHolder = NULL;
 149              		.loc 1 1713 0
 150 0014 4068     		ldr	r0, [r0, #4]
 151              	.LVL18:
 152 0016 FFF7FEFF 		bl	xTaskPriorityDisinherit
 153              	.LVL19:
1714:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 154              		.loc 1 1714 0
 155 001a 0023     		movs	r3, #0
 156 001c 6360     		str	r3, [r4, #4]
 157              	.LVL20:
 158              	.L11:
1770:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 159              		.loc 1 1770 0
 160 001e 0135     		adds	r5, r5, #1
 161              	.LVL21:
 162 0020 A563     		str	r5, [r4, #56]
1773:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 163              		.loc 1 1773 0
 164              		@ sp needed
 165              	.LVL22:
 166              	.LVL23:
 167              	.LVL24:
 168 0022 70BD     		pop	{r4, r5, r6, pc}
 169              	.LVL25:
 170              	.L10:
1723:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 171              		.loc 1 1723 0
 172 0024 002E     		cmp	r6, #0
 173 0026 0ED1     		bne	.L12
1725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize;
 174              		.loc 1 1725 0
 175 0028 8068     		ldr	r0, [r0, #8]
 176              	.LVL26:
 177 002a FFF7FEFF 		bl	memcpy
 178              	.LVL27:
1726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison 
 179              		.loc 1 1726 0
 180 002e A368     		ldr	r3, [r4, #8]
 181 0030 226C     		ldr	r2, [r4, #64]
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 39


 182 0032 9446     		mov	ip, r2
 183 0034 6344     		add	r3, r3, ip
 184 0036 A360     		str	r3, [r4, #8]
1727:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 185              		.loc 1 1727 0
 186 0038 6268     		ldr	r2, [r4, #4]
 187 003a 9342     		cmp	r3, r2
 188 003c 1BD3     		bcc	.L15
1729:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 189              		.loc 1 1729 0
 190 003e 2368     		ldr	r3, [r4]
 191 0040 A360     		str	r3, [r4, #8]
1699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
 192              		.loc 1 1699 0
 193 0042 0020     		movs	r0, #0
 194 0044 EBE7     		b	.L11
 195              	.LVL28:
 196              	.L12:
1738:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
 197              		.loc 1 1738 0
 198 0046 C068     		ldr	r0, [r0, #12]
 199              	.LVL29:
 200 0048 FFF7FEFF 		bl	memcpy
 201              	.LVL30:
1739:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as compariso
 202              		.loc 1 1739 0
 203 004c 236C     		ldr	r3, [r4, #64]
 204 004e 5B42     		rsbs	r3, r3, #0
 205 0050 E268     		ldr	r2, [r4, #12]
 206 0052 D218     		adds	r2, r2, r3
 207 0054 E260     		str	r2, [r4, #12]
1740:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 208              		.loc 1 1740 0
 209 0056 2168     		ldr	r1, [r4]
 210 0058 8A42     		cmp	r2, r1
 211 005a 03D2     		bcs	.L13
1742:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 212              		.loc 1 1742 0
 213 005c 6268     		ldr	r2, [r4, #4]
 214 005e 9446     		mov	ip, r2
 215 0060 6344     		add	r3, r3, ip
 216 0062 E360     		str	r3, [r4, #12]
 217              	.L13:
1749:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 218              		.loc 1 1749 0
 219 0064 022E     		cmp	r6, #2
 220 0066 08D1     		bne	.L16
1751:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 221              		.loc 1 1751 0
 222 0068 002D     		cmp	r5, #0
 223 006a 08D0     		beq	.L17
1757:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 224              		.loc 1 1757 0
 225 006c 013D     		subs	r5, r5, #1
 226              	.LVL31:
1699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
 227              		.loc 1 1699 0
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 40


 228 006e 0020     		movs	r0, #0
 229 0070 D5E7     		b	.L11
 230              	.LVL32:
 231              	.L14:
 232 0072 0020     		movs	r0, #0
 233              	.LVL33:
 234 0074 D3E7     		b	.L11
 235              	.LVL34:
 236              	.L15:
 237 0076 0020     		movs	r0, #0
 238 0078 D1E7     		b	.L11
 239              	.L16:
 240 007a 0020     		movs	r0, #0
 241 007c CFE7     		b	.L11
 242              	.L17:
 243 007e 0020     		movs	r0, #0
 244 0080 CDE7     		b	.L11
 245              		.cfi_endproc
 246              	.LFE15:
 248              		.section	.text.prvCopyDataFromQueue,"ax",%progbits
 249              		.align	1
 250              		.syntax unified
 251              		.code	16
 252              		.thumb_func
 253              		.fpu softvfp
 255              	prvCopyDataFromQueue:
 256              	.LFB16:
1777:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 257              		.loc 1 1777 0
 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 0
 260              		@ frame_needed = 0, uses_anonymous_args = 0
 261              	.LVL35:
 262 0000 10B5     		push	{r4, lr}
 263              	.LCFI3:
 264              		.cfi_def_cfa_offset 8
 265              		.cfi_offset 4, -8
 266              		.cfi_offset 14, -4
 267 0002 0C00     		movs	r4, r1
1778:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 268              		.loc 1 1778 0
 269 0004 026C     		ldr	r2, [r0, #64]
 270 0006 002A     		cmp	r2, #0
 271 0008 0BD0     		beq	.L18
1780:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of t
 272              		.loc 1 1780 0
 273 000a C368     		ldr	r3, [r0, #12]
 274 000c 9B18     		adds	r3, r3, r2
 275 000e C360     		str	r3, [r0, #12]
1781:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 276              		.loc 1 1781 0
 277 0010 4168     		ldr	r1, [r0, #4]
 278              	.LVL36:
 279 0012 8B42     		cmp	r3, r1
 280 0014 01D3     		bcc	.L20
1783:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 281              		.loc 1 1783 0
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 41


 282 0016 0368     		ldr	r3, [r0]
 283 0018 C360     		str	r3, [r0, #12]
 284              	.L20:
1789:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 285              		.loc 1 1789 0
 286 001a C168     		ldr	r1, [r0, #12]
 287 001c 2000     		movs	r0, r4
 288              	.LVL37:
 289 001e FFF7FEFF 		bl	memcpy
 290              	.LVL38:
 291              	.L18:
1791:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 292              		.loc 1 1791 0
 293              		@ sp needed
 294              	.LVL39:
 295 0022 10BD     		pop	{r4, pc}
 296              		.cfi_endproc
 297              	.LFE16:
 299              		.section	.text.prvUnlockQueue,"ax",%progbits
 300              		.align	1
 301              		.syntax unified
 302              		.code	16
 303              		.thumb_func
 304              		.fpu softvfp
 306              	prvUnlockQueue:
 307              	.LFB17:
1795:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
 308              		.loc 1 1795 0
 309              		.cfi_startproc
 310              		@ args = 0, pretend = 0, frame = 0
 311              		@ frame_needed = 0, uses_anonymous_args = 0
 312              	.LVL40:
 313 0000 70B5     		push	{r4, r5, r6, lr}
 314              	.LCFI4:
 315              		.cfi_def_cfa_offset 16
 316              		.cfi_offset 4, -16
 317              		.cfi_offset 5, -12
 318              		.cfi_offset 6, -8
 319              		.cfi_offset 14, -4
 320 0002 0500     		movs	r5, r0
1802:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 321              		.loc 1 1802 0
 322 0004 FFF7FEFF 		bl	vPortEnterCritical
 323              	.LVL41:
 324              	.LBB2:
1804:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 325              		.loc 1 1804 0
 326 0008 4523     		movs	r3, #69
 327 000a EC5C     		ldrb	r4, [r5, r3]
 328 000c 64B2     		sxtb	r4, r4
 329              	.LVL42:
1807:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 330              		.loc 1 1807 0
 331 000e 01E0     		b	.L22
 332              	.L24:
1875:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 333              		.loc 1 1875 0
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 42


 334 0010 013C     		subs	r4, r4, #1
 335              	.LVL43:
 336 0012 64B2     		sxtb	r4, r4
 337              	.LVL44:
 338              	.L22:
1807:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 339              		.loc 1 1807 0
 340 0014 002C     		cmp	r4, #0
 341 0016 0BDD     		ble	.L23
1855:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 342              		.loc 1 1855 0
 343 0018 6B6A     		ldr	r3, [r5, #36]
 344 001a 002B     		cmp	r3, #0
 345 001c 08D0     		beq	.L23
1857:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 346              		.loc 1 1857 0
 347 001e 2800     		movs	r0, r5
 348 0020 2430     		adds	r0, r0, #36
 349 0022 FFF7FEFF 		bl	xTaskRemoveFromEventList
 350              	.LVL45:
 351 0026 0028     		cmp	r0, #0
 352 0028 F2D0     		beq	.L24
1861:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 353              		.loc 1 1861 0
 354 002a FFF7FEFF 		bl	vTaskMissedYield
 355              	.LVL46:
 356 002e EFE7     		b	.L24
 357              	.L23:
1878:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 358              		.loc 1 1878 0
 359 0030 FF22     		movs	r2, #255
 360 0032 4523     		movs	r3, #69
 361 0034 EA54     		strb	r2, [r5, r3]
 362              	.LBE2:
1880:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 363              		.loc 1 1880 0
 364 0036 FFF7FEFF 		bl	vPortExitCritical
 365              	.LVL47:
1883:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 366              		.loc 1 1883 0
 367 003a FFF7FEFF 		bl	vPortEnterCritical
 368              	.LVL48:
 369              	.LBB3:
1885:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 370              		.loc 1 1885 0
 371 003e 4423     		movs	r3, #68
 372 0040 EC5C     		ldrb	r4, [r5, r3]
 373              	.LVL49:
 374 0042 64B2     		sxtb	r4, r4
 375              	.LVL50:
1887:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 376              		.loc 1 1887 0
 377 0044 01E0     		b	.L26
 378              	.L28:
1900:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 379              		.loc 1 1900 0
 380 0046 013C     		subs	r4, r4, #1
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 43


 381              	.LVL51:
 382 0048 64B2     		sxtb	r4, r4
 383              	.LVL52:
 384              	.L26:
1887:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 385              		.loc 1 1887 0
 386 004a 002C     		cmp	r4, #0
 387 004c 0BDD     		ble	.L27
1889:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 388              		.loc 1 1889 0
 389 004e 2B69     		ldr	r3, [r5, #16]
 390 0050 002B     		cmp	r3, #0
 391 0052 08D0     		beq	.L27
1891:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 392              		.loc 1 1891 0
 393 0054 2800     		movs	r0, r5
 394 0056 1030     		adds	r0, r0, #16
 395 0058 FFF7FEFF 		bl	xTaskRemoveFromEventList
 396              	.LVL53:
 397 005c 0028     		cmp	r0, #0
 398 005e F2D0     		beq	.L28
1893:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 399              		.loc 1 1893 0
 400 0060 FFF7FEFF 		bl	vTaskMissedYield
 401              	.LVL54:
 402 0064 EFE7     		b	.L28
 403              	.L27:
1908:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 404              		.loc 1 1908 0
 405 0066 FF22     		movs	r2, #255
 406 0068 4423     		movs	r3, #68
 407 006a EA54     		strb	r2, [r5, r3]
 408              	.LBE3:
1910:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 409              		.loc 1 1910 0
 410 006c FFF7FEFF 		bl	vPortExitCritical
 411              	.LVL55:
1911:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 412              		.loc 1 1911 0
 413              		@ sp needed
 414              	.LVL56:
 415              	.LVL57:
 416 0070 70BD     		pop	{r4, r5, r6, pc}
 417              		.cfi_endproc
 418              	.LFE17:
 420              		.section	.text.xQueueGenericReset,"ax",%progbits
 421              		.align	1
 422              		.global	xQueueGenericReset
 423              		.syntax unified
 424              		.code	16
 425              		.thumb_func
 426              		.fpu softvfp
 428              	xQueueGenericReset:
 429              	.LFB0:
 280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 430              		.loc 1 280 0
 431              		.cfi_startproc
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 44


 432              		@ args = 0, pretend = 0, frame = 0
 433              		@ frame_needed = 0, uses_anonymous_args = 0
 434              	.LVL58:
 435 0000 70B5     		push	{r4, r5, r6, lr}
 436              	.LCFI5:
 437              		.cfi_def_cfa_offset 16
 438              		.cfi_offset 4, -16
 439              		.cfi_offset 5, -12
 440              		.cfi_offset 6, -8
 441              		.cfi_offset 14, -4
 442 0002 0400     		movs	r4, r0
 443 0004 0D00     		movs	r5, r1
 444              	.LVL59:
 283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 445              		.loc 1 283 0
 446 0006 0028     		cmp	r0, #0
 447 0008 23D0     		beq	.L35
 285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 448              		.loc 1 285 0
 449 000a FFF7FEFF 		bl	vPortEnterCritical
 450              	.LVL60:
 287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 451              		.loc 1 287 0
 452 000e 2268     		ldr	r2, [r4]
 453 0010 E36B     		ldr	r3, [r4, #60]
 454 0012 206C     		ldr	r0, [r4, #64]
 455 0014 0100     		movs	r1, r0
 456 0016 5943     		muls	r1, r3
 457 0018 5118     		adds	r1, r2, r1
 458 001a 6160     		str	r1, [r4, #4]
 288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 459              		.loc 1 288 0
 460 001c 0021     		movs	r1, #0
 461 001e A163     		str	r1, [r4, #56]
 289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( UBaseType_t ) 1U ) * pxQueue-
 462              		.loc 1 289 0
 463 0020 A260     		str	r2, [r4, #8]
 290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 464              		.loc 1 290 0
 465 0022 013B     		subs	r3, r3, #1
 466 0024 4343     		muls	r3, r0
 467 0026 D318     		adds	r3, r2, r3
 468 0028 E360     		str	r3, [r4, #12]
 291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
 469              		.loc 1 291 0
 470 002a FF23     		movs	r3, #255
 471 002c 4422     		movs	r2, #68
 472 002e A354     		strb	r3, [r4, r2]
 292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 473              		.loc 1 292 0
 474 0030 0132     		adds	r2, r2, #1
 475 0032 A354     		strb	r3, [r4, r2]
 294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 476              		.loc 1 294 0
 477 0034 002D     		cmp	r5, #0
 478 0036 11D1     		bne	.L33
 301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 45


 479              		.loc 1 301 0
 480 0038 2369     		ldr	r3, [r4, #16]
 481 003a 002B     		cmp	r3, #0
 482 003c 05D0     		beq	.L34
 303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 483              		.loc 1 303 0
 484 003e 2000     		movs	r0, r4
 485 0040 1030     		adds	r0, r0, #16
 486 0042 FFF7FEFF 		bl	xTaskRemoveFromEventList
 487              	.LVL61:
 488 0046 0028     		cmp	r0, #0
 489 0048 05D1     		bne	.L36
 490              	.L34:
 324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 491              		.loc 1 324 0
 492 004a FFF7FEFF 		bl	vPortExitCritical
 493              	.LVL62:
 329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 494              		.loc 1 329 0
 495 004e 0120     		movs	r0, #1
 496              		@ sp needed
 497              	.LVL63:
 498              	.LVL64:
 499 0050 70BD     		pop	{r4, r5, r6, pc}
 500              	.LVL65:
 501              	.L35:
 283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 502              		.loc 1 283 0 discriminator 1
 503              		.syntax divided
 504              	@ 283 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 505 0052 72B6     		 cpsid i 
 506              	@ 0 "" 2
 507              		.thumb
 508              		.syntax unified
 509              	.L32:
 510 0054 FEE7     		b	.L32
 511              	.LVL66:
 512              	.L36:
 305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 513              		.loc 1 305 0
 514 0056 FFF7FEFF 		bl	vPortYield
 515              	.LVL67:
 516 005a F6E7     		b	.L34
 517              	.L33:
 320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 518              		.loc 1 320 0
 519 005c 2000     		movs	r0, r4
 520 005e 1030     		adds	r0, r0, #16
 521 0060 FFF7FEFF 		bl	vListInitialise
 522              	.LVL68:
 321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 523              		.loc 1 321 0
 524 0064 2000     		movs	r0, r4
 525 0066 2430     		adds	r0, r0, #36
 526 0068 FFF7FEFF 		bl	vListInitialise
 527              	.LVL69:
 528 006c EDE7     		b	.L34
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 46


 529              		.cfi_endproc
 530              	.LFE0:
 532              		.section	.text.prvInitialiseNewQueue,"ax",%progbits
 533              		.align	1
 534              		.syntax unified
 535              		.code	16
 536              		.thumb_func
 537              		.fpu softvfp
 539              	prvInitialiseNewQueue:
 540              	.LFB2:
 433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Remove compiler warnings about unused parameters should
 541              		.loc 1 433 0
 542              		.cfi_startproc
 543              		@ args = 4, pretend = 0, frame = 0
 544              		@ frame_needed = 0, uses_anonymous_args = 0
 545              	.LVL70:
 546 0000 10B5     		push	{r4, lr}
 547              	.LCFI6:
 548              		.cfi_def_cfa_offset 8
 549              		.cfi_offset 4, -8
 550              		.cfi_offset 14, -4
 551 0002 029B     		ldr	r3, [sp, #8]
 552              	.LVL71:
 438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 553              		.loc 1 438 0
 554 0004 0029     		cmp	r1, #0
 555 0006 07D0     		beq	.L40
 449:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 556              		.loc 1 449 0
 557 0008 1A60     		str	r2, [r3]
 558              	.L39:
 454:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxNewQueue->uxItemSize = uxItemSize;
 559              		.loc 1 454 0
 560 000a D863     		str	r0, [r3, #60]
 455:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 561              		.loc 1 455 0
 562 000c 1964     		str	r1, [r3, #64]
 456:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 563              		.loc 1 456 0
 564 000e 0121     		movs	r1, #1
 565              	.LVL72:
 566 0010 1800     		movs	r0, r3
 567              	.LVL73:
 568 0012 FFF7FEFF 		bl	xQueueGenericReset
 569              	.LVL74:
 471:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 570              		.loc 1 471 0
 571              		@ sp needed
 572 0016 10BD     		pop	{r4, pc}
 573              	.LVL75:
 574              	.L40:
 444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 575              		.loc 1 444 0
 576 0018 1B60     		str	r3, [r3]
 577 001a F6E7     		b	.L39
 578              		.cfi_endproc
 579              	.LFE2:
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 47


 581              		.section	.text.xQueueGenericCreate,"ax",%progbits
 582              		.align	1
 583              		.global	xQueueGenericCreate
 584              		.syntax unified
 585              		.code	16
 586              		.thumb_func
 587              		.fpu softvfp
 589              	xQueueGenericCreate:
 590              	.LFB1:
 387:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 591              		.loc 1 387 0
 592              		.cfi_startproc
 593              		@ args = 0, pretend = 0, frame = 0
 594              		@ frame_needed = 0, uses_anonymous_args = 0
 595              	.LVL76:
 596 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 597              	.LCFI7:
 598              		.cfi_def_cfa_offset 20
 599              		.cfi_offset 4, -20
 600              		.cfi_offset 5, -16
 601              		.cfi_offset 6, -12
 602              		.cfi_offset 7, -8
 603              		.cfi_offset 14, -4
 604 0002 83B0     		sub	sp, sp, #12
 605              	.LCFI8:
 606              		.cfi_def_cfa_offset 32
 607 0004 0600     		movs	r6, r0
 608 0006 0F00     		movs	r7, r1
 609 0008 1500     		movs	r5, r2
 392:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 610              		.loc 1 392 0
 611 000a 0028     		cmp	r0, #0
 612 000c 01D1     		bne	.L42
 392:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 613              		.loc 1 392 0 is_stmt 0 discriminator 1
 614              		.syntax divided
 615              	@ 392 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 616 000e 72B6     		 cpsid i 
 617              	@ 0 "" 2
 618              		.thumb
 619              		.syntax unified
 620              	.L43:
 621 0010 FEE7     		b	.L43
 622              	.L42:
 394:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 623              		.loc 1 394 0 is_stmt 1
 624 0012 0029     		cmp	r1, #0
 625 0014 02D0     		beq	.L46
 403:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 626              		.loc 1 403 0
 627 0016 0800     		movs	r0, r1
 628              	.LVL77:
 629 0018 7043     		muls	r0, r6
 630              	.LVL78:
 631 001a 00E0     		b	.L44
 632              	.LVL79:
 633              	.L46:
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 48


 397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 634              		.loc 1 397 0
 635 001c 0020     		movs	r0, #0
 636              	.LVL80:
 637              	.L44:
 406:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 638              		.loc 1 406 0
 639 001e 4830     		adds	r0, r0, #72
 640              	.LVL81:
 641 0020 FFF7FEFF 		bl	pvPortMalloc
 642              	.LVL82:
 643 0024 041E     		subs	r4, r0, #0
 644              	.LVL83:
 408:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 645              		.loc 1 408 0
 646 0026 07D0     		beq	.L45
 412:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 647              		.loc 1 412 0
 648 0028 0200     		movs	r2, r0
 649 002a 4832     		adds	r2, r2, #72
 423:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 650              		.loc 1 423 0
 651 002c 0090     		str	r0, [sp]
 652 002e 2B00     		movs	r3, r5
 653 0030 3900     		movs	r1, r7
 654 0032 3000     		movs	r0, r6
 655              	.LVL84:
 656 0034 FFF7FEFF 		bl	prvInitialiseNewQueue
 657              	.LVL85:
 658              	.L45:
 427:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 659              		.loc 1 427 0
 660 0038 2000     		movs	r0, r4
 661 003a 03B0     		add	sp, sp, #12
 662              		@ sp needed
 663              	.LVL86:
 664              	.LVL87:
 665              	.LVL88:
 666 003c F0BD     		pop	{r4, r5, r6, r7, pc}
 667              		.cfi_endproc
 668              	.LFE1:
 670              		.section	.text.xQueueGenericSend,"ax",%progbits
 671              		.align	1
 672              		.global	xQueueGenericSend
 673              		.syntax unified
 674              		.code	16
 675              		.thumb_func
 676              		.fpu softvfp
 678              	xQueueGenericSend:
 679              	.LFB5:
 724:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 680              		.loc 1 724 0
 681              		.cfi_startproc
 682              		@ args = 0, pretend = 0, frame = 16
 683              		@ frame_needed = 0, uses_anonymous_args = 0
 684              	.LVL89:
 685 0000 F0B5     		push	{r4, r5, r6, r7, lr}
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 49


 686              	.LCFI9:
 687              		.cfi_def_cfa_offset 20
 688              		.cfi_offset 4, -20
 689              		.cfi_offset 5, -16
 690              		.cfi_offset 6, -12
 691              		.cfi_offset 7, -8
 692              		.cfi_offset 14, -4
 693 0002 85B0     		sub	sp, sp, #20
 694              	.LCFI10:
 695              		.cfi_def_cfa_offset 40
 696 0004 0400     		movs	r4, r0
 697 0006 0F00     		movs	r7, r1
 698 0008 0192     		str	r2, [sp, #4]
 699 000a 1E00     		movs	r6, r3
 700              	.LVL90:
 729:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 701              		.loc 1 729 0
 702 000c 0028     		cmp	r0, #0
 703 000e 06D0     		beq	.L76
 730:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 704              		.loc 1 730 0
 705 0010 0029     		cmp	r1, #0
 706 0012 06D0     		beq	.L77
 707 0014 0125     		movs	r5, #1
 708              	.LVL91:
 709              	.L50:
 730:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 710              		.loc 1 730 0 is_stmt 0 discriminator 6
 711 0016 002D     		cmp	r5, #0
 712 0018 0AD1     		bne	.L51
 730:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 713              		.loc 1 730 0 discriminator 7
 714              		.syntax divided
 715              	@ 730 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 716 001a 72B6     		 cpsid i 
 717              	@ 0 "" 2
 718              		.thumb
 719              		.syntax unified
 720              	.L52:
 721 001c FEE7     		b	.L52
 722              	.LVL92:
 723              	.L76:
 729:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 724              		.loc 1 729 0 is_stmt 1 discriminator 1
 725              		.syntax divided
 726              	@ 729 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 727 001e 72B6     		 cpsid i 
 728              	@ 0 "" 2
 729              		.thumb
 730              		.syntax unified
 731              	.L49:
 732 0020 FEE7     		b	.L49
 733              	.L77:
 730:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 734              		.loc 1 730 0 discriminator 2
 735 0022 036C     		ldr	r3, [r0, #64]
 736              	.LVL93:
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 50


 737 0024 002B     		cmp	r3, #0
 738 0026 01D1     		bne	.L72
 730:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 739              		.loc 1 730 0 is_stmt 0
 740 0028 0125     		movs	r5, #1
 741 002a F4E7     		b	.L50
 742              	.L72:
 743 002c 0025     		movs	r5, #0
 744 002e F2E7     		b	.L50
 745              	.L51:
 731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 746              		.loc 1 731 0 is_stmt 1
 747 0030 022E     		cmp	r6, #2
 748 0032 03D0     		beq	.L78
 749              	.L53:
 731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 750              		.loc 1 731 0 is_stmt 0 discriminator 6
 751 0034 002D     		cmp	r5, #0
 752 0036 06D1     		bne	.L54
 731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 753              		.loc 1 731 0 discriminator 7
 754              		.syntax divided
 755              	@ 731 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 756 0038 72B6     		 cpsid i 
 757              	@ 0 "" 2
 758              		.thumb
 759              		.syntax unified
 760              	.L55:
 761 003a FEE7     		b	.L55
 762              	.L78:
 731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 763              		.loc 1 731 0 discriminator 2
 764 003c E36B     		ldr	r3, [r4, #60]
 765 003e 012B     		cmp	r3, #1
 766 0040 F8D0     		beq	.L53
 731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 767              		.loc 1 731 0
 768 0042 0025     		movs	r5, #0
 769 0044 F6E7     		b	.L53
 770              	.L54:
 734:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 771              		.loc 1 734 0 is_stmt 1
 772 0046 FFF7FEFF 		bl	xTaskGetSchedulerState
 773              	.LVL94:
 774 004a 0028     		cmp	r0, #0
 775 004c 03D1     		bne	.L56
 734:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 776              		.loc 1 734 0 is_stmt 0 discriminator 2
 777 004e 019B     		ldr	r3, [sp, #4]
 778 0050 002B     		cmp	r3, #0
 779 0052 00D0     		beq	.L56
 734:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 780              		.loc 1 734 0
 781 0054 0025     		movs	r5, #0
 782              	.L56:
 734:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 783              		.loc 1 734 0 discriminator 6
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 51


 784 0056 002D     		cmp	r5, #0
 785 0058 01D1     		bne	.L75
 734:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 786              		.loc 1 734 0 discriminator 7
 787              		.syntax divided
 788              	@ 734 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 789 005a 72B6     		 cpsid i 
 790              	@ 0 "" 2
 791              		.thumb
 792              		.syntax unified
 793              	.L58:
 794 005c FEE7     		b	.L58
 795              	.L75:
 796 005e 0025     		movs	r5, #0
 797 0060 36E0     		b	.L57
 798              	.LVL95:
 799              	.L59:
 753:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 800              		.loc 1 753 0 is_stmt 1
 801 0062 3200     		movs	r2, r6
 802 0064 3900     		movs	r1, r7
 803 0066 2000     		movs	r0, r4
 804 0068 FFF7FEFF 		bl	prvCopyDataToQueue
 805              	.LVL96:
 808:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 806              		.loc 1 808 0
 807 006c 636A     		ldr	r3, [r4, #36]
 808 006e 002B     		cmp	r3, #0
 809 0070 0CD0     		beq	.L61
 810:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 810              		.loc 1 810 0
 811 0072 2000     		movs	r0, r4
 812              	.LVL97:
 813 0074 2430     		adds	r0, r0, #36
 814 0076 FFF7FEFF 		bl	xTaskRemoveFromEventList
 815              	.LVL98:
 816 007a 0028     		cmp	r0, #0
 817 007c 01D0     		beq	.L62
 816:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 818              		.loc 1 816 0
 819 007e FFF7FEFF 		bl	vPortYield
 820              	.LVL99:
 821              	.L62:
 838:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 822              		.loc 1 838 0
 823 0082 FFF7FEFF 		bl	vPortExitCritical
 824              	.LVL100:
 839:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 825              		.loc 1 839 0
 826 0086 0120     		movs	r0, #1
 827              	.L47:
 918:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 828              		.loc 1 918 0
 829 0088 05B0     		add	sp, sp, #20
 830              		@ sp needed
 831              	.LVL101:
 832              	.LVL102:
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 52


 833              	.LVL103:
 834              	.LVL104:
 835 008a F0BD     		pop	{r4, r5, r6, r7, pc}
 836              	.LVL105:
 837              	.L61:
 823:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 838              		.loc 1 823 0
 839 008c 0028     		cmp	r0, #0
 840 008e F8D0     		beq	.L62
 829:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 841              		.loc 1 829 0
 842 0090 FFF7FEFF 		bl	vPortYield
 843              	.LVL106:
 844 0094 F5E7     		b	.L62
 845              	.L80:
 847:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 846              		.loc 1 847 0
 847 0096 FFF7FEFF 		bl	vPortExitCritical
 848              	.LVL107:
 852:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 849              		.loc 1 852 0
 850 009a 0020     		movs	r0, #0
 851 009c F4E7     		b	.L47
 852              	.L67:
 874:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 853              		.loc 1 874 0 discriminator 6
 854 009e FFF7FEFF 		bl	vPortExitCritical
 855              	.LVL108:
 877:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 856              		.loc 1 877 0 discriminator 6
 857 00a2 01A9     		add	r1, sp, #4
 858 00a4 02A8     		add	r0, sp, #8
 859 00a6 FFF7FEFF 		bl	xTaskCheckForTimeOut
 860              	.LVL109:
 861 00aa 0028     		cmp	r0, #0
 862 00ac 41D1     		bne	.L68
 879:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 863              		.loc 1 879 0
 864 00ae 2000     		movs	r0, r4
 865 00b0 FFF7FEFF 		bl	prvIsQueueFull
 866              	.LVL110:
 867 00b4 0028     		cmp	r0, #0
 868 00b6 36D0     		beq	.L69
 882:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 869              		.loc 1 882 0
 870 00b8 2000     		movs	r0, r4
 871 00ba 1030     		adds	r0, r0, #16
 872 00bc 0199     		ldr	r1, [sp, #4]
 873 00be FFF7FEFF 		bl	vTaskPlaceOnEventList
 874              	.LVL111:
 889:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 875              		.loc 1 889 0
 876 00c2 2000     		movs	r0, r4
 877 00c4 FFF7FEFF 		bl	prvUnlockQueue
 878              	.LVL112:
 896:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 879              		.loc 1 896 0
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 53


 880 00c8 FFF7FEFF 		bl	xTaskResumeAll
 881              	.LVL113:
 882 00cc 0028     		cmp	r0, #0
 883 00ce 27D0     		beq	.L79
 884              	.LVL114:
 885              	.L57:
 744:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 886              		.loc 1 744 0
 887 00d0 FFF7FEFF 		bl	vPortEnterCritical
 888              	.LVL115:
 750:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 889              		.loc 1 750 0
 890 00d4 A36B     		ldr	r3, [r4, #56]
 891 00d6 E26B     		ldr	r2, [r4, #60]
 892 00d8 9342     		cmp	r3, r2
 893 00da C2D3     		bcc	.L59
 750:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 894              		.loc 1 750 0 is_stmt 0 discriminator 1
 895 00dc 022E     		cmp	r6, #2
 896 00de C0D0     		beq	.L59
 843:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 897              		.loc 1 843 0 is_stmt 1
 898 00e0 019B     		ldr	r3, [sp, #4]
 899 00e2 002B     		cmp	r3, #0
 900 00e4 D7D0     		beq	.L80
 854:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 901              		.loc 1 854 0
 902 00e6 002D     		cmp	r5, #0
 903 00e8 03D1     		bne	.L65
 858:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 904              		.loc 1 858 0
 905 00ea 02A8     		add	r0, sp, #8
 906 00ec FFF7FEFF 		bl	vTaskSetTimeOutState
 907              	.LVL116:
 859:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 908              		.loc 1 859 0
 909 00f0 0135     		adds	r5, r5, #1
 910              	.LVL117:
 911              	.L65:
 868:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 912              		.loc 1 868 0
 913 00f2 FFF7FEFF 		bl	vPortExitCritical
 914              	.LVL118:
 873:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 915              		.loc 1 873 0
 916 00f6 FFF7FEFF 		bl	vTaskSuspendAll
 917              	.LVL119:
 874:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 918              		.loc 1 874 0
 919 00fa FFF7FEFF 		bl	vPortEnterCritical
 920              	.LVL120:
 921 00fe 4423     		movs	r3, #68
 922 0100 E35C     		ldrb	r3, [r4, r3]
 923 0102 5BB2     		sxtb	r3, r3
 924 0104 0133     		adds	r3, r3, #1
 925 0106 02D1     		bne	.L66
 874:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 54


 926              		.loc 1 874 0 is_stmt 0 discriminator 1
 927 0108 0022     		movs	r2, #0
 928 010a 4423     		movs	r3, #68
 929 010c E254     		strb	r2, [r4, r3]
 930              	.L66:
 874:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 931              		.loc 1 874 0 discriminator 3
 932 010e 4523     		movs	r3, #69
 933 0110 E35C     		ldrb	r3, [r4, r3]
 934 0112 5BB2     		sxtb	r3, r3
 935 0114 0133     		adds	r3, r3, #1
 936 0116 C2D1     		bne	.L67
 874:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 937              		.loc 1 874 0 discriminator 4
 938 0118 0022     		movs	r2, #0
 939 011a 4523     		movs	r3, #69
 940 011c E254     		strb	r2, [r4, r3]
 941 011e BEE7     		b	.L67
 942              	.L79:
 898:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 943              		.loc 1 898 0 is_stmt 1
 944 0120 FFF7FEFF 		bl	vPortYield
 945              	.LVL121:
 946 0124 D4E7     		b	.L57
 947              	.L69:
 904:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 948              		.loc 1 904 0
 949 0126 2000     		movs	r0, r4
 950 0128 FFF7FEFF 		bl	prvUnlockQueue
 951              	.LVL122:
 905:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 952              		.loc 1 905 0
 953 012c FFF7FEFF 		bl	xTaskResumeAll
 954              	.LVL123:
 955 0130 CEE7     		b	.L57
 956              	.L68:
 911:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 957              		.loc 1 911 0
 958 0132 2000     		movs	r0, r4
 959 0134 FFF7FEFF 		bl	prvUnlockQueue
 960              	.LVL124:
 912:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 961              		.loc 1 912 0
 962 0138 FFF7FEFF 		bl	xTaskResumeAll
 963              	.LVL125:
 915:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 964              		.loc 1 915 0
 965 013c 0020     		movs	r0, #0
 966 013e A3E7     		b	.L47
 967              		.cfi_endproc
 968              	.LFE5:
 970              		.section	.text.prvInitialiseMutex,"ax",%progbits
 971              		.align	1
 972              		.syntax unified
 973              		.code	16
 974              		.thumb_func
 975              		.fpu softvfp
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 55


 977              	prvInitialiseMutex:
 978              	.LFB3:
 477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 979              		.loc 1 477 0
 980              		.cfi_startproc
 981              		@ args = 0, pretend = 0, frame = 0
 982              		@ frame_needed = 0, uses_anonymous_args = 0
 983              	.LVL126:
 984 0000 10B5     		push	{r4, lr}
 985              	.LCFI11:
 986              		.cfi_def_cfa_offset 8
 987              		.cfi_offset 4, -8
 988              		.cfi_offset 14, -4
 478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 989              		.loc 1 478 0
 990 0002 0028     		cmp	r0, #0
 991 0004 07D0     		beq	.L81
 484:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 992              		.loc 1 484 0
 993 0006 0023     		movs	r3, #0
 994 0008 4360     		str	r3, [r0, #4]
 485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 995              		.loc 1 485 0
 996 000a 0360     		str	r3, [r0]
 488:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 997              		.loc 1 488 0
 998 000c C360     		str	r3, [r0, #12]
 493:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 999              		.loc 1 493 0
 1000 000e 0022     		movs	r2, #0
 1001 0010 0021     		movs	r1, #0
 1002 0012 FFF7FEFF 		bl	xQueueGenericSend
 1003              	.LVL127:
 1004              	.L81:
 499:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1005              		.loc 1 499 0
 1006              		@ sp needed
 1007 0016 10BD     		pop	{r4, pc}
 1008              		.cfi_endproc
 1009              	.LFE3:
 1011              		.section	.text.xQueueCreateMutex,"ax",%progbits
 1012              		.align	1
 1013              		.global	xQueueCreateMutex
 1014              		.syntax unified
 1015              		.code	16
 1016              		.thumb_func
 1017              		.fpu softvfp
 1019              	xQueueCreateMutex:
 1020              	.LFB4:
 507:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 1021              		.loc 1 507 0
 1022              		.cfi_startproc
 1023              		@ args = 0, pretend = 0, frame = 0
 1024              		@ frame_needed = 0, uses_anonymous_args = 0
 1025              	.LVL128:
 1026 0000 10B5     		push	{r4, lr}
 1027              	.LCFI12:
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 56


 1028              		.cfi_def_cfa_offset 8
 1029              		.cfi_offset 4, -8
 1030              		.cfi_offset 14, -4
 1031 0002 0200     		movs	r2, r0
 1032              	.LVL129:
 511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( pxNewQueue );
 1033              		.loc 1 511 0
 1034 0004 0021     		movs	r1, #0
 1035 0006 0120     		movs	r0, #1
 1036              	.LVL130:
 1037 0008 FFF7FEFF 		bl	xQueueGenericCreate
 1038              	.LVL131:
 1039 000c 0400     		movs	r4, r0
 1040              	.LVL132:
 512:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1041              		.loc 1 512 0
 1042 000e FFF7FEFF 		bl	prvInitialiseMutex
 1043              	.LVL133:
 515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1044              		.loc 1 515 0
 1045 0012 2000     		movs	r0, r4
 1046              		@ sp needed
 1047              	.LVL134:
 1048 0014 10BD     		pop	{r4, pc}
 1049              		.cfi_endproc
 1050              	.LFE4:
 1052              		.section	.text.xQueueGenericSendFromISR,"ax",%progbits
 1053              		.align	1
 1054              		.global	xQueueGenericSendFromISR
 1055              		.syntax unified
 1056              		.code	16
 1057              		.thumb_func
 1058              		.fpu softvfp
 1060              	xQueueGenericSendFromISR:
 1061              	.LFB6:
 922:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 1062              		.loc 1 922 0
 1063              		.cfi_startproc
 1064              		@ args = 0, pretend = 0, frame = 8
 1065              		@ frame_needed = 0, uses_anonymous_args = 0
 1066              	.LVL135:
 1067 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1068              	.LCFI13:
 1069              		.cfi_def_cfa_offset 20
 1070              		.cfi_offset 4, -20
 1071              		.cfi_offset 5, -16
 1072              		.cfi_offset 6, -12
 1073              		.cfi_offset 7, -8
 1074              		.cfi_offset 14, -4
 1075 0002 83B0     		sub	sp, sp, #12
 1076              	.LCFI14:
 1077              		.cfi_def_cfa_offset 32
 1078 0004 0400     		movs	r4, r0
 1079 0006 0091     		str	r1, [sp]
 1080 0008 1600     		movs	r6, r2
 1081 000a 1F00     		movs	r7, r3
 1082              	.LVL136:
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 57


 927:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1083              		.loc 1 927 0
 1084 000c 0028     		cmp	r0, #0
 1085 000e 07D0     		beq	.L103
 928:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1086              		.loc 1 928 0
 1087 0010 009B     		ldr	r3, [sp]
 1088              	.LVL137:
 1089 0012 002B     		cmp	r3, #0
 1090 0014 06D0     		beq	.L104
 1091 0016 0123     		movs	r3, #1
 1092              	.L87:
 928:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1093              		.loc 1 928 0 is_stmt 0 discriminator 6
 1094 0018 002B     		cmp	r3, #0
 1095 001a 0AD1     		bne	.L88
 928:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1096              		.loc 1 928 0 discriminator 7
 1097              		.syntax divided
 1098              	@ 928 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1099 001c 72B6     		 cpsid i 
 1100              	@ 0 "" 2
 1101              		.thumb
 1102              		.syntax unified
 1103              	.L89:
 1104 001e FEE7     		b	.L89
 1105              	.LVL138:
 1106              	.L103:
 927:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1107              		.loc 1 927 0 is_stmt 1 discriminator 1
 1108              		.syntax divided
 1109              	@ 927 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1110 0020 72B6     		 cpsid i 
 1111              	@ 0 "" 2
 1112              		.thumb
 1113              		.syntax unified
 1114              	.L86:
 1115 0022 FEE7     		b	.L86
 1116              	.LVL139:
 1117              	.L104:
 928:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1118              		.loc 1 928 0 discriminator 2
 1119 0024 036C     		ldr	r3, [r0, #64]
 1120 0026 002B     		cmp	r3, #0
 1121 0028 01D1     		bne	.L97
 928:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1122              		.loc 1 928 0 is_stmt 0
 1123 002a 0133     		adds	r3, r3, #1
 1124 002c F4E7     		b	.L87
 1125              	.L97:
 1126 002e 0023     		movs	r3, #0
 1127 0030 F2E7     		b	.L87
 1128              	.L88:
 929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1129              		.loc 1 929 0 is_stmt 1
 1130 0032 022F     		cmp	r7, #2
 1131 0034 03D0     		beq	.L105
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 58


 1132              	.LVL140:
 1133              	.L90:
 929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1134              		.loc 1 929 0 is_stmt 0 discriminator 6
 1135 0036 002B     		cmp	r3, #0
 1136 0038 06D1     		bne	.L91
 929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1137              		.loc 1 929 0 discriminator 7
 1138              		.syntax divided
 1139              	@ 929 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1140 003a 72B6     		 cpsid i 
 1141              	@ 0 "" 2
 1142              		.thumb
 1143              		.syntax unified
 1144              	.L92:
 1145 003c FEE7     		b	.L92
 1146              	.LVL141:
 1147              	.L105:
 929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1148              		.loc 1 929 0 discriminator 2
 1149 003e E26B     		ldr	r2, [r4, #60]
 1150              	.LVL142:
 1151 0040 012A     		cmp	r2, #1
 1152 0042 F8D0     		beq	.L90
 929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1153              		.loc 1 929 0
 1154 0044 0023     		movs	r3, #0
 1155 0046 F6E7     		b	.L90
 1156              	.L91:
 952:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 1157              		.loc 1 952 0 is_stmt 1
 1158 0048 FFF7FEFF 		bl	ulSetInterruptMaskFromISR
 1159              	.LVL143:
 1160 004c 0190     		str	r0, [sp, #4]
 1161              	.LVL144:
 954:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1162              		.loc 1 954 0
 1163 004e A36B     		ldr	r3, [r4, #56]
 1164 0050 E26B     		ldr	r2, [r4, #60]
 1165 0052 9342     		cmp	r3, r2
 1166 0054 01D3     		bcc	.L93
 954:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1167              		.loc 1 954 0 is_stmt 0 discriminator 1
 1168 0056 022F     		cmp	r7, #2
 1169 0058 23D1     		bne	.L99
 1170              	.L93:
 1171              	.LBB4:
 956:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1172              		.loc 1 956 0 is_stmt 1
 1173 005a 4523     		movs	r3, #69
 1174 005c E55C     		ldrb	r5, [r4, r3]
 1175 005e 6DB2     		sxtb	r5, r5
 1176              	.LVL145:
 965:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1177              		.loc 1 965 0
 1178 0060 3A00     		movs	r2, r7
 1179 0062 0099     		ldr	r1, [sp]
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 59


 1180 0064 2000     		movs	r0, r4
 1181              	.LVL146:
 1182 0066 FFF7FEFF 		bl	prvCopyDataToQueue
 1183              	.LVL147:
 969:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1184              		.loc 1 969 0
 1185 006a 6B1C     		adds	r3, r5, #1
 1186 006c 13D1     		bne	.L95
1024:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 1187              		.loc 1 1024 0
 1188 006e 636A     		ldr	r3, [r4, #36]
 1189 0070 002B     		cmp	r3, #0
 1190 0072 18D0     		beq	.L100
1026:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 1191              		.loc 1 1026 0
 1192 0074 2000     		movs	r0, r4
 1193 0076 2430     		adds	r0, r0, #36
 1194 0078 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1195              	.LVL148:
 1196 007c 0028     		cmp	r0, #0
 1197 007e 14D0     		beq	.L101
1030:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 1198              		.loc 1 1030 0
 1199 0080 002E     		cmp	r6, #0
 1200 0082 14D0     		beq	.L102
1032:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 1201              		.loc 1 1032 0
 1202 0084 0123     		movs	r3, #1
 1203 0086 3360     		str	r3, [r6]
1058:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1204              		.loc 1 1058 0
 1205 0088 0124     		movs	r4, #1
 1206              	.LVL149:
 1207              	.L94:
 1208              	.LBE4:
1066:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1209              		.loc 1 1066 0
 1210 008a 0198     		ldr	r0, [sp, #4]
 1211 008c FFF7FEFF 		bl	vClearInterruptMaskFromISR
 1212              	.LVL150:
1069:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 1213              		.loc 1 1069 0
 1214 0090 2000     		movs	r0, r4
 1215 0092 03B0     		add	sp, sp, #12
 1216              	.LVL151:
 1217              		@ sp needed
 1218              	.LVL152:
 1219              	.LVL153:
 1220              	.LVL154:
 1221 0094 F0BD     		pop	{r4, r5, r6, r7, pc}
 1222              	.LVL155:
 1223              	.L95:
 1224              	.LBB5:
1055:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1225              		.loc 1 1055 0
 1226 0096 0135     		adds	r5, r5, #1
 1227              	.LVL156:
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 60


 1228 0098 6DB2     		sxtb	r5, r5
 1229              	.LVL157:
 1230 009a 4523     		movs	r3, #69
 1231 009c E554     		strb	r5, [r4, r3]
1058:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1232              		.loc 1 1058 0
 1233 009e 0124     		movs	r4, #1
 1234              	.LVL158:
 1235 00a0 F3E7     		b	.L94
 1236              	.LVL159:
 1237              	.L99:
 1238              	.LBE5:
1063:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1239              		.loc 1 1063 0
 1240 00a2 0024     		movs	r4, #0
 1241              	.LVL160:
 1242 00a4 F1E7     		b	.L94
 1243              	.LVL161:
 1244              	.L100:
 1245              	.LBB6:
1058:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1246              		.loc 1 1058 0
 1247 00a6 0124     		movs	r4, #1
 1248              	.LVL162:
 1249 00a8 EFE7     		b	.L94
 1250              	.LVL163:
 1251              	.L101:
 1252 00aa 0124     		movs	r4, #1
 1253              	.LVL164:
 1254 00ac EDE7     		b	.L94
 1255              	.LVL165:
 1256              	.L102:
 1257 00ae 0124     		movs	r4, #1
 1258              	.LVL166:
 1259 00b0 EBE7     		b	.L94
 1260              	.LBE6:
 1261              		.cfi_endproc
 1262              	.LFE6:
 1264              		.section	.text.xQueueGiveFromISR,"ax",%progbits
 1265              		.align	1
 1266              		.global	xQueueGiveFromISR
 1267              		.syntax unified
 1268              		.code	16
 1269              		.thumb_func
 1270              		.fpu softvfp
 1272              	xQueueGiveFromISR:
 1273              	.LFB7:
1073:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 1274              		.loc 1 1073 0
 1275              		.cfi_startproc
 1276              		@ args = 0, pretend = 0, frame = 0
 1277              		@ frame_needed = 0, uses_anonymous_args = 0
 1278              	.LVL167:
 1279 0000 70B5     		push	{r4, r5, r6, lr}
 1280              	.LCFI15:
 1281              		.cfi_def_cfa_offset 16
 1282              		.cfi_offset 4, -16
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 61


 1283              		.cfi_offset 5, -12
 1284              		.cfi_offset 6, -8
 1285              		.cfi_offset 14, -4
 1286 0002 0400     		movs	r4, r0
 1287 0004 0E00     		movs	r6, r1
 1288              	.LVL168:
1084:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1289              		.loc 1 1084 0
 1290 0006 0028     		cmp	r0, #0
 1291 0008 04D0     		beq	.L122
1088:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1292              		.loc 1 1088 0
 1293 000a 036C     		ldr	r3, [r0, #64]
 1294 000c 002B     		cmp	r3, #0
 1295 000e 03D0     		beq	.L109
1088:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1296              		.loc 1 1088 0 is_stmt 0 discriminator 1
 1297              		.syntax divided
 1298              	@ 1088 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1299 0010 72B6     		 cpsid i 
 1300              	@ 0 "" 2
 1301              		.thumb
 1302              		.syntax unified
 1303              	.L110:
 1304 0012 FEE7     		b	.L110
 1305              	.L122:
1084:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1306              		.loc 1 1084 0 is_stmt 1 discriminator 1
 1307              		.syntax divided
 1308              	@ 1084 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1309 0014 72B6     		 cpsid i 
 1310              	@ 0 "" 2
 1311              		.thumb
 1312              		.syntax unified
 1313              	.L108:
 1314 0016 FEE7     		b	.L108
 1315              	.L109:
1093:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1316              		.loc 1 1093 0
 1317 0018 0368     		ldr	r3, [r0]
 1318 001a 002B     		cmp	r3, #0
 1319 001c 04D0     		beq	.L123
 1320 001e 0123     		movs	r3, #1
 1321              	.L111:
1093:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1322              		.loc 1 1093 0 is_stmt 0 discriminator 6
 1323 0020 002B     		cmp	r3, #0
 1324 0022 08D1     		bne	.L112
1093:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1325              		.loc 1 1093 0 discriminator 7
 1326              		.syntax divided
 1327              	@ 1093 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1328 0024 72B6     		 cpsid i 
 1329              	@ 0 "" 2
 1330              		.thumb
 1331              		.syntax unified
 1332              	.L113:
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 62


 1333 0026 FEE7     		b	.L113
 1334              	.L123:
1093:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1335              		.loc 1 1093 0 discriminator 2
 1336 0028 4368     		ldr	r3, [r0, #4]
 1337 002a 002B     		cmp	r3, #0
 1338 002c 01D1     		bne	.L117
1093:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1339              		.loc 1 1093 0
 1340 002e 0133     		adds	r3, r3, #1
 1341 0030 F6E7     		b	.L111
 1342              	.L117:
 1343 0032 0023     		movs	r3, #0
 1344 0034 F4E7     		b	.L111
 1345              	.L112:
1111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 1346              		.loc 1 1111 0 is_stmt 1
 1347 0036 FFF7FEFF 		bl	ulSetInterruptMaskFromISR
 1348              	.LVL169:
 1349 003a 0500     		movs	r5, r0
 1350              	.LVL170:
 1351              	.LBB7:
1113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1352              		.loc 1 1113 0
 1353 003c A26B     		ldr	r2, [r4, #56]
 1354              	.LVL171:
1118:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1355              		.loc 1 1118 0
 1356 003e E36B     		ldr	r3, [r4, #60]
 1357 0040 9A42     		cmp	r2, r3
 1358 0042 1FD2     		bcs	.L118
 1359              	.LBB8:
1120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1360              		.loc 1 1120 0
 1361 0044 4523     		movs	r3, #69
 1362 0046 E35C     		ldrb	r3, [r4, r3]
 1363 0048 5BB2     		sxtb	r3, r3
 1364              	.LVL172:
1130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1365              		.loc 1 1130 0
 1366 004a 0132     		adds	r2, r2, #1
 1367              	.LVL173:
 1368 004c A263     		str	r2, [r4, #56]
1134:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1369              		.loc 1 1134 0
 1370 004e 5A1C     		adds	r2, r3, #1
 1371 0050 12D1     		bne	.L115
 1372              	.LVL174:
1189:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 1373              		.loc 1 1189 0
 1374 0052 636A     		ldr	r3, [r4, #36]
 1375              	.LVL175:
 1376 0054 002B     		cmp	r3, #0
 1377 0056 17D0     		beq	.L119
1191:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 1378              		.loc 1 1191 0
 1379 0058 2000     		movs	r0, r4
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 63


 1380              	.LVL176:
 1381 005a 2430     		adds	r0, r0, #36
 1382 005c FFF7FEFF 		bl	xTaskRemoveFromEventList
 1383              	.LVL177:
 1384 0060 0028     		cmp	r0, #0
 1385 0062 13D0     		beq	.L120
1195:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 1386              		.loc 1 1195 0
 1387 0064 002E     		cmp	r6, #0
 1388 0066 13D0     		beq	.L121
1197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 1389              		.loc 1 1197 0
 1390 0068 0123     		movs	r3, #1
 1391 006a 3360     		str	r3, [r6]
1223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1392              		.loc 1 1223 0
 1393 006c 0124     		movs	r4, #1
 1394              	.LVL178:
 1395              	.L114:
 1396              	.LBE8:
 1397              	.LBE7:
1231:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1398              		.loc 1 1231 0
 1399 006e 2800     		movs	r0, r5
 1400 0070 FFF7FEFF 		bl	vClearInterruptMaskFromISR
 1401              	.LVL179:
1234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 1402              		.loc 1 1234 0
 1403 0074 2000     		movs	r0, r4
 1404              		@ sp needed
 1405              	.LVL180:
 1406              	.LVL181:
 1407              	.LVL182:
 1408 0076 70BD     		pop	{r4, r5, r6, pc}
 1409              	.LVL183:
 1410              	.L115:
 1411              	.LBB11:
 1412              	.LBB9:
1220:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1413              		.loc 1 1220 0
 1414 0078 0133     		adds	r3, r3, #1
 1415              	.LVL184:
 1416 007a 5BB2     		sxtb	r3, r3
 1417              	.LVL185:
 1418 007c 4522     		movs	r2, #69
 1419 007e A354     		strb	r3, [r4, r2]
 1420              	.LVL186:
1223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1421              		.loc 1 1223 0
 1422 0080 0124     		movs	r4, #1
 1423              	.LVL187:
 1424 0082 F4E7     		b	.L114
 1425              	.LVL188:
 1426              	.L118:
 1427              	.LBE9:
1228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1428              		.loc 1 1228 0
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 64


 1429 0084 0024     		movs	r4, #0
 1430              	.LVL189:
 1431 0086 F2E7     		b	.L114
 1432              	.LVL190:
 1433              	.L119:
 1434              	.LBB10:
1223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1435              		.loc 1 1223 0
 1436 0088 0124     		movs	r4, #1
 1437              	.LVL191:
 1438 008a F0E7     		b	.L114
 1439              	.LVL192:
 1440              	.L120:
 1441 008c 0124     		movs	r4, #1
 1442              	.LVL193:
 1443 008e EEE7     		b	.L114
 1444              	.LVL194:
 1445              	.L121:
 1446 0090 0124     		movs	r4, #1
 1447              	.LVL195:
 1448 0092 ECE7     		b	.L114
 1449              	.LBE10:
 1450              	.LBE11:
 1451              		.cfi_endproc
 1452              	.LFE7:
 1454              		.section	.text.xQueueGenericReceive,"ax",%progbits
 1455              		.align	1
 1456              		.global	xQueueGenericReceive
 1457              		.syntax unified
 1458              		.code	16
 1459              		.thumb_func
 1460              		.fpu softvfp
 1462              	xQueueGenericReceive:
 1463              	.LFB8:
1238:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 1464              		.loc 1 1238 0
 1465              		.cfi_startproc
 1466              		@ args = 0, pretend = 0, frame = 16
 1467              		@ frame_needed = 0, uses_anonymous_args = 0
 1468              	.LVL196:
 1469 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1470              	.LCFI16:
 1471              		.cfi_def_cfa_offset 20
 1472              		.cfi_offset 4, -20
 1473              		.cfi_offset 5, -16
 1474              		.cfi_offset 6, -12
 1475              		.cfi_offset 7, -8
 1476              		.cfi_offset 14, -4
 1477 0002 CE46     		mov	lr, r9
 1478 0004 4746     		mov	r7, r8
 1479 0006 80B5     		push	{r7, lr}
 1480              	.LCFI17:
 1481              		.cfi_def_cfa_offset 28
 1482              		.cfi_offset 8, -28
 1483              		.cfi_offset 9, -24
 1484 0008 85B0     		sub	sp, sp, #20
 1485              	.LCFI18:
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 65


 1486              		.cfi_def_cfa_offset 48
 1487 000a 0400     		movs	r4, r0
 1488 000c 0E00     		movs	r6, r1
 1489 000e 0192     		str	r2, [sp, #4]
 1490 0010 9946     		mov	r9, r3
 1491              	.LVL197:
1244:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1492              		.loc 1 1244 0
 1493 0012 0028     		cmp	r0, #0
 1494 0014 06D0     		beq	.L150
1245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1495              		.loc 1 1245 0
 1496 0016 0029     		cmp	r1, #0
 1497 0018 06D0     		beq	.L151
 1498 001a 0125     		movs	r5, #1
 1499              	.LVL198:
 1500              	.L127:
1245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1501              		.loc 1 1245 0 is_stmt 0 discriminator 6
 1502 001c 002D     		cmp	r5, #0
 1503 001e 0AD1     		bne	.L128
1245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1504              		.loc 1 1245 0 discriminator 7
 1505              		.syntax divided
 1506              	@ 1245 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1507 0020 72B6     		 cpsid i 
 1508              	@ 0 "" 2
 1509              		.thumb
 1510              		.syntax unified
 1511              	.L129:
 1512 0022 FEE7     		b	.L129
 1513              	.LVL199:
 1514              	.L150:
1244:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1515              		.loc 1 1244 0 is_stmt 1 discriminator 1
 1516              		.syntax divided
 1517              	@ 1244 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1518 0024 72B6     		 cpsid i 
 1519              	@ 0 "" 2
 1520              		.thumb
 1521              		.syntax unified
 1522              	.L126:
 1523 0026 FEE7     		b	.L126
 1524              	.L151:
1245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1525              		.loc 1 1245 0 discriminator 2
 1526 0028 036C     		ldr	r3, [r0, #64]
 1527              	.LVL200:
 1528 002a 002B     		cmp	r3, #0
 1529 002c 01D1     		bne	.L147
1245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1530              		.loc 1 1245 0 is_stmt 0
 1531 002e 0125     		movs	r5, #1
 1532 0030 F4E7     		b	.L127
 1533              	.L147:
 1534 0032 0025     		movs	r5, #0
 1535 0034 F2E7     		b	.L127
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 66


 1536              	.L128:
1248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1537              		.loc 1 1248 0 is_stmt 1
 1538 0036 FFF7FEFF 		bl	xTaskGetSchedulerState
 1539              	.LVL201:
 1540 003a 0028     		cmp	r0, #0
 1541 003c 03D1     		bne	.L130
1248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1542              		.loc 1 1248 0 is_stmt 0 discriminator 2
 1543 003e 019B     		ldr	r3, [sp, #4]
 1544 0040 002B     		cmp	r3, #0
 1545 0042 00D0     		beq	.L130
1248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1546              		.loc 1 1248 0
 1547 0044 0025     		movs	r5, #0
 1548              	.L130:
1248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1549              		.loc 1 1248 0 discriminator 6
 1550 0046 002D     		cmp	r5, #0
 1551 0048 01D1     		bne	.L149
1248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1552              		.loc 1 1248 0 discriminator 7
 1553              		.syntax divided
 1554              	@ 1248 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1555 004a 72B6     		 cpsid i 
 1556              	@ 0 "" 2
 1557              		.thumb
 1558              		.syntax unified
 1559              	.L132:
 1560 004c FEE7     		b	.L132
 1561              	.L149:
 1562 004e 0027     		movs	r7, #0
 1563 0050 5AE0     		b	.L131
 1564              	.LVL202:
 1565              	.L153:
 1566              	.LBB12:
1268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1567              		.loc 1 1268 0 is_stmt 1
 1568 0052 E368     		ldr	r3, [r4, #12]
 1569 0054 9846     		mov	r8, r3
 1570              	.LVL203:
1270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1571              		.loc 1 1270 0
 1572 0056 3100     		movs	r1, r6
 1573 0058 2000     		movs	r0, r4
 1574 005a FFF7FEFF 		bl	prvCopyDataFromQueue
 1575              	.LVL204:
1272:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 1576              		.loc 1 1272 0
 1577 005e 4B46     		mov	r3, r9
 1578 0060 002B     		cmp	r3, #0
 1579 0062 1AD1     		bne	.L134
 1580              	.LVL205:
1277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1581              		.loc 1 1277 0
 1582 0064 013D     		subs	r5, r5, #1
 1583              	.LVL206:
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 67


 1584 0066 A563     		str	r5, [r4, #56]
1281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 1585              		.loc 1 1281 0
 1586 0068 2368     		ldr	r3, [r4]
 1587              	.LVL207:
 1588 006a 002B     		cmp	r3, #0
 1589 006c 02D1     		bne	.L135
1285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 1590              		.loc 1 1285 0
 1591 006e FFF7FEFF 		bl	pvTaskIncrementMutexHeldCount
 1592              	.LVL208:
 1593 0072 6060     		str	r0, [r4, #4]
 1594              	.L135:
1294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 1595              		.loc 1 1294 0
 1596 0074 2369     		ldr	r3, [r4, #16]
 1597 0076 002B     		cmp	r3, #0
 1598 0078 07D0     		beq	.L136
1296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 1599              		.loc 1 1296 0
 1600 007a 2000     		movs	r0, r4
 1601 007c 1030     		adds	r0, r0, #16
 1602 007e FFF7FEFF 		bl	xTaskRemoveFromEventList
 1603              	.LVL209:
 1604 0082 0028     		cmp	r0, #0
 1605 0084 01D0     		beq	.L136
1298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 1606              		.loc 1 1298 0
 1607 0086 FFF7FEFF 		bl	vPortYield
 1608              	.LVL210:
 1609              	.L136:
1338:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 1610              		.loc 1 1338 0
 1611 008a FFF7FEFF 		bl	vPortExitCritical
 1612              	.LVL211:
1339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1613              		.loc 1 1339 0
 1614 008e 0120     		movs	r0, #1
 1615              	.LVL212:
 1616              	.L124:
 1617              	.LBE12:
1431:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 1618              		.loc 1 1431 0
 1619 0090 05B0     		add	sp, sp, #20
 1620              		@ sp needed
 1621              	.LVL213:
 1622              	.LVL214:
 1623              	.LVL215:
 1624              	.LVL216:
 1625 0092 0CBC     		pop	{r2, r3}
 1626 0094 9046     		mov	r8, r2
 1627 0096 9946     		mov	r9, r3
 1628 0098 F0BD     		pop	{r4, r5, r6, r7, pc}
 1629              	.LVL217:
 1630              	.L134:
 1631              	.LBB13:
1316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 68


 1632              		.loc 1 1316 0
 1633 009a 4346     		mov	r3, r8
 1634              	.LVL218:
 1635 009c E360     		str	r3, [r4, #12]
1320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 1636              		.loc 1 1320 0
 1637 009e 636A     		ldr	r3, [r4, #36]
 1638 00a0 002B     		cmp	r3, #0
 1639 00a2 F2D0     		beq	.L136
1322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 1640              		.loc 1 1322 0
 1641 00a4 2000     		movs	r0, r4
 1642 00a6 2430     		adds	r0, r0, #36
 1643 00a8 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1644              	.LVL219:
 1645 00ac 0028     		cmp	r0, #0
 1646 00ae ECD0     		beq	.L136
1325:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 1647              		.loc 1 1325 0
 1648 00b0 FFF7FEFF 		bl	vPortYield
 1649              	.LVL220:
 1650 00b4 E9E7     		b	.L136
 1651              	.LVL221:
 1652              	.L154:
1347:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
 1653              		.loc 1 1347 0
 1654 00b6 FFF7FEFF 		bl	vPortExitCritical
 1655              	.LVL222:
1349:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 1656              		.loc 1 1349 0
 1657 00ba 0020     		movs	r0, #0
 1658 00bc E8E7     		b	.L124
 1659              	.L155:
1355:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 1660              		.loc 1 1355 0
 1661 00be 02A8     		add	r0, sp, #8
 1662 00c0 FFF7FEFF 		bl	vTaskSetTimeOutState
 1663              	.LVL223:
1356:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 1664              		.loc 1 1356 0
 1665 00c4 0137     		adds	r7, r7, #1
 1666 00c6 29E0     		b	.L139
 1667              	.LVL224:
 1668              	.L156:
 1669              	.LBE13:
1371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1670              		.loc 1 1371 0 discriminator 1
 1671 00c8 0022     		movs	r2, #0
 1672 00ca 4423     		movs	r3, #68
 1673 00cc E254     		strb	r2, [r4, r3]
 1674 00ce 30E0     		b	.L140
 1675              	.L157:
1371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1676              		.loc 1 1371 0 is_stmt 0 discriminator 4
 1677 00d0 0022     		movs	r2, #0
 1678 00d2 4523     		movs	r3, #69
 1679 00d4 E254     		strb	r2, [r4, r3]
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 69


 1680 00d6 31E0     		b	.L141
 1681              	.L158:
1384:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 1682              		.loc 1 1384 0 is_stmt 1
 1683 00d8 FFF7FEFF 		bl	vPortEnterCritical
 1684              	.LVL225:
1386:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 1685              		.loc 1 1386 0
 1686 00dc 6068     		ldr	r0, [r4, #4]
 1687 00de FFF7FEFF 		bl	vTaskPriorityInherit
 1688              	.LVL226:
1388:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 1689              		.loc 1 1388 0
 1690 00e2 FFF7FEFF 		bl	vPortExitCritical
 1691              	.LVL227:
 1692 00e6 39E0     		b	.L144
 1693              	.L143:
1411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 1694              		.loc 1 1411 0
 1695 00e8 2000     		movs	r0, r4
 1696 00ea FFF7FEFF 		bl	prvUnlockQueue
 1697              	.LVL228:
1412:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1698              		.loc 1 1412 0
 1699 00ee FFF7FEFF 		bl	xTaskResumeAll
 1700              	.LVL229:
 1701 00f2 09E0     		b	.L131
 1702              	.L142:
1417:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 1703              		.loc 1 1417 0
 1704 00f4 2000     		movs	r0, r4
 1705 00f6 FFF7FEFF 		bl	prvUnlockQueue
 1706              	.LVL230:
1418:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1707              		.loc 1 1418 0
 1708 00fa FFF7FEFF 		bl	xTaskResumeAll
 1709              	.LVL231:
1420:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1710              		.loc 1 1420 0
 1711 00fe 2000     		movs	r0, r4
 1712 0100 FFF7FEFF 		bl	prvIsQueueEmpty
 1713              	.LVL232:
 1714 0104 0028     		cmp	r0, #0
 1715 0106 38D1     		bne	.L152
 1716              	.LVL233:
 1717              	.L131:
1258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1718              		.loc 1 1258 0
 1719 0108 FFF7FEFF 		bl	vPortEnterCritical
 1720              	.LVL234:
 1721              	.LBB14:
1260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1722              		.loc 1 1260 0
 1723 010c A56B     		ldr	r5, [r4, #56]
 1724              	.LVL235:
1264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1725              		.loc 1 1264 0
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 70


 1726 010e 002D     		cmp	r5, #0
 1727 0110 9FD1     		bne	.L153
1343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 1728              		.loc 1 1343 0
 1729 0112 019B     		ldr	r3, [sp, #4]
 1730 0114 002B     		cmp	r3, #0
 1731 0116 CED0     		beq	.L154
1351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 1732              		.loc 1 1351 0
 1733 0118 002F     		cmp	r7, #0
 1734 011a D0D0     		beq	.L155
 1735              	.LVL236:
 1736              	.L139:
 1737              	.LBE14:
1365:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1738              		.loc 1 1365 0
 1739 011c FFF7FEFF 		bl	vPortExitCritical
 1740              	.LVL237:
1370:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 1741              		.loc 1 1370 0
 1742 0120 FFF7FEFF 		bl	vTaskSuspendAll
 1743              	.LVL238:
1371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1744              		.loc 1 1371 0
 1745 0124 FFF7FEFF 		bl	vPortEnterCritical
 1746              	.LVL239:
 1747 0128 4423     		movs	r3, #68
 1748 012a E35C     		ldrb	r3, [r4, r3]
 1749 012c 5BB2     		sxtb	r3, r3
 1750 012e 0133     		adds	r3, r3, #1
 1751 0130 CAD0     		beq	.L156
 1752              	.L140:
1371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1753              		.loc 1 1371 0 is_stmt 0 discriminator 3
 1754 0132 4523     		movs	r3, #69
 1755 0134 E35C     		ldrb	r3, [r4, r3]
 1756 0136 5BB2     		sxtb	r3, r3
 1757 0138 0133     		adds	r3, r3, #1
 1758 013a C9D0     		beq	.L157
 1759              	.L141:
1371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1760              		.loc 1 1371 0 discriminator 6
 1761 013c FFF7FEFF 		bl	vPortExitCritical
 1762              	.LVL240:
1374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1763              		.loc 1 1374 0 is_stmt 1 discriminator 6
 1764 0140 01A9     		add	r1, sp, #4
 1765 0142 02A8     		add	r0, sp, #8
 1766 0144 FFF7FEFF 		bl	xTaskCheckForTimeOut
 1767              	.LVL241:
 1768 0148 0028     		cmp	r0, #0
 1769 014a D3D1     		bne	.L142
1376:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1770              		.loc 1 1376 0
 1771 014c 2000     		movs	r0, r4
 1772 014e FFF7FEFF 		bl	prvIsQueueEmpty
 1773              	.LVL242:
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 71


 1774 0152 0028     		cmp	r0, #0
 1775 0154 C8D0     		beq	.L143
1382:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 1776              		.loc 1 1382 0
 1777 0156 2368     		ldr	r3, [r4]
 1778 0158 002B     		cmp	r3, #0
 1779 015a BDD0     		beq	.L158
 1780              	.L144:
1397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 1781              		.loc 1 1397 0
 1782 015c 2000     		movs	r0, r4
 1783 015e 2430     		adds	r0, r0, #36
 1784 0160 0199     		ldr	r1, [sp, #4]
 1785 0162 FFF7FEFF 		bl	vTaskPlaceOnEventList
 1786              	.LVL243:
1398:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 1787              		.loc 1 1398 0
 1788 0166 2000     		movs	r0, r4
 1789 0168 FFF7FEFF 		bl	prvUnlockQueue
 1790              	.LVL244:
1399:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 1791              		.loc 1 1399 0
 1792 016c FFF7FEFF 		bl	xTaskResumeAll
 1793              	.LVL245:
 1794 0170 0028     		cmp	r0, #0
 1795 0172 C9D1     		bne	.L131
1401:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 1796              		.loc 1 1401 0
 1797 0174 FFF7FEFF 		bl	vPortYield
 1798              	.LVL246:
 1799 0178 C6E7     		b	.L131
 1800              	.L152:
1423:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1801              		.loc 1 1423 0
 1802 017a 0020     		movs	r0, #0
 1803 017c 88E7     		b	.L124
 1804              		.cfi_endproc
 1805              	.LFE8:
 1807              		.section	.text.xQueueReceiveFromISR,"ax",%progbits
 1808              		.align	1
 1809              		.global	xQueueReceiveFromISR
 1810              		.syntax unified
 1811              		.code	16
 1812              		.thumb_func
 1813              		.fpu softvfp
 1815              	xQueueReceiveFromISR:
 1816              	.LFB9:
1435:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 1817              		.loc 1 1435 0
 1818              		.cfi_startproc
 1819              		@ args = 0, pretend = 0, frame = 8
 1820              		@ frame_needed = 0, uses_anonymous_args = 0
 1821              	.LVL247:
 1822 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1823              	.LCFI19:
 1824              		.cfi_def_cfa_offset 20
 1825              		.cfi_offset 4, -20
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 72


 1826              		.cfi_offset 5, -16
 1827              		.cfi_offset 6, -12
 1828              		.cfi_offset 7, -8
 1829              		.cfi_offset 14, -4
 1830 0002 83B0     		sub	sp, sp, #12
 1831              	.LCFI20:
 1832              		.cfi_def_cfa_offset 32
 1833 0004 0400     		movs	r4, r0
 1834 0006 0091     		str	r1, [sp]
 1835 0008 1600     		movs	r6, r2
 1836              	.LVL248:
1440:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1837              		.loc 1 1440 0
 1838 000a 0028     		cmp	r0, #0
 1839 000c 07D0     		beq	.L173
1441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1840              		.loc 1 1441 0
 1841 000e 009B     		ldr	r3, [sp]
 1842 0010 002B     		cmp	r3, #0
 1843 0012 06D0     		beq	.L174
 1844 0014 0123     		movs	r3, #1
 1845              	.L162:
1441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1846              		.loc 1 1441 0 is_stmt 0 discriminator 6
 1847 0016 002B     		cmp	r3, #0
 1848 0018 0AD1     		bne	.L163
1441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1849              		.loc 1 1441 0 discriminator 7
 1850              		.syntax divided
 1851              	@ 1441 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1852 001a 72B6     		 cpsid i 
 1853              	@ 0 "" 2
 1854              		.thumb
 1855              		.syntax unified
 1856              	.L164:
 1857 001c FEE7     		b	.L164
 1858              	.L173:
1440:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1859              		.loc 1 1440 0 is_stmt 1 discriminator 1
 1860              		.syntax divided
 1861              	@ 1440 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1862 001e 72B6     		 cpsid i 
 1863              	@ 0 "" 2
 1864              		.thumb
 1865              		.syntax unified
 1866              	.L161:
 1867 0020 FEE7     		b	.L161
 1868              	.L174:
1441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1869              		.loc 1 1441 0 discriminator 2
 1870 0022 036C     		ldr	r3, [r0, #64]
 1871 0024 002B     		cmp	r3, #0
 1872 0026 01D1     		bne	.L168
1441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1873              		.loc 1 1441 0 is_stmt 0
 1874 0028 0133     		adds	r3, r3, #1
 1875 002a F4E7     		b	.L162
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 73


 1876              	.L168:
 1877 002c 0023     		movs	r3, #0
 1878 002e F2E7     		b	.L162
 1879              	.L163:
1459:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 1880              		.loc 1 1459 0 is_stmt 1
 1881 0030 FFF7FEFF 		bl	ulSetInterruptMaskFromISR
 1882              	.LVL249:
 1883 0034 0190     		str	r0, [sp, #4]
 1884              	.LVL250:
 1885              	.LBB15:
1461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1886              		.loc 1 1461 0
 1887 0036 A76B     		ldr	r7, [r4, #56]
 1888              	.LVL251:
1464:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1889              		.loc 1 1464 0
 1890 0038 002F     		cmp	r7, #0
 1891 003a 24D0     		beq	.L169
 1892              	.LBB16:
1466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1893              		.loc 1 1466 0
 1894 003c 4423     		movs	r3, #68
 1895 003e E55C     		ldrb	r5, [r4, r3]
 1896 0040 6DB2     		sxtb	r5, r5
 1897              	.LVL252:
1470:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting - 1;
 1898              		.loc 1 1470 0
 1899 0042 0099     		ldr	r1, [sp]
 1900 0044 2000     		movs	r0, r4
 1901              	.LVL253:
 1902 0046 FFF7FEFF 		bl	prvCopyDataFromQueue
 1903              	.LVL254:
1471:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1904              		.loc 1 1471 0
 1905 004a 7B1E     		subs	r3, r7, #1
 1906 004c A363     		str	r3, [r4, #56]
1477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1907              		.loc 1 1477 0
 1908 004e 6B1C     		adds	r3, r5, #1
 1909 0050 13D1     		bne	.L166
1479:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 1910              		.loc 1 1479 0
 1911 0052 2369     		ldr	r3, [r4, #16]
 1912 0054 002B     		cmp	r3, #0
 1913 0056 18D0     		beq	.L170
1481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 1914              		.loc 1 1481 0
 1915 0058 2000     		movs	r0, r4
 1916 005a 1030     		adds	r0, r0, #16
 1917 005c FFF7FEFF 		bl	xTaskRemoveFromEventList
 1918              	.LVL255:
 1919 0060 0028     		cmp	r0, #0
 1920 0062 14D0     		beq	.L171
1485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 1921              		.loc 1 1485 0
 1922 0064 002E     		cmp	r6, #0
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 74


 1923 0066 14D0     		beq	.L172
1487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 1924              		.loc 1 1487 0
 1925 0068 0123     		movs	r3, #1
 1926 006a 3360     		str	r3, [r6]
1511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1927              		.loc 1 1511 0
 1928 006c 0124     		movs	r4, #1
 1929              	.LVL256:
 1930              	.L165:
 1931              	.LBE16:
 1932              	.LBE15:
1519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1933              		.loc 1 1519 0
 1934 006e 0198     		ldr	r0, [sp, #4]
 1935 0070 FFF7FEFF 		bl	vClearInterruptMaskFromISR
 1936              	.LVL257:
1522:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 1937              		.loc 1 1522 0
 1938 0074 2000     		movs	r0, r4
 1939 0076 03B0     		add	sp, sp, #12
 1940              	.LVL258:
 1941              		@ sp needed
 1942              	.LVL259:
 1943              	.LVL260:
 1944              	.LVL261:
 1945 0078 F0BD     		pop	{r4, r5, r6, r7, pc}
 1946              	.LVL262:
 1947              	.L166:
 1948              	.LBB19:
 1949              	.LBB17:
1508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1950              		.loc 1 1508 0
 1951 007a 0135     		adds	r5, r5, #1
 1952              	.LVL263:
 1953 007c 6DB2     		sxtb	r5, r5
 1954              	.LVL264:
 1955 007e 4423     		movs	r3, #68
 1956 0080 E554     		strb	r5, [r4, r3]
1511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1957              		.loc 1 1511 0
 1958 0082 0124     		movs	r4, #1
 1959              	.LVL265:
 1960 0084 F3E7     		b	.L165
 1961              	.LVL266:
 1962              	.L169:
 1963              	.LBE17:
1515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
 1964              		.loc 1 1515 0
 1965 0086 0024     		movs	r4, #0
 1966              	.LVL267:
 1967 0088 F1E7     		b	.L165
 1968              	.LVL268:
 1969              	.L170:
 1970              	.LBB18:
1511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1971              		.loc 1 1511 0
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 75


 1972 008a 0124     		movs	r4, #1
 1973              	.LVL269:
 1974 008c EFE7     		b	.L165
 1975              	.LVL270:
 1976              	.L171:
 1977 008e 0124     		movs	r4, #1
 1978              	.LVL271:
 1979 0090 EDE7     		b	.L165
 1980              	.LVL272:
 1981              	.L172:
 1982 0092 0124     		movs	r4, #1
 1983              	.LVL273:
 1984 0094 EBE7     		b	.L165
 1985              	.LBE18:
 1986              	.LBE19:
 1987              		.cfi_endproc
 1988              	.LFE9:
 1990              		.section	.text.xQueuePeekFromISR,"ax",%progbits
 1991              		.align	1
 1992              		.global	xQueuePeekFromISR
 1993              		.syntax unified
 1994              		.code	16
 1995              		.thumb_func
 1996              		.fpu softvfp
 1998              	xQueuePeekFromISR:
 1999              	.LFB10:
1526:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 2000              		.loc 1 1526 0
 2001              		.cfi_startproc
 2002              		@ args = 0, pretend = 0, frame = 0
 2003              		@ frame_needed = 0, uses_anonymous_args = 0
 2004              	.LVL274:
 2005 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2006              	.LCFI21:
 2007              		.cfi_def_cfa_offset 24
 2008              		.cfi_offset 3, -24
 2009              		.cfi_offset 4, -20
 2010              		.cfi_offset 5, -16
 2011              		.cfi_offset 6, -12
 2012              		.cfi_offset 7, -8
 2013              		.cfi_offset 14, -4
 2014 0002 0400     		movs	r4, r0
 2015 0004 0D00     		movs	r5, r1
 2016              	.LVL275:
1532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 2017              		.loc 1 1532 0
 2018 0006 0028     		cmp	r0, #0
 2019 0008 06D0     		beq	.L187
1533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 2020              		.loc 1 1533 0
 2021 000a 0029     		cmp	r1, #0
 2022 000c 06D0     		beq	.L188
 2023 000e 0123     		movs	r3, #1
 2024              	.L178:
1533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 2025              		.loc 1 1533 0 is_stmt 0 discriminator 6
 2026 0010 002B     		cmp	r3, #0
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 76


 2027 0012 0AD1     		bne	.L179
1533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 2028              		.loc 1 1533 0 discriminator 7
 2029              		.syntax divided
 2030              	@ 1533 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2031 0014 72B6     		 cpsid i 
 2032              	@ 0 "" 2
 2033              		.thumb
 2034              		.syntax unified
 2035              	.L180:
 2036 0016 FEE7     		b	.L180
 2037              	.L187:
1532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 2038              		.loc 1 1532 0 is_stmt 1 discriminator 1
 2039              		.syntax divided
 2040              	@ 1532 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2041 0018 72B6     		 cpsid i 
 2042              	@ 0 "" 2
 2043              		.thumb
 2044              		.syntax unified
 2045              	.L177:
 2046 001a FEE7     		b	.L177
 2047              	.L188:
1533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 2048              		.loc 1 1533 0 discriminator 2
 2049 001c 036C     		ldr	r3, [r0, #64]
 2050 001e 002B     		cmp	r3, #0
 2051 0020 01D1     		bne	.L185
1533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 2052              		.loc 1 1533 0 is_stmt 0
 2053 0022 0133     		adds	r3, r3, #1
 2054 0024 F4E7     		b	.L178
 2055              	.L185:
 2056 0026 0023     		movs	r3, #0
 2057 0028 F2E7     		b	.L178
 2058              	.L179:
1534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2059              		.loc 1 1534 0 is_stmt 1
 2060 002a 236C     		ldr	r3, [r4, #64]
 2061 002c 002B     		cmp	r3, #0
 2062 002e 01D1     		bne	.L181
1534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2063              		.loc 1 1534 0 is_stmt 0 discriminator 1
 2064              		.syntax divided
 2065              	@ 1534 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2066 0030 72B6     		 cpsid i 
 2067              	@ 0 "" 2
 2068              		.thumb
 2069              		.syntax unified
 2070              	.L182:
 2071 0032 FEE7     		b	.L182
 2072              	.L181:
1552:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 2073              		.loc 1 1552 0 is_stmt 1
 2074 0034 FFF7FEFF 		bl	ulSetInterruptMaskFromISR
 2075              	.LVL276:
 2076 0038 0600     		movs	r6, r0
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 77


 2077              	.LVL277:
1555:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2078              		.loc 1 1555 0
 2079 003a A36B     		ldr	r3, [r4, #56]
 2080 003c 002B     		cmp	r3, #0
 2081 003e 0BD0     		beq	.L186
1561:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
 2082              		.loc 1 1561 0
 2083 0040 E768     		ldr	r7, [r4, #12]
 2084              	.LVL278:
1562:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.pcReadFrom = pcOriginalReadPosition;
 2085              		.loc 1 1562 0
 2086 0042 2900     		movs	r1, r5
 2087 0044 2000     		movs	r0, r4
 2088              	.LVL279:
 2089 0046 FFF7FEFF 		bl	prvCopyDataFromQueue
 2090              	.LVL280:
1563:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2091              		.loc 1 1563 0
 2092 004a E760     		str	r7, [r4, #12]
 2093              	.LVL281:
1565:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 2094              		.loc 1 1565 0
 2095 004c 0124     		movs	r4, #1
 2096              	.LVL282:
 2097              	.L183:
1573:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2098              		.loc 1 1573 0
 2099 004e 3000     		movs	r0, r6
 2100 0050 FFF7FEFF 		bl	vClearInterruptMaskFromISR
 2101              	.LVL283:
1576:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2102              		.loc 1 1576 0
 2103 0054 2000     		movs	r0, r4
 2104              		@ sp needed
 2105              	.LVL284:
 2106              	.LVL285:
 2107              	.LVL286:
 2108 0056 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2109              	.LVL287:
 2110              	.L186:
1569:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
 2111              		.loc 1 1569 0
 2112 0058 0024     		movs	r4, #0
 2113              	.LVL288:
 2114 005a F8E7     		b	.L183
 2115              		.cfi_endproc
 2116              	.LFE10:
 2118              		.section	.text.uxQueueMessagesWaiting,"ax",%progbits
 2119              		.align	1
 2120              		.global	uxQueueMessagesWaiting
 2121              		.syntax unified
 2122              		.code	16
 2123              		.thumb_func
 2124              		.fpu softvfp
 2126              	uxQueueMessagesWaiting:
 2127              	.LFB11:
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 78


1580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 2128              		.loc 1 1580 0
 2129              		.cfi_startproc
 2130              		@ args = 0, pretend = 0, frame = 0
 2131              		@ frame_needed = 0, uses_anonymous_args = 0
 2132              	.LVL289:
 2133 0000 10B5     		push	{r4, lr}
 2134              	.LCFI22:
 2135              		.cfi_def_cfa_offset 8
 2136              		.cfi_offset 4, -8
 2137              		.cfi_offset 14, -4
 2138 0002 041E     		subs	r4, r0, #0
1583:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2139              		.loc 1 1583 0
 2140 0004 01D1     		bne	.L190
1583:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2141              		.loc 1 1583 0 is_stmt 0 discriminator 1
 2142              		.syntax divided
 2143              	@ 1583 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2144 0006 72B6     		 cpsid i 
 2145              	@ 0 "" 2
 2146              		.thumb
 2147              		.syntax unified
 2148              	.L191:
 2149 0008 FEE7     		b	.L191
 2150              	.L190:
1585:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 2151              		.loc 1 1585 0 is_stmt 1
 2152 000a FFF7FEFF 		bl	vPortEnterCritical
 2153              	.LVL290:
1587:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2154              		.loc 1 1587 0
 2155 000e A46B     		ldr	r4, [r4, #56]
 2156              	.LVL291:
1589:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2157              		.loc 1 1589 0
 2158 0010 FFF7FEFF 		bl	vPortExitCritical
 2159              	.LVL292:
1592:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2160              		.loc 1 1592 0
 2161 0014 2000     		movs	r0, r4
 2162              		@ sp needed
 2163              	.LVL293:
 2164 0016 10BD     		pop	{r4, pc}
 2165              		.cfi_endproc
 2166              	.LFE11:
 2168              		.section	.text.uxQueueSpacesAvailable,"ax",%progbits
 2169              		.align	1
 2170              		.global	uxQueueSpacesAvailable
 2171              		.syntax unified
 2172              		.code	16
 2173              		.thumb_func
 2174              		.fpu softvfp
 2176              	uxQueueSpacesAvailable:
 2177              	.LFB12:
1596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 2178              		.loc 1 1596 0
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 79


 2179              		.cfi_startproc
 2180              		@ args = 0, pretend = 0, frame = 0
 2181              		@ frame_needed = 0, uses_anonymous_args = 0
 2182              	.LVL294:
 2183 0000 70B5     		push	{r4, r5, r6, lr}
 2184              	.LCFI23:
 2185              		.cfi_def_cfa_offset 16
 2186              		.cfi_offset 4, -16
 2187              		.cfi_offset 5, -12
 2188              		.cfi_offset 6, -8
 2189              		.cfi_offset 14, -4
 2190 0002 051E     		subs	r5, r0, #0
 2191              	.LVL295:
1601:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2192              		.loc 1 1601 0
 2193 0004 01D1     		bne	.L193
1601:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2194              		.loc 1 1601 0 is_stmt 0 discriminator 1
 2195              		.syntax divided
 2196              	@ 1601 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2197 0006 72B6     		 cpsid i 
 2198              	@ 0 "" 2
 2199              		.thumb
 2200              		.syntax unified
 2201              	.L194:
 2202 0008 FEE7     		b	.L194
 2203              	.L193:
1603:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 2204              		.loc 1 1603 0 is_stmt 1
 2205 000a FFF7FEFF 		bl	vPortEnterCritical
 2206              	.LVL296:
1605:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2207              		.loc 1 1605 0
 2208 000e EC6B     		ldr	r4, [r5, #60]
 2209 0010 AB6B     		ldr	r3, [r5, #56]
 2210 0012 E41A     		subs	r4, r4, r3
 2211              	.LVL297:
1607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2212              		.loc 1 1607 0
 2213 0014 FFF7FEFF 		bl	vPortExitCritical
 2214              	.LVL298:
1610:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2215              		.loc 1 1610 0
 2216 0018 2000     		movs	r0, r4
 2217              		@ sp needed
 2218              	.LVL299:
 2219              	.LVL300:
 2220 001a 70BD     		pop	{r4, r5, r6, pc}
 2221              		.cfi_endproc
 2222              	.LFE12:
 2224              		.section	.text.uxQueueMessagesWaitingFromISR,"ax",%progbits
 2225              		.align	1
 2226              		.global	uxQueueMessagesWaitingFromISR
 2227              		.syntax unified
 2228              		.code	16
 2229              		.thumb_func
 2230              		.fpu softvfp
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 80


 2232              	uxQueueMessagesWaitingFromISR:
 2233              	.LFB13:
1614:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 2234              		.loc 1 1614 0
 2235              		.cfi_startproc
 2236              		@ args = 0, pretend = 0, frame = 0
 2237              		@ frame_needed = 0, uses_anonymous_args = 0
 2238              		@ link register save eliminated.
 2239              	.LVL301:
1617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2240              		.loc 1 1617 0
 2241 0000 0028     		cmp	r0, #0
 2242 0002 01D0     		beq	.L198
1619:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2243              		.loc 1 1619 0
 2244 0004 806B     		ldr	r0, [r0, #56]
 2245              	.LVL302:
1622:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2246              		.loc 1 1622 0
 2247              		@ sp needed
 2248 0006 7047     		bx	lr
 2249              	.LVL303:
 2250              	.L198:
1617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2251              		.loc 1 1617 0 discriminator 1
 2252              		.syntax divided
 2253              	@ 1617 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2254 0008 72B6     		 cpsid i 
 2255              	@ 0 "" 2
 2256              		.thumb
 2257              		.syntax unified
 2258              	.L197:
 2259 000a FEE7     		b	.L197
 2260              		.cfi_endproc
 2261              	.LFE13:
 2263              		.section	.text.xQueueIsQueueEmptyFromISR,"ax",%progbits
 2264              		.align	1
 2265              		.global	xQueueIsQueueEmptyFromISR
 2266              		.syntax unified
 2267              		.code	16
 2268              		.thumb_func
 2269              		.fpu softvfp
 2271              	xQueueIsQueueEmptyFromISR:
 2272              	.LFB19:
1936:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 2273              		.loc 1 1936 0
 2274              		.cfi_startproc
 2275              		@ args = 0, pretend = 0, frame = 0
 2276              		@ frame_needed = 0, uses_anonymous_args = 0
 2277              		@ link register save eliminated.
 2278              	.LVL304:
1939:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( UBaseType_t ) 0 )
 2279              		.loc 1 1939 0
 2280 0000 0028     		cmp	r0, #0
 2281 0002 04D0     		beq	.L204
1940:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 2282              		.loc 1 1940 0
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 81


 2283 0004 836B     		ldr	r3, [r0, #56]
 2284 0006 002B     		cmp	r3, #0
 2285 0008 03D0     		beq	.L205
1946:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2286              		.loc 1 1946 0
 2287 000a 0020     		movs	r0, #0
 2288              	.LVL305:
 2289              	.L199:
1950:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2290              		.loc 1 1950 0
 2291              		@ sp needed
 2292 000c 7047     		bx	lr
 2293              	.LVL306:
 2294              	.L204:
1939:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( UBaseType_t ) 0 )
 2295              		.loc 1 1939 0 discriminator 1
 2296              		.syntax divided
 2297              	@ 1939 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2298 000e 72B6     		 cpsid i 
 2299              	@ 0 "" 2
 2300              		.thumb
 2301              		.syntax unified
 2302              	.L201:
 2303 0010 FEE7     		b	.L201
 2304              	.L205:
1942:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2305              		.loc 1 1942 0
 2306 0012 0120     		movs	r0, #1
 2307              	.LVL307:
 2308 0014 FAE7     		b	.L199
 2309              		.cfi_endproc
 2310              	.LFE19:
 2312              		.section	.text.xQueueIsQueueFullFromISR,"ax",%progbits
 2313              		.align	1
 2314              		.global	xQueueIsQueueFullFromISR
 2315              		.syntax unified
 2316              		.code	16
 2317              		.thumb_func
 2318              		.fpu softvfp
 2320              	xQueueIsQueueFullFromISR:
 2321              	.LFB21:
1972:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1973:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1974:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueIsQueueFullFromISR( const QueueHandle_t xQueue )
1975:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 2322              		.loc 1 1975 0
 2323              		.cfi_startproc
 2324              		@ args = 0, pretend = 0, frame = 0
 2325              		@ frame_needed = 0, uses_anonymous_args = 0
 2326              		@ link register save eliminated.
 2327              	.LVL308:
1976:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1977:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1978:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( xQueue );
 2328              		.loc 1 1978 0
 2329 0000 0028     		cmp	r0, #0
 2330 0002 05D0     		beq	.L211
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 82


1979:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( ( Queue_t * ) xQueue )->uxLength )
 2331              		.loc 1 1979 0
 2332 0004 826B     		ldr	r2, [r0, #56]
 2333 0006 C36B     		ldr	r3, [r0, #60]
 2334 0008 9A42     		cmp	r2, r3
 2335 000a 03D0     		beq	.L212
1980:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1981:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdTRUE;
1982:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1983:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
1984:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1985:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdFALSE;
 2336              		.loc 1 1985 0
 2337 000c 0020     		movs	r0, #0
 2338              	.LVL309:
 2339              	.L206:
1986:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1987:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1988:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1989:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 2340              		.loc 1 1989 0
 2341              		@ sp needed
 2342 000e 7047     		bx	lr
 2343              	.LVL310:
 2344              	.L211:
1978:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( ( Queue_t * ) xQueue )->uxLength )
 2345              		.loc 1 1978 0 discriminator 1
 2346              		.syntax divided
 2347              	@ 1978 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2348 0010 72B6     		 cpsid i 
 2349              	@ 0 "" 2
 2350              		.thumb
 2351              		.syntax unified
 2352              	.L208:
 2353 0012 FEE7     		b	.L208
 2354              	.L212:
1981:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2355              		.loc 1 1981 0
 2356 0014 0120     		movs	r0, #1
 2357              	.LVL311:
 2358 0016 FAE7     		b	.L206
 2359              		.cfi_endproc
 2360              	.LFE21:
 2362              		.section	.text.vQueueAddToRegistry,"ax",%progbits
 2363              		.align	1
 2364              		.global	vQueueAddToRegistry
 2365              		.syntax unified
 2366              		.code	16
 2367              		.thumb_func
 2368              		.fpu softvfp
 2370              	vQueueAddToRegistry:
 2371              	.LFB22:
1990:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1991:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1992:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
1993:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1994:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRSend( QueueHandle_t xQueue, const void *pvItemToQueue, TickType_t xTicksToWait 
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 83


1995:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1996:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
1997:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1998:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1999:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If the queue is already full we may have to block.  A critical section
2000:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		is required to prevent an interrupt removing something from the queue
2001:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		between the check to see if the queue is full and blocking on the queue. */
2002:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2003:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2004:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
2005:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2006:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The queue is full - do we want to block or just leave without
2007:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				posting? */
2008:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2009:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2010:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* As this is called from a coroutine we cannot block directly, but
2011:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return indicating that we need to block. */
2012:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToSend ) );
2013:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2014:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_BLOCKED;
2015:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2016:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2017:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2018:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2019:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
2020:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2021:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2022:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2023:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2024:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2025:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2026:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2027:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2028:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2029:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There is room in the queue, copy the data into the queue. */
2030:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2031:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = pdPASS;
2032:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2033:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Were any co-routines waiting for data to become available? */
2034:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2035:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2036:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* In this instance the co-routine could be placed directly
2037:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					into the ready list as we are within a critical section.
2038:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					Instead the same pending ready list mechanism is used as if
2039:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the event were caused from within an interrupt. */
2040:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2041:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2042:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The co-routine waiting has a higher priority so record
2043:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						that a yield might be appropriate. */
2044:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						xReturn = errQUEUE_YIELD;
2045:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2046:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2047:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2048:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2049:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2050:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2051:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 84


2052:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2053:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2054:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2055:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2056:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2057:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2058:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = errQUEUE_FULL;
2059:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2060:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2061:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2062:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2063:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
2064:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2065:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2066:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2067:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2068:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2069:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2070:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2071:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRReceive( QueueHandle_t xQueue, void *pvBuffer, TickType_t xTicksToWait )
2072:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2073:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
2074:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2075:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2076:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If the queue is already empty we may have to block.  A critical section
2077:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		is required to prevent an interrupt adding something to the queue
2078:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		between the check to see if the queue is empty and blocking on the queue. */
2079:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2080:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2081:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
2082:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2083:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There are no messages in the queue, do we want to block or just
2084:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				leave with nothing? */
2085:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2086:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2087:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* As this is a co-routine we cannot block directly, but return
2088:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					indicating that we need to block. */
2089:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToReceive ) );
2090:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2091:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_BLOCKED;
2092:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2093:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2094:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2095:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2096:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
2097:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2098:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2099:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2101:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2104:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2105:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2106:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2107:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2108:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 85


2109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2110:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Data is available from the queue. */
2111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
2112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( pxQueue->u.pcReadFrom >= pxQueue->pcTail )
2113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2114:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					pxQueue->u.pcReadFrom = pxQueue->pcHead;
2115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2117:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2118:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				--( pxQueue->uxMessagesWaiting );
2121:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( unsigned ) pxQueue->u
2122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2123:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = pdPASS;
2124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2125:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Were any co-routines waiting for space to become available? */
2126:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2127:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2128:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* In this instance the co-routine could be placed directly
2129:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					into the ready list as we are within a critical section.
2130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					Instead the same pending ready list mechanism is used as if
2131:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the event were caused from within an interrupt. */
2132:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2134:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						xReturn = errQUEUE_YIELD;
2135:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2136:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2137:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2138:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2139:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2140:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2141:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2142:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2143:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2144:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2145:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2147:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2148:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = pdFAIL;
2149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2151:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2152:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
2154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2155:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2156:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2159:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2160:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2161:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRSendFromISR( QueueHandle_t xQueue, const void *pvItemToQueue, BaseType_t xCoRou
2162:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2163:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2164:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2165:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Cannot block within an ISR so if there is no space on the queue then
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 86


2166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		exit without doing anything. */
2167:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2168:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2169:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2170:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2171:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* We only want to wake one co-routine per ISR, so check that a
2172:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			co-routine has not already been woken. */
2173:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xCoRoutinePreviouslyWoken == pdFALSE )
2174:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2175:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2176:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2177:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2178:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2179:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						return pdTRUE;
2180:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2181:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2182:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2183:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2184:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2185:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2186:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2187:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2188:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2189:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2190:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2191:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2192:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2193:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2194:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2195:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2196:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2198:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2200:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2201:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xCoRoutinePreviouslyWoken;
2202:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2203:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2204:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2205:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2206:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2207:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2208:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2209:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRReceiveFromISR( QueueHandle_t xQueue, void *pvBuffer, BaseType_t *pxCoRoutineWo
2210:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2211:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
2212:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2213:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2214:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* We cannot block from an ISR, so check there is data available. If
2215:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		not then just leave without doing anything. */
2216:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2217:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2218:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Copy the data from the queue. */
2219:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
2220:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->u.pcReadFrom >= pxQueue->pcTail )
2221:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.pcReadFrom = pxQueue->pcHead;
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 87


2223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2224:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2226:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2227:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			--( pxQueue->uxMessagesWaiting );
2229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( unsigned ) pxQueue->ux
2230:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2231:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( ( *pxCoRoutineWoken ) == pdFALSE )
2232:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2236:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2237:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						*pxCoRoutineWoken = pdTRUE;
2238:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2239:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2240:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2241:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2242:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2243:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2244:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2246:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2247:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2249:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2251:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2252:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2253:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2254:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
2255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
2259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2261:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
2262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2269:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified
2270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 2372              		.loc 1 2270 0
 2373              		.cfi_startproc
 2374              		@ args = 0, pretend = 0, frame = 0
 2375              		@ frame_needed = 0, uses_anonymous_args = 0
 2376              	.LVL312:
 2377 0000 10B5     		push	{r4, lr}
 2378              	.LCFI24:
 2379              		.cfi_def_cfa_offset 8
 2380              		.cfi_offset 4, -8
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 88


 2381              		.cfi_offset 14, -4
 2382              	.LVL313:
2271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
2272:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* See if there is an empty space in the registry.  A NULL name denotes
2274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		a free slot. */
2275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 2383              		.loc 1 2275 0
 2384 0002 0023     		movs	r3, #0
 2385              	.LVL314:
 2386              	.L214:
 2387              		.loc 1 2275 0 is_stmt 0 discriminator 1
 2388 0004 072B     		cmp	r3, #7
 2389 0006 0AD8     		bhi	.L213
2276:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 2390              		.loc 1 2277 0 is_stmt 1
 2391 0008 DA00     		lsls	r2, r3, #3
 2392 000a 054C     		ldr	r4, .L219
 2393 000c 1259     		ldr	r2, [r2, r4]
 2394 000e 002A     		cmp	r2, #0
 2395 0010 01D0     		beq	.L218
2275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2396              		.loc 1 2275 0 discriminator 2
 2397 0012 0133     		adds	r3, r3, #1
 2398              	.LVL315:
 2399 0014 F6E7     		b	.L214
 2400              	.L218:
2278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Store the information on this queue. */
2280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 2401              		.loc 1 2280 0
 2402 0016 DB00     		lsls	r3, r3, #3
 2403              	.LVL316:
 2404 0018 1951     		str	r1, [r3, r4]
2281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].xHandle = xQueue;
 2405              		.loc 1 2281 0
 2406 001a E318     		adds	r3, r4, r3
 2407 001c 5860     		str	r0, [r3, #4]
 2408              	.L213:
2282:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_REGISTRY_ADD( xQueue, pcQueueName );
2284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
2285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2286:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2409              		.loc 1 2291 0
 2410              		@ sp needed
 2411 001e 10BD     		pop	{r4, pc}
 2412              	.L220:
 2413              		.align	2
 2414              	.L219:
 2415 0020 00000000 		.word	xQueueRegistry
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 89


 2416              		.cfi_endproc
 2417              	.LFE22:
 2419              		.section	.text.pcQueueGetName,"ax",%progbits
 2420              		.align	1
 2421              		.global	pcQueueGetName
 2422              		.syntax unified
 2423              		.code	16
 2424              		.thumb_func
 2425              		.fpu softvfp
 2427              	pcQueueGetName:
 2428              	.LFB23:
2292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2295:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const char *pcQueueGetName( QueueHandle_t xQueue ) /*lint !e971 Unqualified char types are allowed
2299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 2429              		.loc 1 2299 0
 2430              		.cfi_startproc
 2431              		@ args = 0, pretend = 0, frame = 0
 2432              		@ frame_needed = 0, uses_anonymous_args = 0
 2433              		@ link register save eliminated.
 2434              	.LVL317:
2300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
2301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const char *pcReturn = NULL; /*lint !e971 Unqualified char types are allowed for strings and singl
2302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Note there is nothing here to protect against another task adding or
2304:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		removing entries from the registry while it is being searched. */
2305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 2435              		.loc 1 2305 0
 2436 0000 0023     		movs	r3, #0
 2437              	.LVL318:
 2438              	.L222:
 2439              		.loc 1 2305 0 is_stmt 0 discriminator 1
 2440 0002 072B     		cmp	r3, #7
 2441 0004 0AD8     		bhi	.L226
2306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2307:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 2442              		.loc 1 2307 0 is_stmt 1
 2443 0006 D900     		lsls	r1, r3, #3
 2444 0008 054A     		ldr	r2, .L228
 2445 000a 5218     		adds	r2, r2, r1
 2446 000c 5268     		ldr	r2, [r2, #4]
 2447 000e 8242     		cmp	r2, r0
 2448 0010 01D0     		beq	.L227
2305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2449              		.loc 1 2305 0 discriminator 2
 2450 0012 0133     		adds	r3, r3, #1
 2451              	.LVL319:
 2452 0014 F5E7     		b	.L222
 2453              	.L227:
2308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pcReturn = xQueueRegistry[ ux ].pcQueueName;
 2454              		.loc 1 2309 0
 2455 0016 024A     		ldr	r2, .L228
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 90


 2456 0018 8858     		ldr	r0, [r1, r2]
 2457              	.LVL320:
2310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
 2458              		.loc 1 2310 0
 2459 001a 00E0     		b	.L221
 2460              	.LVL321:
 2461              	.L226:
2301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2462              		.loc 1 2301 0
 2463 001c 0020     		movs	r0, #0
 2464              	.LVL322:
 2465              	.L221:
2311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2312:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pcReturn;
2319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2466              		.loc 1 2319 0
 2467              		@ sp needed
 2468 001e 7047     		bx	lr
 2469              	.L229:
 2470              		.align	2
 2471              	.L228:
 2472 0020 00000000 		.word	xQueueRegistry
 2473              		.cfi_endproc
 2474              	.LFE23:
 2476              		.section	.text.vQueueUnregisterQueue,"ax",%progbits
 2477              		.align	1
 2478              		.global	vQueueUnregisterQueue
 2479              		.syntax unified
 2480              		.code	16
 2481              		.thumb_func
 2482              		.fpu softvfp
 2484              	vQueueUnregisterQueue:
 2485              	.LFB24:
2320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2325:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2326:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueUnregisterQueue( QueueHandle_t xQueue )
2327:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 2486              		.loc 1 2327 0
 2487              		.cfi_startproc
 2488              		@ args = 0, pretend = 0, frame = 0
 2489              		@ frame_needed = 0, uses_anonymous_args = 0
 2490              		@ link register save eliminated.
 2491              	.LVL323:
2328:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
2329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* See if the handle of the queue being unregistered in actually in the
2331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		registry. */
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 91


2332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 2492              		.loc 1 2332 0
 2493 0000 0023     		movs	r3, #0
 2494              	.LVL324:
 2495              	.L231:
 2496              		.loc 1 2332 0 is_stmt 0 discriminator 1
 2497 0002 072B     		cmp	r3, #7
 2498 0004 0DD8     		bhi	.L230
2333:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2334:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 2499              		.loc 1 2334 0 is_stmt 1
 2500 0006 D900     		lsls	r1, r3, #3
 2501 0008 064A     		ldr	r2, .L236
 2502 000a 5218     		adds	r2, r2, r1
 2503 000c 5268     		ldr	r2, [r2, #4]
 2504 000e 8242     		cmp	r2, r0
 2505 0010 01D0     		beq	.L235
2332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2506              		.loc 1 2332 0 discriminator 2
 2507 0012 0133     		adds	r3, r3, #1
 2508              	.LVL325:
 2509 0014 F5E7     		b	.L231
 2510              	.L235:
2335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Set the name to NULL to show that this slot if free again. */
2337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = NULL;
 2511              		.loc 1 2337 0
 2512 0016 034A     		ldr	r2, .L236
 2513 0018 0B00     		movs	r3, r1
 2514              	.LVL326:
 2515 001a 0021     		movs	r1, #0
 2516 001c 9950     		str	r1, [r3, r2]
2338:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Set the handle to NULL to ensure the same queue handle cannot
2340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				appear in the registry twice if it is added, removed, then
2341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				added again. */
2342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 2517              		.loc 1 2342 0
 2518 001e D318     		adds	r3, r2, r3
 2519 0020 5960     		str	r1, [r3, #4]
 2520              	.L230:
2343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
2344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2345:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2346:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2347:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2349:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2350:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 2521              		.loc 1 2351 0
 2522              		@ sp needed
 2523 0022 7047     		bx	lr
 2524              	.L237:
 2525              		.align	2
 2526              	.L236:
 2527 0024 00000000 		.word	xQueueRegistry
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 92


 2528              		.cfi_endproc
 2529              	.LFE24:
 2531              		.section	.text.vQueueDelete,"ax",%progbits
 2532              		.align	1
 2533              		.global	vQueueDelete
 2534              		.syntax unified
 2535              		.code	16
 2536              		.thumb_func
 2537              		.fpu softvfp
 2539              	vQueueDelete:
 2540              	.LFB14:
1626:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 2541              		.loc 1 1626 0
 2542              		.cfi_startproc
 2543              		@ args = 0, pretend = 0, frame = 0
 2544              		@ frame_needed = 0, uses_anonymous_args = 0
 2545              	.LVL327:
 2546 0000 10B5     		push	{r4, lr}
 2547              	.LCFI25:
 2548              		.cfi_def_cfa_offset 8
 2549              		.cfi_offset 4, -8
 2550              		.cfi_offset 14, -4
 2551 0002 041E     		subs	r4, r0, #0
 2552              	.LVL328:
1629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	traceQUEUE_DELETE( pxQueue );
 2553              		.loc 1 1629 0
 2554 0004 01D1     		bne	.L239
1629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	traceQUEUE_DELETE( pxQueue );
 2555              		.loc 1 1629 0 is_stmt 0 discriminator 1
 2556              		.syntax divided
 2557              	@ 1629 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2558 0006 72B6     		 cpsid i 
 2559              	@ 0 "" 2
 2560              		.thumb
 2561              		.syntax unified
 2562              	.L240:
 2563 0008 FEE7     		b	.L240
 2564              	.L239:
1634:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2565              		.loc 1 1634 0 is_stmt 1
 2566 000a FFF7FEFF 		bl	vQueueUnregisterQueue
 2567              	.LVL329:
1642:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2568              		.loc 1 1642 0
 2569 000e 2000     		movs	r0, r4
 2570 0010 FFF7FEFF 		bl	vPortFree
 2571              	.LVL330:
1664:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2572              		.loc 1 1664 0
 2573              		@ sp needed
 2574              	.LVL331:
 2575 0014 10BD     		pop	{r4, pc}
 2576              		.cfi_endproc
 2577              	.LFE14:
 2579              		.comm	xQueueRegistry,64,4
 2580              		.text
 2581              	.Letext0:
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 93


 2582              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q1-update\\lib\\gcc\\arm-none-eab
 2583              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q1-update\\arm-none-eabi\\include
 2584              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q1-update\\arm-none-eabi\\include
 2585              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q1-update\\arm-none-eabi\\include
 2586              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q1-update\\arm-none-eabi\\include
 2587              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q1-update\\arm-none-eabi\\include
 2588              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q1-update\\arm-none-eabi\\include
 2589              		.file 9 "Inc/FreeRTOSConfig.h"
 2590              		.file 10 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/portmacro.h"
 2591              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
 2592              		.file 12 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 2593              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 2594              		.file 14 "Middlewares/Third_Party/FreeRTOS/Source/include/portable.h"
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 94


DEFINED SYMBOLS
                            *ABS*:00000000 queue.c
C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s:16     .text.prvIsQueueFull:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s:22     .text.prvIsQueueFull:00000000 prvIsQueueFull
C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s:66     .text.prvIsQueueEmpty:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s:72     .text.prvIsQueueEmpty:00000000 prvIsQueueEmpty
C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s:114    .text.prvCopyDataToQueue:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s:120    .text.prvCopyDataToQueue:00000000 prvCopyDataToQueue
C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s:249    .text.prvCopyDataFromQueue:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s:255    .text.prvCopyDataFromQueue:00000000 prvCopyDataFromQueue
C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s:300    .text.prvUnlockQueue:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s:306    .text.prvUnlockQueue:00000000 prvUnlockQueue
C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s:421    .text.xQueueGenericReset:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s:428    .text.xQueueGenericReset:00000000 xQueueGenericReset
C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s:533    .text.prvInitialiseNewQueue:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s:539    .text.prvInitialiseNewQueue:00000000 prvInitialiseNewQueue
C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s:582    .text.xQueueGenericCreate:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s:589    .text.xQueueGenericCreate:00000000 xQueueGenericCreate
C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s:671    .text.xQueueGenericSend:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s:678    .text.xQueueGenericSend:00000000 xQueueGenericSend
C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s:971    .text.prvInitialiseMutex:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s:977    .text.prvInitialiseMutex:00000000 prvInitialiseMutex
C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s:1012   .text.xQueueCreateMutex:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s:1019   .text.xQueueCreateMutex:00000000 xQueueCreateMutex
C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s:1053   .text.xQueueGenericSendFromISR:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s:1060   .text.xQueueGenericSendFromISR:00000000 xQueueGenericSendFromISR
C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s:1265   .text.xQueueGiveFromISR:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s:1272   .text.xQueueGiveFromISR:00000000 xQueueGiveFromISR
C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s:1455   .text.xQueueGenericReceive:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s:1462   .text.xQueueGenericReceive:00000000 xQueueGenericReceive
C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s:1808   .text.xQueueReceiveFromISR:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s:1815   .text.xQueueReceiveFromISR:00000000 xQueueReceiveFromISR
C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s:1991   .text.xQueuePeekFromISR:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s:1998   .text.xQueuePeekFromISR:00000000 xQueuePeekFromISR
C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s:2119   .text.uxQueueMessagesWaiting:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s:2126   .text.uxQueueMessagesWaiting:00000000 uxQueueMessagesWaiting
C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s:2169   .text.uxQueueSpacesAvailable:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s:2176   .text.uxQueueSpacesAvailable:00000000 uxQueueSpacesAvailable
C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s:2225   .text.uxQueueMessagesWaitingFromISR:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s:2232   .text.uxQueueMessagesWaitingFromISR:00000000 uxQueueMessagesWaitingFromISR
C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s:2264   .text.xQueueIsQueueEmptyFromISR:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s:2271   .text.xQueueIsQueueEmptyFromISR:00000000 xQueueIsQueueEmptyFromISR
C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s:2313   .text.xQueueIsQueueFullFromISR:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s:2320   .text.xQueueIsQueueFullFromISR:00000000 xQueueIsQueueFullFromISR
C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s:2363   .text.vQueueAddToRegistry:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s:2370   .text.vQueueAddToRegistry:00000000 vQueueAddToRegistry
C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s:2415   .text.vQueueAddToRegistry:00000020 $d
                            *COM*:00000040 xQueueRegistry
C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s:2420   .text.pcQueueGetName:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s:2427   .text.pcQueueGetName:00000000 pcQueueGetName
C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s:2472   .text.pcQueueGetName:00000020 $d
C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s:2477   .text.vQueueUnregisterQueue:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s:2484   .text.vQueueUnregisterQueue:00000000 vQueueUnregisterQueue
C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s:2527   .text.vQueueUnregisterQueue:00000024 $d
C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s:2532   .text.vQueueDelete:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s:2539   .text.vQueueDelete:00000000 vQueueDelete
                     .debug_frame:00000010 $d
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc7yfHvG.s 			page 95



UNDEFINED SYMBOLS
vPortEnterCritical
vPortExitCritical
xTaskPriorityDisinherit
memcpy
xTaskRemoveFromEventList
vTaskMissedYield
vPortYield
vListInitialise
pvPortMalloc
xTaskGetSchedulerState
xTaskCheckForTimeOut
vTaskPlaceOnEventList
xTaskResumeAll
vTaskSetTimeOutState
vTaskSuspendAll
ulSetInterruptMaskFromISR
vClearInterruptMaskFromISR
pvTaskIncrementMutexHeldCount
vTaskPriorityInherit
vPortFree
