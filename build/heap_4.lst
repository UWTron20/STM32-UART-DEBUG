ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccp18TJa.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"heap_4.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.prvHeapInit,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.code	16
  19              		.thumb_func
  20              		.fpu softvfp
  22              	prvHeapInit:
  23              	.LFB5:
  24              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c"
   1:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****     All rights reserved
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
   7:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****     This file is part of the FreeRTOS distribution.
   8:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****     the terms of the GNU General Public License (version 2) as published by the
  11:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****     ***************************************************************************
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****     ***************************************************************************
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****     link: http://www.freertos.org/a00114.html
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****     ***************************************************************************
  26:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****      *                                                                       *
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****      *    robust, strictly quality controlled, supported, and cross          *
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****      *    platform software that is more than just the market leader, it     *
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****      *    is the industry's de facto standard.                               *
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****      *                                                                       *
  32:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****      *    Help yourself get started quickly while simultaneously helping     *
  33:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****      *    tutorial book, reference manual, or both:                          *
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccp18TJa.s 			page 2


  35:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****      *                                                                       *
  37:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****     ***************************************************************************
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****     defined configASSERT()?
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****     embedded software for free we request you assist our global community by
  45:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****     participating in the support forum.
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****     be as productive as possible as early as possible.  Now you can receive
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  63:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****     engineered and independently SIL3 certified version for use in safety and
  65:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****     mission critical applications that require provable dependability.
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****     1 tab == 4 spaces!
  68:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** */
  69:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * A sample implementation of pvPortMalloc() and vPortFree() that combines
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * (coalescences) adjacent memory blocks as they are freed, and in so doing
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * limits memory fragmentation.
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  *
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * See heap_1.c, heap_2.c and heap_3.c for alternative implementations, and the
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * memory management pages of http://www.FreeRTOS.org for more information.
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  */
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #include <stdlib.h>
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  80:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** all the API functions to use the MPU wrappers.  That should only be done when
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** task.h is included from an application file. */
  83:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #include "FreeRTOS.h"
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #include "task.h"
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  89:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  90:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 0 )
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	#error This file must not be used if configSUPPORT_DYNAMIC_ALLOCATION is 0
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccp18TJa.s 			page 3


  92:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #endif
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  94:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /* Block sizes must not get too small. */
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #define heapMINIMUM_BLOCK_SIZE	( ( size_t ) ( xHeapStructSize << 1 ) )
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /* Assumes 8bit bytes! */
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #define heapBITS_PER_BYTE		( ( size_t ) 8 )
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /* Allocate the memory for the heap. */
 101:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #if( configAPPLICATION_ALLOCATED_HEAP == 1 )
 102:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* The application writer has already defined the array used for the RTOS
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	heap - probably so it can be placed in a special segment or address. */
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	extern uint8_t ucHeap[ configTOTAL_HEAP_SIZE ];
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #else
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	static uint8_t ucHeap[ configTOTAL_HEAP_SIZE ];
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #endif /* configAPPLICATION_ALLOCATED_HEAP */
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /* Define the linked list structure.  This is used to link free blocks in order
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** of their memory address. */
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** typedef struct A_BLOCK_LINK
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** {
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	struct A_BLOCK_LINK *pxNextFreeBlock;	/*<< The next free block in the list. */
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	size_t xBlockSize;						/*<< The size of the free block. */
 115:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** } BlockLink_t;
 116:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * Inserts a block of memory that is being freed into the correct position in
 121:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * the list of free memory blocks.  The block being freed will be merged with
 122:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * the block in front it and/or the block behind it if the memory blocks are
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * adjacent to each other.
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  */
 125:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert );
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * Called automatically to setup the required heap structures the first time
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * pvPortMalloc() is called.
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  */
 131:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** static void prvHeapInit( void );
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /* The size of the structure placed at the beginning of each allocated memory
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** block must by correctly byte aligned. */
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** static const size_t xHeapStructSize	= ( sizeof( BlockLink_t ) + ( ( size_t ) ( portBYTE_ALIGNMENT -
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /* Create a couple of list links to mark the start and end of the list. */
 140:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** static BlockLink_t xStart, *pxEnd = NULL;
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /* Keeps track of the number of free bytes remaining, but says nothing about
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** fragmentation. */
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** static size_t xFreeBytesRemaining = 0U;
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** static size_t xMinimumEverFreeBytesRemaining = 0U;
 146:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 147:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /* Gets set to the top bit of an size_t type.  When this bit in the xBlockSize
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** member of an BlockLink_t structure is set then the block belongs to the
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccp18TJa.s 			page 4


 149:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** application.  When the bit is free the block is still part of the free heap
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** space. */
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** static size_t xBlockAllocatedBit = 0;
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** void *pvPortMalloc( size_t xWantedSize )
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** {
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
 158:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** void *pvReturn = NULL;
 159:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	vTaskSuspendAll();
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		/* If this is the first call to malloc then the heap will require
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		initialisation to setup the list of free blocks. */
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		if( pxEnd == NULL )
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			prvHeapInit();
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		else
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			mtCOVERAGE_TEST_MARKER();
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 173:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		/* Check the requested block size is not so large that the top bit is
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		set.  The top bit of the block size member of the BlockLink_t structure
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		is used to determine who owns the block - the application or the
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		kernel, so it must be free. */
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 178:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 179:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			/* The wanted size is increased so it can contain a BlockLink_t
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			structure in addition to the requested amount of bytes. */
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			if( xWantedSize > 0 )
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			{
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				xWantedSize += xHeapStructSize;
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				/* Ensure that blocks are always aligned to the required number
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				of bytes. */
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				{
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					/* Byte alignment required. */
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					configASSERT( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) == 0 );
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				}
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				else
 194:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				{
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					mtCOVERAGE_TEST_MARKER();
 196:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				}
 197:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			}
 198:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			else
 199:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			{
 200:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				mtCOVERAGE_TEST_MARKER();
 201:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			}
 202:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 204:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			{
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				/* Traverse the list from the start	(lowest address) block until
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccp18TJa.s 			page 5


 206:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				one	of adequate size is found. */
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				pxPreviousBlock = &xStart;
 208:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				pxBlock = xStart.pxNextFreeBlock;
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 210:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				{
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					pxPreviousBlock = pxBlock;
 212:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					pxBlock = pxBlock->pxNextFreeBlock;
 213:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				}
 214:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 215:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				/* If the end marker was reached then a block of adequate size
 216:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				was	not found. */
 217:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				if( pxBlock != pxEnd )
 218:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				{
 219:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					/* Return the memory space pointed to - jumping over the
 220:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					BlockLink_t structure at its start. */
 221:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize )
 222:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					/* This block is being returned for use so must be taken out
 224:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					of the list of free blocks. */
 225:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 226:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					/* If the block is larger than required it can be split into
 228:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					two. */
 229:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 230:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					{
 231:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						/* This block is to be split into two.  Create a new
 232:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						block following the number of bytes requested. The void
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						cast is used to prevent byte alignment warnings from the
 234:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						compiler. */
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 236:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 238:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						/* Calculate the sizes of two blocks split from the
 239:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						single block. */
 240:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 241:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						pxBlock->xBlockSize = xWantedSize;
 242:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 243:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						/* Insert the new block into the list of free blocks. */
 244:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						prvInsertBlockIntoFreeList( pxNewBlockLink );
 245:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					}
 246:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					else
 247:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					{
 248:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						mtCOVERAGE_TEST_MARKER();
 249:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					}
 250:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 251:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					xFreeBytesRemaining -= pxBlock->xBlockSize;
 252:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 253:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 254:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					{
 255:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 256:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					}
 257:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					else
 258:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					{
 259:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						mtCOVERAGE_TEST_MARKER();
 260:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					}
 261:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 262:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					/* The block is being returned - it is allocated and owned
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccp18TJa.s 			page 6


 263:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					by the application and has no "next" block. */
 264:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					pxBlock->xBlockSize |= xBlockAllocatedBit;
 265:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					pxBlock->pxNextFreeBlock = NULL;
 266:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				}
 267:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				else
 268:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				{
 269:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					mtCOVERAGE_TEST_MARKER();
 270:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				}
 271:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			}
 272:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			else
 273:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			{
 274:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				mtCOVERAGE_TEST_MARKER();
 275:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			}
 276:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 277:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		else
 278:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 279:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			mtCOVERAGE_TEST_MARKER();
 280:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 281:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 282:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		traceMALLOC( pvReturn, xWantedSize );
 283:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 284:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	( void ) xTaskResumeAll();
 285:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 286:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	#if( configUSE_MALLOC_FAILED_HOOK == 1 )
 287:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 288:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		if( pvReturn == NULL )
 289:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 290:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			extern void vApplicationMallocFailedHook( void );
 291:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			vApplicationMallocFailedHook();
 292:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 293:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		else
 294:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 295:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			mtCOVERAGE_TEST_MARKER();
 296:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 297:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 298:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	#endif
 299:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 300:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 301:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	return pvReturn;
 302:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** }
 303:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
 304:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 305:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** void vPortFree( void *pv )
 306:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** {
 307:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** uint8_t *puc = ( uint8_t * ) pv;
 308:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** BlockLink_t *pxLink;
 309:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 310:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	if( pv != NULL )
 311:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 312:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		/* The memory being freed will have an BlockLink_t structure immediately
 313:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		before it. */
 314:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		puc -= xHeapStructSize;
 315:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 316:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		/* This casting is to keep the compiler from issuing warnings. */
 317:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		pxLink = ( void * ) puc;
 318:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 319:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		/* Check the block is actually allocated. */
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccp18TJa.s 			page 7


 320:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 321:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		configASSERT( pxLink->pxNextFreeBlock == NULL );
 322:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 323:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		if( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 )
 324:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 325:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			if( pxLink->pxNextFreeBlock == NULL )
 326:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			{
 327:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				/* The block is being returned to the heap - it is no longer
 328:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				allocated. */
 329:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 330:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 331:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				vTaskSuspendAll();
 332:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				{
 333:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					/* Add this block to the list of free blocks. */
 334:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					xFreeBytesRemaining += pxLink->xBlockSize;
 335:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					traceFREE( pv, pxLink->xBlockSize );
 336:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 337:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				}
 338:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				( void ) xTaskResumeAll();
 339:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			}
 340:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			else
 341:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			{
 342:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				mtCOVERAGE_TEST_MARKER();
 343:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			}
 344:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 345:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		else
 346:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 347:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			mtCOVERAGE_TEST_MARKER();
 348:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 349:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 350:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** }
 351:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
 352:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 353:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** size_t xPortGetFreeHeapSize( void )
 354:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** {
 355:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	return xFreeBytesRemaining;
 356:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** }
 357:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
 358:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 359:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** size_t xPortGetMinimumEverFreeHeapSize( void )
 360:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** {
 361:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	return xMinimumEverFreeBytesRemaining;
 362:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** }
 363:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
 364:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 365:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** void vPortInitialiseBlocks( void )
 366:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** {
 367:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* This just exists to keep the linker quiet. */
 368:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** }
 369:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
 370:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 371:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** static void prvHeapInit( void )
 372:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** {
  25              		.loc 1 372 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccp18TJa.s 			page 8


  29              		@ link register save eliminated.
  30              	.LVL0:
 373:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** BlockLink_t *pxFirstFreeBlock;
 374:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** uint8_t *pucAlignedHeap;
 375:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** size_t uxAddress;
 376:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 377:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 378:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* Ensure the heap starts on a correctly aligned boundary. */
 379:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	uxAddress = ( size_t ) ucHeap;
  31              		.loc 1 379 0
  32 0000 124A     		ldr	r2, .L4
  33              	.LVL1:
 380:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 381:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
  34              		.loc 1 381 0
  35 0002 5307     		lsls	r3, r2, #29
  36 0004 1FD0     		beq	.L3
 382:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 383:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		uxAddress += ( portBYTE_ALIGNMENT - 1 );
  37              		.loc 1 383 0
  38 0006 D11D     		adds	r1, r2, #7
  39              	.LVL2:
 384:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
  40              		.loc 1 384 0
  41 0008 0723     		movs	r3, #7
  42 000a 9943     		bics	r1, r3
  43              	.LVL3:
 385:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
  44              		.loc 1 385 0
  45 000c C023     		movs	r3, #192
  46 000e 1B01     		lsls	r3, r3, #4
  47 0010 5B1A     		subs	r3, r3, r1
  48 0012 9B18     		adds	r3, r3, r2
  49              	.LVL4:
 384:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
  50              		.loc 1 384 0
  51 0014 0A00     		movs	r2, r1
  52              	.LVL5:
  53              	.L2:
 386:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 387:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 388:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	pucAlignedHeap = ( uint8_t * ) uxAddress;
 389:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 390:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* xStart is used to hold a pointer to the first item in the list of free
 391:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	blocks.  The void cast is used to prevent compiler warnings. */
 392:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
  54              		.loc 1 392 0
  55 0016 0E48     		ldr	r0, .L4+4
  56 0018 0260     		str	r2, [r0]
 393:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	xStart.xBlockSize = ( size_t ) 0;
  57              		.loc 1 393 0
  58 001a 0021     		movs	r1, #0
  59 001c 4160     		str	r1, [r0, #4]
 394:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 395:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* pxEnd is used to mark the end of the list of free blocks and is inserted
 396:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	at the end of the heap space. */
 397:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccp18TJa.s 			page 9


  60              		.loc 1 397 0
  61 001e D318     		adds	r3, r2, r3
  62              	.LVL6:
 398:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	uxAddress -= xHeapStructSize;
  63              		.loc 1 398 0
  64 0020 083B     		subs	r3, r3, #8
  65              	.LVL7:
 399:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
  66              		.loc 1 399 0
  67 0022 0720     		movs	r0, #7
  68 0024 8343     		bics	r3, r0
  69              	.LVL8:
 400:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	pxEnd = ( void * ) uxAddress;
  70              		.loc 1 400 0
  71 0026 0B48     		ldr	r0, .L4+8
  72 0028 0360     		str	r3, [r0]
 401:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	pxEnd->xBlockSize = 0;
  73              		.loc 1 401 0
  74 002a 5960     		str	r1, [r3, #4]
 402:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	pxEnd->pxNextFreeBlock = NULL;
  75              		.loc 1 402 0
  76 002c 1960     		str	r1, [r3]
  77              	.LVL9:
 403:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 404:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* To start with there is a single free block that is sized to take up the
 405:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	entire heap space, minus the space taken by pxEnd. */
 406:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	pxFirstFreeBlock = ( void * ) pucAlignedHeap;
 407:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
  78              		.loc 1 407 0
  79 002e 991A     		subs	r1, r3, r2
  80 0030 5160     		str	r1, [r2, #4]
 408:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
  81              		.loc 1 408 0
  82 0032 1360     		str	r3, [r2]
 409:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 410:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* Only one block exists - and it covers the entire usable heap space. */
 411:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
  83              		.loc 1 411 0
  84 0034 084B     		ldr	r3, .L4+12
  85              	.LVL10:
  86 0036 1960     		str	r1, [r3]
 412:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
  87              		.loc 1 412 0
  88 0038 084B     		ldr	r3, .L4+16
  89 003a 1960     		str	r1, [r3]
 413:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 414:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* Work out the position of the top bit in a size_t variable. */
 415:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
  90              		.loc 1 415 0
  91 003c 8022     		movs	r2, #128
  92              	.LVL11:
  93 003e 1206     		lsls	r2, r2, #24
  94 0040 074B     		ldr	r3, .L4+20
  95 0042 1A60     		str	r2, [r3]
 416:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** }
  96              		.loc 1 416 0
  97              		@ sp needed
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccp18TJa.s 			page 10


  98 0044 7047     		bx	lr
  99              	.LVL12:
 100              	.L3:
 376:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 101              		.loc 1 376 0
 102 0046 C023     		movs	r3, #192
 103 0048 1B01     		lsls	r3, r3, #4
 104 004a E4E7     		b	.L2
 105              	.L5:
 106              		.align	2
 107              	.L4:
 108 004c 00000000 		.word	.LANCHOR0
 109 0050 00000000 		.word	.LANCHOR1
 110 0054 00000000 		.word	.LANCHOR2
 111 0058 00000000 		.word	.LANCHOR3
 112 005c 00000000 		.word	.LANCHOR4
 113 0060 00000000 		.word	.LANCHOR5
 114              		.cfi_endproc
 115              	.LFE5:
 117              		.section	.text.prvInsertBlockIntoFreeList,"ax",%progbits
 118              		.align	1
 119              		.syntax unified
 120              		.code	16
 121              		.thumb_func
 122              		.fpu softvfp
 124              	prvInsertBlockIntoFreeList:
 125              	.LFB6:
 417:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
 418:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 419:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
 420:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** {
 126              		.loc 1 420 0
 127              		.cfi_startproc
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130              	.LVL13:
 131 0000 10B5     		push	{r4, lr}
 132              	.LCFI0:
 133              		.cfi_def_cfa_offset 8
 134              		.cfi_offset 4, -8
 135              		.cfi_offset 14, -4
 136              	.LVL14:
 421:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** BlockLink_t *pxIterator;
 422:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** uint8_t *puc;
 423:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 424:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* Iterate through the list until a block is found that has a higher address
 425:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	than the block being inserted. */
 426:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator-
 137              		.loc 1 426 0
 138 0002 124B     		ldr	r3, .L14
 139              	.LVL15:
 140              	.L7:
 141              		.loc 1 426 0 is_stmt 0 discriminator 1
 142 0004 1A68     		ldr	r2, [r3]
 143 0006 8242     		cmp	r2, r0
 144 0008 19D3     		bcc	.L13
 145              	.LVL16:
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccp18TJa.s 			page 11


 427:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 428:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		/* Nothing to do here, just iterate to the right position. */
 429:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 430:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 431:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* Do the block being inserted, and the block it is being inserted after
 432:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	make a contiguous block of memory? */
 433:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	puc = ( uint8_t * ) pxIterator;
 434:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 146              		.loc 1 434 0 is_stmt 1
 147 000a 5968     		ldr	r1, [r3, #4]
 148 000c 5C18     		adds	r4, r3, r1
 149 000e A042     		cmp	r0, r4
 150 0010 03D1     		bne	.L8
 435:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 436:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 151              		.loc 1 436 0
 152 0012 4068     		ldr	r0, [r0, #4]
 153              	.LVL17:
 154 0014 0918     		adds	r1, r1, r0
 155 0016 5960     		str	r1, [r3, #4]
 156              	.LVL18:
 437:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		pxBlockToInsert = pxIterator;
 157              		.loc 1 437 0
 158 0018 1800     		movs	r0, r3
 159              	.LVL19:
 160              	.L8:
 438:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 439:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	else
 440:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 441:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		mtCOVERAGE_TEST_MARKER();
 442:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 443:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 444:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* Do the block being inserted, and the block it is being inserted before
 445:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	make a contiguous block of memory? */
 446:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	puc = ( uint8_t * ) pxBlockToInsert;
 447:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 161              		.loc 1 447 0
 162 001a 4168     		ldr	r1, [r0, #4]
 163 001c 4418     		adds	r4, r0, r1
 164 001e A242     		cmp	r2, r4
 165 0020 11D1     		bne	.L9
 448:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 449:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		if( pxIterator->pxNextFreeBlock != pxEnd )
 166              		.loc 1 449 0
 167 0022 0B4C     		ldr	r4, .L14+4
 168 0024 2468     		ldr	r4, [r4]
 169 0026 A242     		cmp	r2, r4
 170 0028 0BD0     		beq	.L10
 450:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 451:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			/* Form one big block from the two blocks. */
 452:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 171              		.loc 1 452 0
 172 002a 5268     		ldr	r2, [r2, #4]
 173 002c 8918     		adds	r1, r1, r2
 174 002e 4160     		str	r1, [r0, #4]
 453:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 175              		.loc 1 453 0
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccp18TJa.s 			page 12


 176 0030 1A68     		ldr	r2, [r3]
 177 0032 1268     		ldr	r2, [r2]
 178 0034 0260     		str	r2, [r0]
 179              	.L11:
 454:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 455:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		else
 456:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 457:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			pxBlockToInsert->pxNextFreeBlock = pxEnd;
 458:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 459:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 460:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	else
 461:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 462:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 463:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 464:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 465:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* If the block being inserted plugged a gab, so was merged with the block
 466:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	before and the block after, then it's pxNextFreeBlock pointer will have
 467:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	already been set, and should not be set here as that would make it point
 468:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	to itself. */
 469:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	if( pxIterator != pxBlockToInsert )
 180              		.loc 1 469 0
 181 0036 9842     		cmp	r0, r3
 182 0038 00D0     		beq	.L6
 470:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 471:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 183              		.loc 1 471 0
 184 003a 1860     		str	r0, [r3]
 185              	.L6:
 472:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 473:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	else
 474:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 475:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		mtCOVERAGE_TEST_MARKER();
 476:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 477:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** }
 186              		.loc 1 477 0
 187              		@ sp needed
 188 003c 10BD     		pop	{r4, pc}
 189              	.LVL20:
 190              	.L13:
 426:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 191              		.loc 1 426 0
 192 003e 1300     		movs	r3, r2
 193              	.LVL21:
 194 0040 E0E7     		b	.L7
 195              	.LVL22:
 196              	.L10:
 457:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 197              		.loc 1 457 0
 198 0042 0460     		str	r4, [r0]
 199 0044 F7E7     		b	.L11
 200              	.L9:
 462:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 201              		.loc 1 462 0
 202 0046 0260     		str	r2, [r0]
 203 0048 F5E7     		b	.L11
 204              	.L15:
 205 004a C046     		.align	2
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccp18TJa.s 			page 13


 206              	.L14:
 207 004c 00000000 		.word	.LANCHOR1
 208 0050 00000000 		.word	.LANCHOR2
 209              		.cfi_endproc
 210              	.LFE6:
 212              		.section	.text.pvPortMalloc,"ax",%progbits
 213              		.align	1
 214              		.global	pvPortMalloc
 215              		.syntax unified
 216              		.code	16
 217              		.thumb_func
 218              		.fpu softvfp
 220              	pvPortMalloc:
 221              	.LFB0:
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
 222              		.loc 1 156 0
 223              		.cfi_startproc
 224              		@ args = 0, pretend = 0, frame = 0
 225              		@ frame_needed = 0, uses_anonymous_args = 0
 226              	.LVL23:
 227 0000 70B5     		push	{r4, r5, r6, lr}
 228              	.LCFI1:
 229              		.cfi_def_cfa_offset 16
 230              		.cfi_offset 4, -16
 231              		.cfi_offset 5, -12
 232              		.cfi_offset 6, -8
 233              		.cfi_offset 14, -4
 234 0002 0400     		movs	r4, r0
 235              	.LVL24:
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 236              		.loc 1 160 0
 237 0004 FFF7FEFF 		bl	vTaskSuspendAll
 238              	.LVL25:
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 239              		.loc 1 164 0
 240 0008 2E4B     		ldr	r3, .L35
 241 000a 1B68     		ldr	r3, [r3]
 242 000c 002B     		cmp	r3, #0
 243 000e 0FD0     		beq	.L34
 244              	.L17:
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 245              		.loc 1 177 0
 246 0010 2D4B     		ldr	r3, .L35+4
 247 0012 1B68     		ldr	r3, [r3]
 248 0014 2342     		tst	r3, r4
 249 0016 4BD1     		bne	.L29
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			{
 250              		.loc 1 181 0
 251 0018 002C     		cmp	r4, #0
 252 001a 0CD0     		beq	.L19
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 253              		.loc 1 183 0
 254 001c 0834     		adds	r4, r4, #8
 255              	.LVL26:
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				{
 256              		.loc 1 187 0
 257 001e 6307     		lsls	r3, r4, #29
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccp18TJa.s 			page 14


 258 0020 09D0     		beq	.L19
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					configASSERT( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) == 0 );
 259              		.loc 1 190 0
 260 0022 0723     		movs	r3, #7
 261 0024 9C43     		bics	r4, r3
 262              	.LVL27:
 263 0026 0834     		adds	r4, r4, #8
 264              	.LVL28:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				}
 265              		.loc 1 191 0
 266 0028 2342     		tst	r3, r4
 267 002a 04D0     		beq	.L19
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				}
 268              		.loc 1 191 0 is_stmt 0 discriminator 1
 269              		.syntax divided
 270              	@ 191 "Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c" 1
 271 002c 72B6     		 cpsid i 
 272              	@ 0 "" 2
 273              		.thumb
 274              		.syntax unified
 275              	.L20:
 276 002e FEE7     		b	.L20
 277              	.L34:
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 278              		.loc 1 166 0 is_stmt 1
 279 0030 FFF7FEFF 		bl	prvHeapInit
 280              	.LVL29:
 281 0034 ECE7     		b	.L17
 282              	.L19:
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			{
 283              		.loc 1 203 0
 284 0036 002C     		cmp	r4, #0
 285 0038 3CD0     		beq	.L30
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			{
 286              		.loc 1 203 0 is_stmt 0 discriminator 1
 287 003a 244B     		ldr	r3, .L35+8
 288 003c 1B68     		ldr	r3, [r3]
 289 003e 9C42     		cmp	r4, r3
 290 0040 3AD8     		bhi	.L31
 291              	.LVL30:
 208:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 292              		.loc 1 208 0 is_stmt 1
 293 0042 234B     		ldr	r3, .L35+12
 294 0044 1D68     		ldr	r5, [r3]
 295              	.LVL31:
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				{
 296              		.loc 1 209 0
 297 0046 01E0     		b	.L22
 298              	.LVL32:
 299              	.L32:
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					pxBlock = pxBlock->pxNextFreeBlock;
 300              		.loc 1 211 0
 301 0048 2B00     		movs	r3, r5
 302              	.LVL33:
 212:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				}
 303              		.loc 1 212 0
 304 004a 1500     		movs	r5, r2
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccp18TJa.s 			page 15


 305              	.LVL34:
 306              	.L22:
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				{
 307              		.loc 1 209 0
 308 004c 6A68     		ldr	r2, [r5, #4]
 309 004e 9442     		cmp	r4, r2
 310 0050 02D9     		bls	.L21
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				{
 311              		.loc 1 209 0 is_stmt 0 discriminator 1
 312 0052 2A68     		ldr	r2, [r5]
 313 0054 002A     		cmp	r2, #0
 314 0056 F7D1     		bne	.L32
 315              	.L21:
 217:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				{
 316              		.loc 1 217 0 is_stmt 1
 317 0058 1A4A     		ldr	r2, .L35
 318 005a 1268     		ldr	r2, [r2]
 319 005c 9542     		cmp	r5, r2
 320 005e 2DD0     		beq	.L33
 221:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 321              		.loc 1 221 0
 322 0060 1E68     		ldr	r6, [r3]
 323 0062 0836     		adds	r6, r6, #8
 324              	.LVL35:
 225:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 325              		.loc 1 225 0
 326 0064 2A68     		ldr	r2, [r5]
 327 0066 1A60     		str	r2, [r3]
 229:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					{
 328              		.loc 1 229 0
 329 0068 6B68     		ldr	r3, [r5, #4]
 330              	.LVL36:
 331 006a 1B1B     		subs	r3, r3, r4
 332 006c 102B     		cmp	r3, #16
 333 006e 08D9     		bls	.L23
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 334              		.loc 1 235 0
 335 0070 2819     		adds	r0, r5, r4
 336              	.LVL37:
 236:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 337              		.loc 1 236 0
 338 0072 4207     		lsls	r2, r0, #29
 339 0074 01D0     		beq	.L24
 236:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 340              		.loc 1 236 0 is_stmt 0 discriminator 1
 341              		.syntax divided
 342              	@ 236 "Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c" 1
 343 0076 72B6     		 cpsid i 
 344              	@ 0 "" 2
 345              		.thumb
 346              		.syntax unified
 347              	.L25:
 348 0078 FEE7     		b	.L25
 349              	.L24:
 240:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						pxBlock->xBlockSize = xWantedSize;
 350              		.loc 1 240 0 is_stmt 1
 351 007a 4360     		str	r3, [r0, #4]
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccp18TJa.s 			page 16


 241:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 352              		.loc 1 241 0
 353 007c 6C60     		str	r4, [r5, #4]
 244:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					}
 354              		.loc 1 244 0
 355 007e FFF7FEFF 		bl	prvInsertBlockIntoFreeList
 356              	.LVL38:
 357              	.L23:
 251:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 358              		.loc 1 251 0
 359 0082 6A68     		ldr	r2, [r5, #4]
 360 0084 1149     		ldr	r1, .L35+8
 361 0086 0B68     		ldr	r3, [r1]
 362 0088 9B1A     		subs	r3, r3, r2
 363 008a 0B60     		str	r3, [r1]
 253:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					{
 364              		.loc 1 253 0
 365 008c 1149     		ldr	r1, .L35+16
 366 008e 0968     		ldr	r1, [r1]
 367 0090 8B42     		cmp	r3, r1
 368 0092 01D2     		bcs	.L26
 255:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					}
 369              		.loc 1 255 0
 370 0094 0F49     		ldr	r1, .L35+16
 371 0096 0B60     		str	r3, [r1]
 372              	.L26:
 264:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					pxBlock->pxNextFreeBlock = NULL;
 373              		.loc 1 264 0
 374 0098 0B4B     		ldr	r3, .L35+4
 375 009a 1B68     		ldr	r3, [r3]
 376 009c 1343     		orrs	r3, r2
 377 009e 6B60     		str	r3, [r5, #4]
 265:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				}
 378              		.loc 1 265 0
 379 00a0 0023     		movs	r3, #0
 380 00a2 2B60     		str	r3, [r5]
 381              	.LVL39:
 382              	.L18:
 284:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 383              		.loc 1 284 0
 384 00a4 FFF7FEFF 		bl	xTaskResumeAll
 385              	.LVL40:
 300:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	return pvReturn;
 386              		.loc 1 300 0
 387 00a8 7307     		lsls	r3, r6, #29
 388 00aa 09D0     		beq	.L16
 300:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	return pvReturn;
 389              		.loc 1 300 0 is_stmt 0 discriminator 1
 390              		.syntax divided
 391              	@ 300 "Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c" 1
 392 00ac 72B6     		 cpsid i 
 393              	@ 0 "" 2
 394              		.thumb
 395              		.syntax unified
 396              	.L28:
 397 00ae FEE7     		b	.L28
 398              	.LVL41:
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccp18TJa.s 			page 17


 399              	.L29:
 158:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 400              		.loc 1 158 0 is_stmt 1
 401 00b0 0026     		movs	r6, #0
 402 00b2 F7E7     		b	.L18
 403              	.L30:
 404 00b4 0026     		movs	r6, #0
 405 00b6 F5E7     		b	.L18
 406              	.L31:
 407 00b8 0026     		movs	r6, #0
 408 00ba F3E7     		b	.L18
 409              	.LVL42:
 410              	.L33:
 411 00bc 0026     		movs	r6, #0
 412 00be F1E7     		b	.L18
 413              	.LVL43:
 414              	.L16:
 302:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
 415              		.loc 1 302 0
 416 00c0 3000     		movs	r0, r6
 417              		@ sp needed
 418              	.LVL44:
 419              	.LVL45:
 420 00c2 70BD     		pop	{r4, r5, r6, pc}
 421              	.L36:
 422              		.align	2
 423              	.L35:
 424 00c4 00000000 		.word	.LANCHOR2
 425 00c8 00000000 		.word	.LANCHOR5
 426 00cc 00000000 		.word	.LANCHOR4
 427 00d0 00000000 		.word	.LANCHOR1
 428 00d4 00000000 		.word	.LANCHOR3
 429              		.cfi_endproc
 430              	.LFE0:
 432              		.section	.text.vPortFree,"ax",%progbits
 433              		.align	1
 434              		.global	vPortFree
 435              		.syntax unified
 436              		.code	16
 437              		.thumb_func
 438              		.fpu softvfp
 440              	vPortFree:
 441              	.LFB1:
 306:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** uint8_t *puc = ( uint8_t * ) pv;
 442              		.loc 1 306 0
 443              		.cfi_startproc
 444              		@ args = 0, pretend = 0, frame = 0
 445              		@ frame_needed = 0, uses_anonymous_args = 0
 446              	.LVL46:
 447 0000 70B5     		push	{r4, r5, r6, lr}
 448              	.LCFI2:
 449              		.cfi_def_cfa_offset 16
 450              		.cfi_offset 4, -16
 451              		.cfi_offset 5, -12
 452              		.cfi_offset 6, -8
 453              		.cfi_offset 14, -4
 454              	.LVL47:
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccp18TJa.s 			page 18


 310:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 455              		.loc 1 310 0
 456 0002 0028     		cmp	r0, #0
 457 0004 20D0     		beq	.L37
 314:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 458              		.loc 1 314 0
 459 0006 0500     		movs	r5, r0
 460 0008 083D     		subs	r5, r5, #8
 461              	.LVL48:
 320:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		configASSERT( pxLink->pxNextFreeBlock == NULL );
 462              		.loc 1 320 0
 463 000a 6B68     		ldr	r3, [r5, #4]
 464 000c 0F4A     		ldr	r2, .L43
 465 000e 1268     		ldr	r2, [r2]
 466 0010 1A42     		tst	r2, r3
 467 0012 01D1     		bne	.L39
 320:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		configASSERT( pxLink->pxNextFreeBlock == NULL );
 468              		.loc 1 320 0 is_stmt 0 discriminator 1
 469              		.syntax divided
 470              	@ 320 "Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c" 1
 471 0014 72B6     		 cpsid i 
 472              	@ 0 "" 2
 473              		.thumb
 474              		.syntax unified
 475              	.L40:
 476 0016 FEE7     		b	.L40
 477              	.L39:
 321:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 478              		.loc 1 321 0 is_stmt 1
 479 0018 0100     		movs	r1, r0
 480 001a 0839     		subs	r1, r1, #8
 481 001c 0968     		ldr	r1, [r1]
 482 001e 0029     		cmp	r1, #0
 483 0020 01D0     		beq	.L41
 321:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 484              		.loc 1 321 0 is_stmt 0 discriminator 1
 485              		.syntax divided
 486              	@ 321 "Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c" 1
 487 0022 72B6     		 cpsid i 
 488              	@ 0 "" 2
 489              		.thumb
 490              		.syntax unified
 491              	.L42:
 492 0024 FEE7     		b	.L42
 493              	.L41:
 329:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 494              		.loc 1 329 0 is_stmt 1
 495 0026 0838     		subs	r0, r0, #8
 496              	.LVL49:
 497 0028 0400     		movs	r4, r0
 498 002a 9343     		bics	r3, r2
 499 002c 4360     		str	r3, [r0, #4]
 331:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				{
 500              		.loc 1 331 0
 501 002e FFF7FEFF 		bl	vTaskSuspendAll
 502              	.LVL50:
 334:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					traceFREE( pv, pxLink->xBlockSize );
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccp18TJa.s 			page 19


 503              		.loc 1 334 0
 504 0032 6368     		ldr	r3, [r4, #4]
 505 0034 064A     		ldr	r2, .L43+4
 506 0036 1168     		ldr	r1, [r2]
 507 0038 8C46     		mov	ip, r1
 508 003a 6344     		add	r3, r3, ip
 509 003c 1360     		str	r3, [r2]
 336:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				}
 510              		.loc 1 336 0
 511 003e 2800     		movs	r0, r5
 512 0040 FFF7FEFF 		bl	prvInsertBlockIntoFreeList
 513              	.LVL51:
 338:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			}
 514              		.loc 1 338 0
 515 0044 FFF7FEFF 		bl	xTaskResumeAll
 516              	.LVL52:
 517              	.L37:
 350:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
 518              		.loc 1 350 0
 519              		@ sp needed
 520 0048 70BD     		pop	{r4, r5, r6, pc}
 521              	.L44:
 522 004a C046     		.align	2
 523              	.L43:
 524 004c 00000000 		.word	.LANCHOR5
 525 0050 00000000 		.word	.LANCHOR4
 526              		.cfi_endproc
 527              	.LFE1:
 529              		.section	.text.xPortGetFreeHeapSize,"ax",%progbits
 530              		.align	1
 531              		.global	xPortGetFreeHeapSize
 532              		.syntax unified
 533              		.code	16
 534              		.thumb_func
 535              		.fpu softvfp
 537              	xPortGetFreeHeapSize:
 538              	.LFB2:
 354:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	return xFreeBytesRemaining;
 539              		.loc 1 354 0
 540              		.cfi_startproc
 541              		@ args = 0, pretend = 0, frame = 0
 542              		@ frame_needed = 0, uses_anonymous_args = 0
 543              		@ link register save eliminated.
 355:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** }
 544              		.loc 1 355 0
 545 0000 014B     		ldr	r3, .L46
 546 0002 1868     		ldr	r0, [r3]
 356:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
 547              		.loc 1 356 0
 548              		@ sp needed
 549 0004 7047     		bx	lr
 550              	.L47:
 551 0006 C046     		.align	2
 552              	.L46:
 553 0008 00000000 		.word	.LANCHOR4
 554              		.cfi_endproc
 555              	.LFE2:
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccp18TJa.s 			page 20


 557              		.section	.text.xPortGetMinimumEverFreeHeapSize,"ax",%progbits
 558              		.align	1
 559              		.global	xPortGetMinimumEverFreeHeapSize
 560              		.syntax unified
 561              		.code	16
 562              		.thumb_func
 563              		.fpu softvfp
 565              	xPortGetMinimumEverFreeHeapSize:
 566              	.LFB3:
 360:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	return xMinimumEverFreeBytesRemaining;
 567              		.loc 1 360 0
 568              		.cfi_startproc
 569              		@ args = 0, pretend = 0, frame = 0
 570              		@ frame_needed = 0, uses_anonymous_args = 0
 571              		@ link register save eliminated.
 361:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** }
 572              		.loc 1 361 0
 573 0000 014B     		ldr	r3, .L49
 574 0002 1868     		ldr	r0, [r3]
 362:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
 575              		.loc 1 362 0
 576              		@ sp needed
 577 0004 7047     		bx	lr
 578              	.L50:
 579 0006 C046     		.align	2
 580              	.L49:
 581 0008 00000000 		.word	.LANCHOR3
 582              		.cfi_endproc
 583              	.LFE3:
 585              		.section	.text.vPortInitialiseBlocks,"ax",%progbits
 586              		.align	1
 587              		.global	vPortInitialiseBlocks
 588              		.syntax unified
 589              		.code	16
 590              		.thumb_func
 591              		.fpu softvfp
 593              	vPortInitialiseBlocks:
 594              	.LFB4:
 366:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* This just exists to keep the linker quiet. */
 595              		.loc 1 366 0
 596              		.cfi_startproc
 597              		@ args = 0, pretend = 0, frame = 0
 598              		@ frame_needed = 0, uses_anonymous_args = 0
 599              		@ link register save eliminated.
 368:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
 600              		.loc 1 368 0
 601              		@ sp needed
 602 0000 7047     		bx	lr
 603              		.cfi_endproc
 604              	.LFE4:
 606              		.section	.bss.pxEnd,"aw",%nobits
 607              		.align	2
 608              		.set	.LANCHOR2,. + 0
 611              	pxEnd:
 612 0000 00000000 		.space	4
 613              		.section	.bss.ucHeap,"aw",%nobits
 614              		.align	2
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccp18TJa.s 			page 21


 615              		.set	.LANCHOR0,. + 0
 618              	ucHeap:
 619 0000 00000000 		.space	3072
 619      00000000 
 619      00000000 
 619      00000000 
 619      00000000 
 620              		.section	.bss.xBlockAllocatedBit,"aw",%nobits
 621              		.align	2
 622              		.set	.LANCHOR5,. + 0
 625              	xBlockAllocatedBit:
 626 0000 00000000 		.space	4
 627              		.section	.bss.xFreeBytesRemaining,"aw",%nobits
 628              		.align	2
 629              		.set	.LANCHOR4,. + 0
 632              	xFreeBytesRemaining:
 633 0000 00000000 		.space	4
 634              		.section	.bss.xMinimumEverFreeBytesRemaining,"aw",%nobits
 635              		.align	2
 636              		.set	.LANCHOR3,. + 0
 639              	xMinimumEverFreeBytesRemaining:
 640 0000 00000000 		.space	4
 641              		.section	.bss.xStart,"aw",%nobits
 642              		.align	2
 643              		.set	.LANCHOR1,. + 0
 646              	xStart:
 647 0000 00000000 		.space	8
 647      00000000 
 648              		.text
 649              	.Letext0:
 650              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q1-update\\lib\\gcc\\arm-none-eab
 651              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q1-update\\arm-none-eabi\\include
 652              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q1-update\\arm-none-eabi\\include
 653              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q1-update\\arm-none-eabi\\include
 654              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q1-update\\arm-none-eabi\\include
 655              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q1-update\\arm-none-eabi\\include
 656              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q1-update\\arm-none-eabi\\include
 657              		.file 9 "Inc/FreeRTOSConfig.h"
 658              		.file 10 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccp18TJa.s 			page 22


DEFINED SYMBOLS
                            *ABS*:00000000 heap_4.c
C:\Users\Raj\AppData\Local\Temp\ccp18TJa.s:16     .text.prvHeapInit:00000000 $t
C:\Users\Raj\AppData\Local\Temp\ccp18TJa.s:22     .text.prvHeapInit:00000000 prvHeapInit
C:\Users\Raj\AppData\Local\Temp\ccp18TJa.s:108    .text.prvHeapInit:0000004c $d
C:\Users\Raj\AppData\Local\Temp\ccp18TJa.s:118    .text.prvInsertBlockIntoFreeList:00000000 $t
C:\Users\Raj\AppData\Local\Temp\ccp18TJa.s:124    .text.prvInsertBlockIntoFreeList:00000000 prvInsertBlockIntoFreeList
C:\Users\Raj\AppData\Local\Temp\ccp18TJa.s:207    .text.prvInsertBlockIntoFreeList:0000004c $d
C:\Users\Raj\AppData\Local\Temp\ccp18TJa.s:213    .text.pvPortMalloc:00000000 $t
C:\Users\Raj\AppData\Local\Temp\ccp18TJa.s:220    .text.pvPortMalloc:00000000 pvPortMalloc
C:\Users\Raj\AppData\Local\Temp\ccp18TJa.s:424    .text.pvPortMalloc:000000c4 $d
C:\Users\Raj\AppData\Local\Temp\ccp18TJa.s:433    .text.vPortFree:00000000 $t
C:\Users\Raj\AppData\Local\Temp\ccp18TJa.s:440    .text.vPortFree:00000000 vPortFree
C:\Users\Raj\AppData\Local\Temp\ccp18TJa.s:524    .text.vPortFree:0000004c $d
C:\Users\Raj\AppData\Local\Temp\ccp18TJa.s:530    .text.xPortGetFreeHeapSize:00000000 $t
C:\Users\Raj\AppData\Local\Temp\ccp18TJa.s:537    .text.xPortGetFreeHeapSize:00000000 xPortGetFreeHeapSize
C:\Users\Raj\AppData\Local\Temp\ccp18TJa.s:553    .text.xPortGetFreeHeapSize:00000008 $d
C:\Users\Raj\AppData\Local\Temp\ccp18TJa.s:558    .text.xPortGetMinimumEverFreeHeapSize:00000000 $t
C:\Users\Raj\AppData\Local\Temp\ccp18TJa.s:565    .text.xPortGetMinimumEverFreeHeapSize:00000000 xPortGetMinimumEverFreeHeapSize
C:\Users\Raj\AppData\Local\Temp\ccp18TJa.s:581    .text.xPortGetMinimumEverFreeHeapSize:00000008 $d
C:\Users\Raj\AppData\Local\Temp\ccp18TJa.s:586    .text.vPortInitialiseBlocks:00000000 $t
C:\Users\Raj\AppData\Local\Temp\ccp18TJa.s:593    .text.vPortInitialiseBlocks:00000000 vPortInitialiseBlocks
C:\Users\Raj\AppData\Local\Temp\ccp18TJa.s:607    .bss.pxEnd:00000000 $d
C:\Users\Raj\AppData\Local\Temp\ccp18TJa.s:611    .bss.pxEnd:00000000 pxEnd
C:\Users\Raj\AppData\Local\Temp\ccp18TJa.s:614    .bss.ucHeap:00000000 $d
C:\Users\Raj\AppData\Local\Temp\ccp18TJa.s:618    .bss.ucHeap:00000000 ucHeap
C:\Users\Raj\AppData\Local\Temp\ccp18TJa.s:621    .bss.xBlockAllocatedBit:00000000 $d
C:\Users\Raj\AppData\Local\Temp\ccp18TJa.s:625    .bss.xBlockAllocatedBit:00000000 xBlockAllocatedBit
C:\Users\Raj\AppData\Local\Temp\ccp18TJa.s:628    .bss.xFreeBytesRemaining:00000000 $d
C:\Users\Raj\AppData\Local\Temp\ccp18TJa.s:632    .bss.xFreeBytesRemaining:00000000 xFreeBytesRemaining
C:\Users\Raj\AppData\Local\Temp\ccp18TJa.s:635    .bss.xMinimumEverFreeBytesRemaining:00000000 $d
C:\Users\Raj\AppData\Local\Temp\ccp18TJa.s:639    .bss.xMinimumEverFreeBytesRemaining:00000000 xMinimumEverFreeBytesRemaining
C:\Users\Raj\AppData\Local\Temp\ccp18TJa.s:642    .bss.xStart:00000000 $d
C:\Users\Raj\AppData\Local\Temp\ccp18TJa.s:646    .bss.xStart:00000000 xStart
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
vTaskSuspendAll
xTaskResumeAll
