ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0xx_hal_uart.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.UART_EndTxTransfer,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.code	16
  19              		.thumb_func
  20              		.fpu softvfp
  22              	UART_EndTxTransfer:
  23              	.LFB76:
  24              		.file 1 "Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c"
   1:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @file    stm32f0xx_hal_uart.c
   4:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter (UART) peripheral:
   8:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           + Peripheral State and Errors functions
  12:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
  13:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   @verbatim
  14:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
  15:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                         ##### How to use this driver #####
  16:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
  17:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   [..]
  18:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  19:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  20:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  21:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  22:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Enable the USARTx interface clock.
  23:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) UART pins configuration:
  24:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  25:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  26:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  27:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  28:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  29:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  30:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) UART interrupts handling:
  31:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****               -@@-  The specific UART interrupts (Transmission complete interrupt,
  32:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                 RXNE interrupt and Error Interrupts) are managed using the macros
  33:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                 __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT() inside the transmit and receive 
  34:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 2


  35:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  36:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  37:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  38:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required Tx/Rx parameters.
  39:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  40:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  41:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete interrupt on
  42:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  43:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware
  44:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         flow control and Mode (Receiver/Transmitter) in the huart handle Init structure.
  45:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  46:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) If required, program UART advanced features (TX/RX pins swap, auto Baud rate detection,...)
  47:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         in the huart handle AdvancedInit structure.
  48:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  49:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  50:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         the HAL_UART_Init() API.
  51:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  52:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  53:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  54:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  55:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) For the UART Multiprocessor mode, initialize the UART registers
  56:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         by calling the HAL_MultiProcessor_Init() API.
  57:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  58:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) For the UART RS485 Driver Enabled mode, initialize the UART registers
  59:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         by calling the HAL_RS485Ex_Init() API.
  60:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  61:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    [..]
  62:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (@) These APIs(HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_MultiProcessor_Init(),
  63:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         also configure the low level Hardware GPIO, CLOCK, CORTEX...etc) by
  64:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         calling the customized HAL_UART_MspInit() API.
  65:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  66:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    [..]
  67:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    [..] Three operation modes are available within this driver :     
  68:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
  69:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      *** Polling mode IO operation ***
  70:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      =================================
  71:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      [..]    
  72:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Send an amount of data in blocking mode using HAL_UART_Transmit() 
  73:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Receive an amount of data in blocking mode using HAL_UART_Receive()
  74:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        
  75:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      *** Interrupt mode IO operation ***    
  76:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      ===================================
  77:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      [..]    
  78:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode using HAL_UART_Transmit_IT() 
  79:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
  80:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback 
  81:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can 
  82:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  83:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode using HAL_UART_Receive_IT() 
  84:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can 
  85:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback 
  86:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can 
  87:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback          
  88:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can 
  89:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
  90:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  91:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      *** DMA mode IO operation ***    
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 3


  92:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      ==============================
  93:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      [..] 
  94:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode (DMA) using HAL_UART_Transmit_DMA() 
  95:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
  96:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback 
  97:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can 
  98:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  99:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode (DMA) using HAL_UART_Receive_DMA() 
 100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can 
 101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback 
 102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can 
 103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback          
 104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can 
 105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Pause the DMA Transfer using HAL_UART_DMAPause()      
 107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Resume the DMA Transfer using HAL_UART_DMAResume()  
 108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Stop the DMA Transfer using HAL_UART_DMAStop()      
 109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     
 110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      *** UART HAL driver macros list ***
 111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      ============================================= 
 112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      [..]
 113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        Below the list of most used macros in UART HAL driver.
 114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        
 115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) __HAL_UART_ENABLE: Enable the UART peripheral 
 116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) __HAL_UART_DISABLE: Disable the UART peripheral     
 117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) __HAL_UART_GET_FLAG : Check whether the specified UART flag is set or not
 118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) __HAL_UART_CLEAR_FLAG : Clear the specified UART pending flag
 119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) __HAL_UART_ENABLE_IT: Enable the specified UART interrupt
 120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) __HAL_UART_DISABLE_IT: Disable the specified UART interrupt
 121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       
 122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      [..] 
 123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (@) You can refer to the UART HAL driver header file for more useful macros 
 124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       
 125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   @endverbatim
 126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ******************************************************************************
 127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @attention
 128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
 129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
 130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
 131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * Redistribution and use in source and binary forms, with or without modification,
 132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * are permitted provided that the following conditions are met:
 133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *      this list of conditions and the following disclaimer.
 135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *      this list of conditions and the following disclaimer in the documentation
 137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *      and/or other materials provided with the distribution.
 138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *      may be used to endorse or promote products derived from this software
 140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *      without specific prior written permission.
 141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
 142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 4


 149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
 153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ******************************************************************************
 154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #include "stm32f0xx_hal.h"
 158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @addtogroup STM32F0xx_HAL_Driver
 160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART UART
 164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief HAL UART module driver
 165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Private_Constants UART Private Constants
 173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #define UART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
 176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                                      USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8)) /*!< UART or U
 177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
 179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Private macros ------------------------------------------------------------*/
 182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @addtogroup UART_Private_Functions
 185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart);
 200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart);
 202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
 204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 5


 206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Exported functions --------------------------------------------------------*/
 207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
 215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @verbatim
 216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** ===============================================================================
 217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
 219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
 220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     in asynchronous mode.
 222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) For the asynchronous mode the parameters below can be configured:
 223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Baud Rate
 224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Word Length
 225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Stop Bit
 226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Parity
 227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Hardware flow control
 228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Receiver/transmitter modes
 229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Over Sampling Method
 230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) One-Bit Sampling Method
 231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) For the asynchronous mode, the following advanced features can be configured as well:
 232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) TX and/or RX pin level inversion
 233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) data logical level inversion
 234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) RX and TX pins swap
 235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) RX overrun detection disabling
 236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) DMA disabling on RX error
 237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) MSB first on communication line
 238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) auto Baud rate detection
 239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
 240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init() and HAL_MultiProcessor_Init()
 241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     API follow respectively the UART asynchronous, UART Half duplex and multiprocessor mode
 242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     configuration procedures (details for the procedures are available in reference manual).
 243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @endverbatim
 245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /*
 249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   Additional Table:  If the parity is enabled, then the MSB bit of the data written
 250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                      in the data register is transmitted but is changed by the parity bit.
 251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                      According to device capability (support or not of 7-bit word length),
 252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                      frame length is either defined by the M bit (8-bits or 9-bits)
 253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                      or by the M1 and M0 bits (7-bit, 8-bit or 9-bit).
 254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                      Possible UART frame formats are as listed in the following table:
 255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             
 256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       Table 1. UART frame format.             
 257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       +-----------------------------------------------------------------------+
 258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |       M bit       |  PCE bit  |             UART frame                |
 259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |-------------------|-----------|---------------------------------------|
 260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |         0         |     0     |    | SB |    8-bit data   | STB |     |
 261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |-------------------|-----------|---------------------------------------|
 262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |         0         |     1     |    | SB | 7-bit data | PB | STB |     |
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 6


 263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |-------------------|-----------|---------------------------------------|
 264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |         1         |     0     |    | SB |    9-bit data   | STB |     |
 265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |-------------------|-----------|---------------------------------------|
 266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |         1         |     1     |    | SB | 8-bit data | PB | STB |     |
 267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       +-----------------------------------------------------------------------+
 268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |  M1 bit |  M0 bit |  PCE bit  |             UART frame                |
 269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |    0    |    0    |     0     |    | SB |    8 bit data   | STB |     |
 271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |    0    |    0    |     1     |    | SB | 7 bit data | PB | STB |     |
 273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |    0    |    1    |     0     |    | SB |    9 bit data   | STB |     |
 275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |    0    |    1    |     1     |    | SB | 8 bit data | PB | STB |     |
 277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |    1    |    0    |     0     |    | SB |    7 bit data   | STB |     |
 279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |    1    |    0    |     1     |    | SB | 6 bit data | PB | STB |     |
 281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       +-----------------------------------------------------------------------+
 282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** */
 284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Initialize the UART mode according to the specified
 287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart: UART handle.
 289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart == NULL)
 295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Check the parameters */
 302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
 305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Check the parameters */
 307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 7


 320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the Peripheral */
 322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Set the UART Communication parameters */
 325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - LINEN (if LIN is supported) and CLKEN bits in the USART_CR2 register,
 337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - SCEN (if Smartcard is supported), HDSEL and IREN (if IrDA is supported)  bits in the USART_CR3 
 338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR2_LINEN)
 339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_SCEN)
 344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
 348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN));
 352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the Peripheral */
 358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Initialize the half-duplex mode according to the specified
 366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart: UART handle.
 368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart == NULL)
 374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 8


 377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check UART instance */
 379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the Peripheral */
 393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Set the UART Communication parameters */
 396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - LINEN (if LIN is supported) and CLKEN bits in the USART_CR2 register,
 408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - SCEN (if Smartcard is supported), and IREN (if IrDA is supported)  bits in the USART_CR3 regist
 409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR2_LINEN)
 410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_SCEN)
 415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_SCEN);
 419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_IREN);
 423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the Peripheral */
 430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 9


 434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Initialize the multiprocessor mode according to the specified
 439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart: UART handle.
 441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Address: UART node address (4-, 6-, 7- or 8-bit long).
 442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param WakeUpMethod: specifies the UART wakeup method.
 443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        This parameter can be one of the following values:
 444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_IDLELINE WakeUp by an idle line detection
 445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_ADDRESSMARK WakeUp by an address mark
 446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note  If the user resorts to idle line detection wake up, the Address parameter
 447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        is useless and ignored by the initialization function.
 448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note  If the user resorts to address mark wake up, the address length detection
 449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        is configured by default to 4 bits only. For the UART to be able to
 450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        manage 6-, 7- or 8-bit long addresses detection, the API
 451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        HAL_MultiProcessorEx_AddressLength_Set() must be called after
 452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        HAL_MultiProcessor_Init().
 453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart == NULL)
 459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the wake up method parameter */
 464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the Peripheral */
 478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Set the UART Communication parameters */
 481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 10


 491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* In multiprocessor mode, the following bits must be kept cleared:
 492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - LINEN (if LIN is supported) and CLKEN bits in the USART_CR2 register,
 493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - SCEN (if Smartcard is supported), HDSEL and IREN (if IrDA is supported) bits in the USART_CR3 r
 494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR2_LINEN)
 495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_SCEN)
 500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
 504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN));
 508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (WakeUpMethod == UART_WAKEUPMETHOD_ADDRESSMARK)
 514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* If address mark wake up method is chosen, set the USART address node */
 516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)Address << UART_CR2_ADDRESS_LSB_POS)
 517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the Peripheral */
 523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DeInitialize the UART peripheral.
 532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart: UART handle.
 533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart == NULL)
 539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the parameters */
 544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 11


 548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the Peripheral */
 549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR1 = 0x0U;
 552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DeInit the low level hardware */
 556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState    = HAL_UART_STATE_RESET;
 560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState   = HAL_UART_STATE_RESET;
 561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Unlock */
 563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
 566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Initialize the UART MSP.
 570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart: UART handle.
 571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
 572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
 577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_MspInit can be implemented in the user file
 580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
 581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DeInitialize the UART MSP.
 585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart: UART handle.
 586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
 587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
 592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_MspDeInit can be implemented in the user file
 595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
 596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
 600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
 603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief UART Transmit/Receive functions
 604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 12


 605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @verbatim
 606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
 607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                       ##### IO operation functions #####
 608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
 609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     and Half duplex data transfers.
 611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) There are two mode of transfer:
 613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (++) Blocking mode: The communication is performed in polling mode.
 614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
 615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            after finishing transfer.
 616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (++) Non-Blocking mode: The communication is performed using Interrupts
 617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            or DMA, These API's return the HAL status.
 618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            The end of the data processing will be indicated through the
 619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
 620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            using DMA mode.
 621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
 622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            will be executed respectively at the end of the transmit or Receive process
 623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
 624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Blocking mode API's are :
 626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_Transmit()
 627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_Receive()
 628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
 630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_Transmit_IT()
 631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_Receive_IT()
 632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_IRQHandler()
 633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
 635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_Transmit_DMA()
 636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_Receive_DMA()
 637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_DMAPause()
 638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_DMAResume()
 639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_DMAStop()
 640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
 642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_TxHalfCpltCallback()
 643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_TxCpltCallback()
 644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_RxHalfCpltCallback()
 645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_RxCpltCallback()
 646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_ErrorCallback()
 647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
 649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_Abort()
 650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_AbortTransmit()
 651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_AbortReceive()
 652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_Abort_IT()
 653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_AbortTransmit_IT()
 654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_AbortReceive_IT()
 655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
 657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_AbortCpltCallback()
 658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_AbortTransmitCpltCallback()
 659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_AbortReceiveCpltCallback()
 660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 13


 662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         Errors are handled as follows :
 663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Error is considered as Recoverable and non blocking : Transfer could go till end, but 
 664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error in In
 665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              Received character is then retrieved and stored in Rx buffer, Error code is set to all
 666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              and HAL_UART_ErrorCallback() user callback is executed. Transfer is kept ongoing on UA
 667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              If user wants to abort it, Abort services should be called by user.
 668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Error is considered as Blocking : Transfer could not be completed properly and is abor
 669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
 670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback() u
 671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
 673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
 674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @endverbatim
 676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Send an amount of data in blocking mode.
 681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart: UART handle.
 682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData: Pointer to data buffer.
 683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size: Amount of data to be sent.
 684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Timeout: Timeout duration.
 685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
 686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer containing data to be sent, should be aligned on a half wor
 687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as sent data will be handled using u16 pointer cast). Depending on compilation chain,
 688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
 689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
 692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t* tmp;
 694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t tickstart = 0U;
 695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return  HAL_ERROR;
 702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input paramter 
 705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be filled into TDR will be 
 706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled through a u16 cast. */
 707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if((((uint32_t)pData)&1U) != 0U)
 710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
 712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Locked */
 716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
 717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 14


 719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
 722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     tickstart = HAL_GetTick();
 723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferSize = Size;
 725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = Size;
 726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     while(huart->TxXferCount > 0)
 727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxXferCount--;
 729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return HAL_TIMEOUT;
 732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         tmp = (uint16_t*) pData;
 736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
 737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pData += 2;
 738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
 740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->TDR = (*pData++ & (uint8_t)0xFFU);
 742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_TIMEOUT;
 747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
 750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Unlocked */
 753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
 756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
 758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode.
 765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart: UART handle.
 766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData: pointer to data buffer.
 767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size: amount of data to be received.
 768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Timeout: Timeout duration.
 769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
 770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer for storing data to be received, should be aligned on a hal
 771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as received data will be handled using u16 pointer cast). Depending on compilation cha
 772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
 773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 15


 776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t* tmp;
 778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t uhMask;
 779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t tickstart = 0;
 780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return  HAL_ERROR;
 787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input paramter 
 790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be received from RDR will be 
 791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled through a u16 cast. */
 792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if((((uint32_t)pData)&1U) != 0U)
 795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
 797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Locked */
 801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
 802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
 807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     tickstart = HAL_GetTick();
 808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferSize = Size;
 810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = Size;
 811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* as long as data have to be received */
 817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     while(huart->RxXferCount > 0U)
 818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxXferCount--;
 820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return HAL_TIMEOUT;
 823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         tmp = (uint16_t*) pData ;
 827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->RDR & uhMask);
 828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pData +=2U;
 829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
 831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         *pData++ = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 16


 833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
 837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Unlocked */
 840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
 843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
 845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode.
 852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart: UART handle.
 853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData: pointer to data buffer.
 854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size: amount of data to be sent.
 855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
 856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer containing data to be sent, should be aligned on a half wor
 857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as sent data will be handled using u16 pointer cast). Depending on compilation chain,
 858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
 859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_ERROR;
 869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input paramter 
 872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be filled into TDR will be 
 873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled through a u16 cast. */
 874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if((((uint32_t)pData)&1U) != 0U)
 877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
 879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Locked */
 883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
 884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferSize = Size;
 887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = Size;
 888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 17


 890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Unlocked */
 893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART Transmit Data Register Empty Interrupt */
 896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
 899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
 901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode.
 908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart: UART handle.
 909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData: pointer to data buffer.
 910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size: amount of data to be received.
 911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
 912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer for storing data to be received, should be aligned on a hal
 913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as received data will be handled using u16 pointer cast). Depending on compilation cha
 914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
 915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_ERROR;
 925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input paramter 
 928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be received from RDR will be 
 929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled through a u16 cast. */
 930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if((((uint32_t)pData)&1U) != 0U)
 933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
 935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Locked */
 939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
 940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferSize = Size;
 943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = Size;
 944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 18


 947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Unlocked */
 952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
 955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART Parity Error and Data Register not empty Interrupts */
 958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
 959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
 961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
 963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Send an amount of data in DMA mode.
 970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart: UART handle.
 971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData: pointer to data buffer.
 972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size: amount of data to be sent.
 973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
 974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer containing data to be sent, should be aligned on a half wor
 975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as sent data will be handled by DMA from halfword frontier). Depending on compilation 
 976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
 977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_ERROR;
 987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input paramter 
 990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data copy into TDR will be 
 991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled by DMA from a u16 frontier. */
 992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if((((uint32_t)pData)&1U) != 0U)
 995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
 997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Locked */
1001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
1002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 19


1004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferSize = Size;
1005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = Size;
1006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
1012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
1015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the DMA error callback */
1017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
1018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the DMA abort callback */
1020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmatx->XferAbortCallback = NULL;
1021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART transmit DMA channel */
1023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmatx, (uint32_t)huart->pTxBuffPtr, (uint32_t)&huart->Instance->TDR, S
1024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear the TC flag in the ICR register */
1026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_TCF);
1027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Unlocked */
1029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        in the UART CR3 register */
1033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
1036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
1038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
1040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode.
1045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart: UART handle.
1046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData: pointer to data buffer.
1047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size: amount of data to be received.
1048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer for storing data to be received, should be aligned on a hal
1050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as received data will be handled by DMA from halfword frontier). Depending on compilat
1051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
1052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
1058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
1060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 20


1061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_ERROR;
1062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input paramter 
1065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data copy from RDR will be 
1066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled by DMA from a u16 frontier. */
1067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if((((uint32_t)pData)&1U) != 0U)
1070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
1072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Locked */
1076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
1077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
1079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferSize = Size;
1080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
1086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
1089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the DMA error callback */
1091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
1092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the DMA abort callback */
1094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmarx->XferAbortCallback = NULL;
1095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the DMA channel */
1097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->RDR, (uint32_t)huart->pRxBuffPtr, S
1098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Unlocked */
1100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit
1109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        in the UART CR3 register */
1110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
1113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
1115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
1117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 21


1118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Pause the DMA Transfer.
1122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart: UART handle.
1123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
1128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
1129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) &&
1131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
1132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) &&
1137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
1138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Unlocked */
1148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Resume the DMA Transfer.
1155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart: UART handle.
1156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
1161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
1162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_BUSY_TX)
1164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
1169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer */
1171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
1172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 22


1175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Unlocked */
1182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Stop the DMA Transfer.
1189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart: UART handle.
1190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      HAL_UART_TxHalfCpltCallback / HAL_UART_RxHalfCpltCallback: 
1197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      indeed, when HAL_DMA_Abort() API is called, the DMA TX/RX Transfer or Half Transfer complete  
1198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      interrupt is generated if the DMA transfer interruption occurs at the middle or at the end of 
1199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      the stream and the corresponding call back is executed. */
1200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) &&
1203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
1204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndTxTransfer(huart);
1214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) &&
1218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
1219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndRxTransfer(huart);
1229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 23


1232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
1239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
1243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** */
1246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U; 
1286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U; 
1287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 24


1289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
1292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
1293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset Handle ErrorCode to No Error */
1296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
1297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
1306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
1310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** */
1313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset Tx transfer counter */
1335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U; 
1336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 25


1346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
1348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
1352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** */
1355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset Rx transfer counter */
1378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U; 
1379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
1394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
1398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** */
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 26


1403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t abortcplt = 1U;
1406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
1407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      before any call to DMA Abort functions */
1413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->hdmatx != NULL)
1415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        Otherwise, set it to NULL */
1418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
1421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
1423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->hdmarx != NULL)
1429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        Otherwise, set it to NULL */
1432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
1435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
1437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
1442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised : 
1452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Abort DMA TX */
1455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
1458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 27


1460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         abortcplt = 0U;
1462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised : 
1475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Abort DMA RX */
1478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
1481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         abortcplt = 1U;
1482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
1484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         abortcplt = 0U;
1486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
1491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (abortcplt == 1U)
1492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
1494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = 0U; 
1495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = 0U;
1496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Reset errorCode */
1498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
1501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
1502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
1504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
1505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
1509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
1516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 28


1517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
1519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
1523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** */
1528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
1529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback : 
1542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
1544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Abort DMA TX */
1546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
1549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
1550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
1553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Reset Tx transfer counter */
1555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxXferCount = 0U; 
1556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Restore huart->gState to Ready */
1558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
1559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
1562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
1565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Reset Tx transfer counter */
1567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = 0U; 
1568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Restore huart->gState to Ready */
1570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
1571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 29


1574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
1581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
1584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
1588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** */
1593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
1594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback : 
1608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
1610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Abort DMA RX */
1612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
1615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
1616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
1619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Reset Rx transfer counter */
1621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxXferCount = 0U; 
1622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Clear the Error flags in the ICR register */
1624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_F
1625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
1627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
1628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 30


1631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
1634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Reset Rx transfer counter */
1636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = 0U; 
1637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
1639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
1640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
1642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
1646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Handle UART interrupt request.
1653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart: UART handle.
1654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
1657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
1659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
1660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t cr3its;
1661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t errorflags;
1662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* If no error occurs */
1664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE));
1665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (errorflags == RESET)
1666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* UART in mode Receiver ---------------------------------------------------*/
1668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(((isrflags & USART_ISR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
1669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       UART_Receive_IT(huart);
1671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return;
1672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }  
1674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* If some errors occur */
1676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   cr3its = READ_REG(huart->Instance->CR3);
1677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(   (errorflags != RESET)
1678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      && (   ((cr3its & USART_CR3_EIE) != RESET)
1679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)) )
1680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* UART parity error interrupt occurred -------------------------------------*/
1682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(((isrflags & USART_ISR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
1683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_PEF);
1685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
1687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 31


1688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* UART frame error interrupt occurred --------------------------------------*/
1690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(((isrflags & USART_ISR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_FEF);
1693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
1695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* UART noise error interrupt occurred --------------------------------------*/
1698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(((isrflags & USART_ISR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_NEF);
1701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
1703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     
1705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* UART Over-Run interrupt occurred -----------------------------------------*/
1706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(((isrflags & USART_ISR_ORE) != RESET) &&
1707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
1708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_OREF);
1710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
1712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/
1715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->ErrorCode != HAL_UART_ERROR_NONE)
1716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* UART in mode Receiver ---------------------------------------------------*/
1718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(((isrflags & USART_ISR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
1719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         UART_Receive_IT(huart);
1721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
1724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          consider error as blocking */
1725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) ||
1726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
1727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {  
1728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Blocking error : transfer is aborted
1729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
1730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
1731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         UART_EndRxTransfer(huart);
1732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
1734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
1736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
1739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           if(huart->hdmarx != NULL)
1740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           {
1741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             /* Set the UART DMA Abort callback : 
1742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
1743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
1744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 32


1745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             /* Abort DMA RX */
1746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             {
1748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****               /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
1749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
1750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             }
1751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           }
1752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           else
1753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           {
1754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             /* Call user error callback */
1755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
1756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           }
1757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
1758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         else
1759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
1760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Call user error callback */
1761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
1762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
1763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
1765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Non Blocking error : transfer could go on. 
1767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            Error is notified to user through user error callback */
1768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
1769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
1770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return;
1773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   } /* End if some error occurs */
1775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F070x6)&
1777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* UART wakeup from Stop mode interrupt occurred ---------------------------*/
1778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(((isrflags & USART_ISR_WUF) != RESET) && ((cr3its & USART_CR3_WUFIE) != RESET))
1779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_CLEAR_IT(huart, UART_CLEAR_WUF);
1781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the UART state ready to be able to start again the process */
1782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
1783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
1785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return;
1786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F0
1788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
1790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(((isrflags & USART_ISR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
1791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_Transmit_IT(huart);
1793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return;
1794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* UART in mode Transmitter (transmission end) -----------------------------*/
1797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(((isrflags & USART_ISR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
1798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
1800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return;
1801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 33


1802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Tx Transfer completed callback.
1807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart: UART handle.
1808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
1811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
1814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_TxCpltCallback can be implemented in the user file.
1817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
1818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callback.
1822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart: UART handle.
1823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
1826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
1829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback can be implemented in the user file.
1832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
1833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Rx Transfer completed callback.
1837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart: UART handle.
1838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
1841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
1844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_RxCpltCallback can be implemented in the user file.
1847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
1848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callback.
1852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart: UART handle.
1853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
1856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 34


1859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback can be implemented in the user file.
1862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
1863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief UART error callback.
1867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart: UART handle.
1868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
1871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
1874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_ErrorCallback can be implemented in the user file.
1877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
1878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
1882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback (UART_HandleTypeDef *huart)
1886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
1889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
1892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
1893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
1897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback (UART_HandleTypeDef *huart)
1901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
1904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
1907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
1908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
1912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback (UART_HandleTypeDef *huart)
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 35


1916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
1919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
1922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
1923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
1927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
1930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *  @brief   UART control functions
1931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
1932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @verbatim
1933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
1934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                       ##### Peripheral Control functions #####
1935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
1936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
1937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART.
1938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
1939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_MultiProcessor_DisableMuteMode() API disables mute mode
1940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnterMuteMode() API enters mute mode
1941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableTransmitter() API disables receiver and enables transmitter
1942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableReceiver() API disables transmitter and enables receiver
1943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @endverbatim
1944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
1945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Enable UART in mute mode (does not mean UART enters mute mode;
1949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * to enter mute mode, HAL_MultiProcessor_EnterMuteMode() API must be called).
1950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart: UART handle.
1951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnableMuteMode(UART_HandleTypeDef *huart)
1954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
1956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
1957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable USART mute mode by setting the MME bit in the CR1 register */
1961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_MME);
1962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
1966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Disable UART mute mode (does not mean the UART actually exits mute mode
1970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         as it may not have been in mute mode at this very moment).
1971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart: UART handle.
1972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 36


1973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_DisableMuteMode(UART_HandleTypeDef *huart)
1975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
1977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
1978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    /* Disable USART mute mode by clearing the MME bit in the CR1 register */
1982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_MME);
1983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
1987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Enter UART mute mode (means UART actually enters mute mode).
1991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note  To exit from mute mode, HAL_MultiProcessor_DisableMuteMode() API must be called.
1992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart: UART handle.
1993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** void HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
1996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
1998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Enable the UART transmitter and disable the UART receiver.
2002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart: UART handle.
2003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
2006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
2008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
2009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear TE and RE bits */
2012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
2013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
2014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_TE);
2015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Unlocked */
2019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
2022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Enable the UART receiver and disable the UART transmitter.
2026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart: UART handle.
2027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status.
2028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 37


2030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
2032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
2033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear TE and RE bits */
2036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
2037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
2038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RE);
2039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Unlocked */
2042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
2045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
2049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Error functions
2052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  *  @brief   UART Peripheral State functions
2053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  *
2054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @verbatim
2055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ==============================================================================
2056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             ##### Peripheral State and Error functions #####
2057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ==============================================================================
2058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
2059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     This subsection provides functions allowing to :
2060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) Return the UART handle state.
2061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) Return the UART handle error code
2062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @endverbatim
2064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
2065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Return the UART handle state.
2069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *               the configuration information for the specified UART.
2071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL state
2072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
2074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t temp1= 0x00U, temp2 = 0x00U;
2076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   temp1 = huart->gState;
2077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   temp2 = huart->RxState;
2078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
2080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Return the UART handle error code.
2084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *               the configuration information for the specified UART.
2086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval UART Error Code
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 38


2087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
2089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return huart->ErrorCode;
2091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
2094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
2098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
2101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
2102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Configure the UART peripheral.
2106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart: UART handle.
2107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
2110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t tmpreg                     = 0x00000000U;
2112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_ClockSourceTypeDef clocksource = UART_CLOCKSOURCE_UNDEFINED;
2113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
2114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t usartdiv                   = 0x0000U;
2115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
2116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the parameters */
2118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
2119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
2120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
2121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
2122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
2123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
2124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
2125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
2126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
2130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    *  the UART Word Length, Parity, Mode and oversampling:
2131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    *  set the M bits according to huart->Init.WordLength value
2132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    *  set PCE and PS bits according to huart->Init.Parity value
2133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    *  set TE and RE bits according to huart->Init.Mode value
2134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    *  set OVER8 bit according to huart->Init.OverSampling value */
2135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
2136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
2137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
2139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
2140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    * to huart->Init.StopBits value */
2141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
2142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 39


2144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Configure
2145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    * - UART HardWare Flow Control: set CTSE and RTSE bits according
2146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    *   to huart->Init.HwFlowCtl value
2147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    * - one-bit sampling method versus three samples' majority rule according
2148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    *   to huart->Init.OneBitSampling */
2149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl | huart->Init.OneBitSampling ;
2150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT), tmpreg);
2151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
2154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
2155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check UART Over Sampling to set Baud Rate Register */
2156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
2157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     switch (clocksource)
2159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
2161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
2162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate));
2165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
2167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
2168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate));
2171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
2173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       default:
2174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         ret = HAL_ERROR;
2175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     brrtemp = usartdiv & 0xFFF0U;
2179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
2180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->Instance->BRR = brrtemp;
2181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
2183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     switch (clocksource)
2185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
2187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.B
2188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate));
2191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
2193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetSysClockFreq(), huart->Ini
2194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate));
2197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
2199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       default:
2200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         ret = HAL_ERROR;
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 40


2201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return ret;
2206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Configure the UART peripheral advanced features.
2211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart: UART handle.
2212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
2215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
2217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
2218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure TX pin active level inversion */
2220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
2221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
2223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
2224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure RX pin active level inversion */
2227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
2228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
2230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
2231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure data inversion */
2234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
2235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
2237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
2238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure RX/TX pins swap */
2241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
2242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
2244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
2245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure RX overrun detection disabling */
2248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
2249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
2251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
2252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure DMA disabling on reception error */
2255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
2256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 41


2258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
2259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure auto Baud rate detection scheme */
2262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
2263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
2265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
2266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
2267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
2268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
2269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
2271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
2272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure MSB first on communication line */
2276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
2277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
2279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
2280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Check the UART Idle State.
2285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
2286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
2289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F070x6)&
2291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t tickstart = 0U;
2292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F0
2293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Initialize the UART ErrorCode */
2295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F070x6)&
2298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Init tickstart for timeout managment*/
2299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   tickstart = HAL_GetTick();
2300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* TEACK and REACK bits in ISR are checked only when available (not available on all F0 devices).
2302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      Bits are defined for some specific devices, and are available only for UART instances supporti
2303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (IS_UART_WAKEUP_FROMSTOP_INSTANCE(huart->Instance))
2305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Check if the Transmitter is enabled */
2307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
2308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Wait until TEACK flag is set */
2310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VAL
2311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Timeout occurred */
2313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return HAL_TIMEOUT;
2314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 42


2315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Check if the Receiver is enabled */
2318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
2319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Wait until REACK flag is set */
2321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VAL
2322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Timeout occurred */
2324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return HAL_TIMEOUT;
2325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F0
2329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Initialize the UART State */
2331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Unlocked */
2335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
2338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Handle UART Communication Timeout.
2342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  Flag Specifies the UART flag to check
2344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  Status Flag status (SET or RESET)
2345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  Tickstart Tick start value
2346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  Timeout Timeout duration
2347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
2350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Wait until flag is set */
2352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   while((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
2353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Check for the Timeout */
2355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(Timeout != HAL_MAX_DELAY)
2356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if((Timeout == 0U) || ((HAL_GetTick()-Tickstart) > Timeout))
2358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
2360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
2361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->gState  = HAL_UART_STATE_READY;
2364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
2365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Process Unlocked */
2367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         __HAL_UNLOCK(huart);
2368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return HAL_TIMEOUT;
2369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 43


2372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
2373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
2378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
2382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
  25              		.loc 1 2382 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30              	.LVL0:
2383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
2384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
  31              		.loc 1 2384 0
  32 0000 0268     		ldr	r2, [r0]
  33 0002 1368     		ldr	r3, [r2]
  34 0004 C021     		movs	r1, #192
  35 0006 8B43     		bics	r3, r1
  36 0008 1360     		str	r3, [r2]
2385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
2387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
  37              		.loc 1 2387 0
  38 000a 2022     		movs	r2, #32
  39 000c 6923     		movs	r3, #105
  40 000e C254     		strb	r2, [r0, r3]
2388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
  41              		.loc 1 2388 0
  42              		@ sp needed
  43 0010 7047     		bx	lr
  44              		.cfi_endproc
  45              	.LFE76:
  47              		.section	.text.UART_EndRxTransfer,"ax",%progbits
  48              		.align	1
  49              		.syntax unified
  50              		.code	16
  51              		.thumb_func
  52              		.fpu softvfp
  54              	UART_EndRxTransfer:
  55              	.LFB77:
2389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
2393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
2397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
  56              		.loc 1 2397 0
  57              		.cfi_startproc
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 44


  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60              		@ link register save eliminated.
  61              	.LVL1:
2398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
  62              		.loc 1 2399 0
  63 0000 0268     		ldr	r2, [r0]
  64 0002 1368     		ldr	r3, [r2]
  65 0004 0649     		ldr	r1, .L3
  66 0006 0B40     		ands	r3, r1
  67 0008 1360     		str	r3, [r2]
2400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
  68              		.loc 1 2400 0
  69 000a 0268     		ldr	r2, [r0]
  70 000c 9368     		ldr	r3, [r2, #8]
  71 000e 2331     		adds	r1, r1, #35
  72 0010 FF31     		adds	r1, r1, #255
  73 0012 8B43     		bics	r3, r1
  74 0014 9360     		str	r3, [r2, #8]
2401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
2403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
  75              		.loc 1 2403 0
  76 0016 2022     		movs	r2, #32
  77 0018 6A23     		movs	r3, #106
  78 001a C254     		strb	r2, [r0, r3]
2404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
  79              		.loc 1 2404 0
  80              		@ sp needed
  81 001c 7047     		bx	lr
  82              	.L4:
  83 001e C046     		.align	2
  84              	.L3:
  85 0020 DFFEFFFF 		.word	-289
  86              		.cfi_endproc
  87              	.LFE77:
  89              		.section	.text.HAL_UART_MspInit,"ax",%progbits
  90              		.align	1
  91              		.weak	HAL_UART_MspInit
  92              		.syntax unified
  93              		.code	16
  94              		.thumb_func
  95              		.fpu softvfp
  97              	HAL_UART_MspInit:
  98              	.LFB39:
 574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
  99              		.loc 1 574 0
 100              		.cfi_startproc
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103              		@ link register save eliminated.
 104              	.LVL2:
 581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 105              		.loc 1 581 0
 106              		@ sp needed
 107 0000 7047     		bx	lr
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 45


 108              		.cfi_endproc
 109              	.LFE39:
 111              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 112              		.align	1
 113              		.weak	HAL_UART_MspDeInit
 114              		.syntax unified
 115              		.code	16
 116              		.thumb_func
 117              		.fpu softvfp
 119              	HAL_UART_MspDeInit:
 120              	.LFB40:
 589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 121              		.loc 1 589 0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 0, uses_anonymous_args = 0
 125              		@ link register save eliminated.
 126              	.LVL3:
 596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 127              		.loc 1 596 0
 128              		@ sp needed
 129 0000 7047     		bx	lr
 130              		.cfi_endproc
 131              	.LFE40:
 133              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 134              		.align	1
 135              		.global	HAL_UART_DeInit
 136              		.syntax unified
 137              		.code	16
 138              		.thumb_func
 139              		.fpu softvfp
 141              	HAL_UART_DeInit:
 142              	.LFB38:
 536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 143              		.loc 1 536 0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147              	.LVL4:
 148 0000 70B5     		push	{r4, r5, r6, lr}
 149              	.LCFI0:
 150              		.cfi_def_cfa_offset 16
 151              		.cfi_offset 4, -16
 152              		.cfi_offset 5, -12
 153              		.cfi_offset 6, -8
 154              		.cfi_offset 14, -4
 155 0002 041E     		subs	r4, r0, #0
 538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 156              		.loc 1 538 0
 157 0004 18D0     		beq	.L9
 546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 158              		.loc 1 546 0
 159 0006 6926     		movs	r6, #105
 160 0008 2423     		movs	r3, #36
 161 000a 8355     		strb	r3, [r0, r6]
 549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 162              		.loc 1 549 0
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 46


 163 000c 0268     		ldr	r2, [r0]
 164 000e 1368     		ldr	r3, [r2]
 165 0010 0121     		movs	r1, #1
 166 0012 8B43     		bics	r3, r1
 167 0014 1360     		str	r3, [r2]
 551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 168              		.loc 1 551 0
 169 0016 0368     		ldr	r3, [r0]
 170 0018 0025     		movs	r5, #0
 171 001a 1D60     		str	r5, [r3]
 552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 172              		.loc 1 552 0
 173 001c 0368     		ldr	r3, [r0]
 174 001e 5D60     		str	r5, [r3, #4]
 553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 175              		.loc 1 553 0
 176 0020 0368     		ldr	r3, [r0]
 177 0022 9D60     		str	r5, [r3, #8]
 556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 178              		.loc 1 556 0
 179 0024 FFF7FEFF 		bl	HAL_UART_MspDeInit
 180              	.LVL5:
 558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState    = HAL_UART_STATE_RESET;
 181              		.loc 1 558 0
 182 0028 E566     		str	r5, [r4, #108]
 559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState   = HAL_UART_STATE_RESET;
 183              		.loc 1 559 0
 184 002a A555     		strb	r5, [r4, r6]
 560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 185              		.loc 1 560 0
 186 002c 6A23     		movs	r3, #106
 187 002e E554     		strb	r5, [r4, r3]
 563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 188              		.loc 1 563 0
 189 0030 023B     		subs	r3, r3, #2
 190 0032 E554     		strb	r5, [r4, r3]
 565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 191              		.loc 1 565 0
 192 0034 0020     		movs	r0, #0
 193              	.L8:
 566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 194              		.loc 1 566 0
 195              		@ sp needed
 196              	.LVL6:
 197 0036 70BD     		pop	{r4, r5, r6, pc}
 198              	.LVL7:
 199              	.L9:
 540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 200              		.loc 1 540 0
 201 0038 0120     		movs	r0, #1
 202              	.LVL8:
 203 003a FCE7     		b	.L8
 204              		.cfi_endproc
 205              	.LFE38:
 207              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 208              		.align	1
 209              		.global	HAL_UART_Transmit_IT
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 47


 210              		.syntax unified
 211              		.code	16
 212              		.thumb_func
 213              		.fpu softvfp
 215              	HAL_UART_Transmit_IT:
 216              	.LFB43:
 862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 217              		.loc 1 862 0
 218              		.cfi_startproc
 219              		@ args = 0, pretend = 0, frame = 0
 220              		@ frame_needed = 0, uses_anonymous_args = 0
 221              	.LVL9:
 222 0000 10B5     		push	{r4, lr}
 223              	.LCFI1:
 224              		.cfi_def_cfa_offset 8
 225              		.cfi_offset 4, -8
 226              		.cfi_offset 14, -4
 864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 227              		.loc 1 864 0
 228 0002 6923     		movs	r3, #105
 229 0004 C35C     		ldrb	r3, [r0, r3]
 230 0006 202B     		cmp	r3, #32
 231 0008 01D0     		beq	.L18
 902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 232              		.loc 1 902 0
 233 000a 0220     		movs	r0, #2
 234              	.LVL10:
 235              	.L11:
 904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 236              		.loc 1 904 0
 237              		@ sp needed
 238 000c 10BD     		pop	{r4, pc}
 239              	.LVL11:
 240              	.L18:
 866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 241              		.loc 1 866 0
 242 000e 0029     		cmp	r1, #0
 243 0010 24D0     		beq	.L14
 866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 244              		.loc 1 866 0 is_stmt 0 discriminator 1
 245 0012 002A     		cmp	r2, #0
 246 0014 24D0     		beq	.L15
 874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 247              		.loc 1 874 0 is_stmt 1
 248 0016 8023     		movs	r3, #128
 249 0018 5B01     		lsls	r3, r3, #5
 250 001a 8468     		ldr	r4, [r0, #8]
 251 001c 9C42     		cmp	r4, r3
 252 001e 16D0     		beq	.L19
 253              	.L12:
 883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 254              		.loc 1 883 0
 255 0020 6823     		movs	r3, #104
 256 0022 C35C     		ldrb	r3, [r0, r3]
 257 0024 012B     		cmp	r3, #1
 258 0026 1DD0     		beq	.L17
 885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferSize = Size;
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 48


 259              		.loc 1 885 0 discriminator 2
 260 0028 C164     		str	r1, [r0, #76]
 886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = Size;
 261              		.loc 1 886 0 discriminator 2
 262 002a 5023     		movs	r3, #80
 263 002c C252     		strh	r2, [r0, r3]
 887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 264              		.loc 1 887 0 discriminator 2
 265 002e 0233     		adds	r3, r3, #2
 266 0030 C252     		strh	r2, [r0, r3]
 889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 267              		.loc 1 889 0 discriminator 2
 268 0032 0023     		movs	r3, #0
 269 0034 C366     		str	r3, [r0, #108]
 890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 270              		.loc 1 890 0 discriminator 2
 271 0036 2121     		movs	r1, #33
 272              	.LVL12:
 273 0038 6922     		movs	r2, #105
 274              	.LVL13:
 275 003a 8154     		strb	r1, [r0, r2]
 893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 276              		.loc 1 893 0 discriminator 2
 277 003c 013A     		subs	r2, r2, #1
 278 003e 8354     		strb	r3, [r0, r2]
 896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 279              		.loc 1 896 0 discriminator 2
 280 0040 0268     		ldr	r2, [r0]
 281 0042 1368     		ldr	r3, [r2]
 282 0044 5F31     		adds	r1, r1, #95
 283 0046 0B43     		orrs	r3, r1
 284 0048 1360     		str	r3, [r2]
 898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 285              		.loc 1 898 0 discriminator 2
 286 004a 0020     		movs	r0, #0
 287              	.LVL14:
 288 004c DEE7     		b	.L11
 289              	.LVL15:
 290              	.L19:
 874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 291              		.loc 1 874 0 discriminator 1
 292 004e 0369     		ldr	r3, [r0, #16]
 293 0050 002B     		cmp	r3, #0
 294 0052 E5D1     		bne	.L12
 876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 295              		.loc 1 876 0
 296 0054 CB07     		lsls	r3, r1, #31
 297 0056 E3D5     		bpl	.L12
 878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 298              		.loc 1 878 0
 299 0058 0120     		movs	r0, #1
 300              	.LVL16:
 301 005a D7E7     		b	.L11
 302              	.LVL17:
 303              	.L14:
 868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 304              		.loc 1 868 0
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 49


 305 005c 0120     		movs	r0, #1
 306              	.LVL18:
 307 005e D5E7     		b	.L11
 308              	.LVL19:
 309              	.L15:
 310 0060 0120     		movs	r0, #1
 311              	.LVL20:
 312 0062 D3E7     		b	.L11
 313              	.LVL21:
 314              	.L17:
 883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 315              		.loc 1 883 0
 316 0064 0220     		movs	r0, #2
 317              	.LVL22:
 318 0066 D1E7     		b	.L11
 319              		.cfi_endproc
 320              	.LFE43:
 322              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 323              		.align	1
 324              		.global	HAL_UART_Receive_IT
 325              		.syntax unified
 326              		.code	16
 327              		.thumb_func
 328              		.fpu softvfp
 330              	HAL_UART_Receive_IT:
 331              	.LFB44:
 918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 332              		.loc 1 918 0
 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 0
 335              		@ frame_needed = 0, uses_anonymous_args = 0
 336              	.LVL23:
 337 0000 30B5     		push	{r4, r5, lr}
 338              	.LCFI2:
 339              		.cfi_def_cfa_offset 12
 340              		.cfi_offset 4, -12
 341              		.cfi_offset 5, -8
 342              		.cfi_offset 14, -4
 920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 343              		.loc 1 920 0
 344 0002 6A23     		movs	r3, #106
 345 0004 C35C     		ldrb	r3, [r0, r3]
 346 0006 202B     		cmp	r3, #32
 347 0008 01D0     		beq	.L34
 964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 348              		.loc 1 964 0
 349 000a 0220     		movs	r0, #2
 350              	.LVL24:
 351              	.L21:
 966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 352              		.loc 1 966 0
 353              		@ sp needed
 354 000c 30BD     		pop	{r4, r5, pc}
 355              	.LVL25:
 356              	.L34:
 922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 357              		.loc 1 922 0
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 50


 358 000e 0029     		cmp	r1, #0
 359 0010 58D0     		beq	.L30
 922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 360              		.loc 1 922 0 is_stmt 0 discriminator 1
 361 0012 002A     		cmp	r2, #0
 362 0014 58D0     		beq	.L31
 930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 363              		.loc 1 930 0 is_stmt 1
 364 0016 8368     		ldr	r3, [r0, #8]
 365 0018 8024     		movs	r4, #128
 366 001a 6401     		lsls	r4, r4, #5
 367 001c A342     		cmp	r3, r4
 368 001e 18D0     		beq	.L35
 369              	.L22:
 939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 370              		.loc 1 939 0
 371 0020 6824     		movs	r4, #104
 372 0022 045D     		ldrb	r4, [r0, r4]
 373 0024 012C     		cmp	r4, #1
 374 0026 51D0     		beq	.L33
 939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 375              		.loc 1 939 0 is_stmt 0 discriminator 2
 376 0028 0125     		movs	r5, #1
 377 002a 6824     		movs	r4, #104
 378 002c 0555     		strb	r5, [r0, r4]
 941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferSize = Size;
 379              		.loc 1 941 0 is_stmt 1 discriminator 2
 380 002e 4165     		str	r1, [r0, #84]
 942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = Size;
 381              		.loc 1 942 0 discriminator 2
 382 0030 5821     		movs	r1, #88
 383              	.LVL26:
 384 0032 4252     		strh	r2, [r0, r1]
 385              	.LVL27:
 943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 386              		.loc 1 943 0 discriminator 2
 387 0034 0231     		adds	r1, r1, #2
 388 0036 4252     		strh	r2, [r0, r1]
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 389              		.loc 1 946 0 discriminator 2
 390 0038 8022     		movs	r2, #128
 391              	.LVL28:
 392 003a 5201     		lsls	r2, r2, #5
 393 003c 9342     		cmp	r3, r2
 394 003e 0FD0     		beq	.L36
 395 0040 002B     		cmp	r3, #0
 396 0042 1CD1     		bne	.L26
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 397              		.loc 1 946 0 is_stmt 0 discriminator 5
 398 0044 0369     		ldr	r3, [r0, #16]
 399 0046 002B     		cmp	r3, #0
 400 0048 15D1     		bne	.L27
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 401              		.loc 1 946 0 discriminator 7
 402 004a FF22     		movs	r2, #255
 403 004c 5C33     		adds	r3, r3, #92
 404 004e C252     		strh	r2, [r0, r3]
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 51


 405              	.LVL29:
 406 0050 19E0     		b	.L25
 407              	.LVL30:
 408              	.L35:
 930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 409              		.loc 1 930 0 is_stmt 1 discriminator 1
 410 0052 0469     		ldr	r4, [r0, #16]
 411 0054 002C     		cmp	r4, #0
 412 0056 E3D1     		bne	.L22
 932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 413              		.loc 1 932 0
 414 0058 CC07     		lsls	r4, r1, #31
 415 005a E1D5     		bpl	.L22
 934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 416              		.loc 1 934 0
 417 005c 0120     		movs	r0, #1
 418              	.LVL31:
 419 005e D5E7     		b	.L21
 420              	.LVL32:
 421              	.L36:
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 422              		.loc 1 946 0 discriminator 1
 423 0060 0369     		ldr	r3, [r0, #16]
 424 0062 002B     		cmp	r3, #0
 425 0064 03D1     		bne	.L24
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 426              		.loc 1 946 0 is_stmt 0 discriminator 3
 427 0066 1A4A     		ldr	r2, .L38
 428 0068 5C33     		adds	r3, r3, #92
 429 006a C252     		strh	r2, [r0, r3]
 430              	.LVL33:
 431 006c 0BE0     		b	.L25
 432              	.LVL34:
 433              	.L24:
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 434              		.loc 1 946 0 discriminator 4
 435 006e FF22     		movs	r2, #255
 436 0070 5C23     		movs	r3, #92
 437 0072 C252     		strh	r2, [r0, r3]
 438              	.LVL35:
 439 0074 07E0     		b	.L25
 440              	.LVL36:
 441              	.L27:
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 442              		.loc 1 946 0 discriminator 8
 443 0076 7F22     		movs	r2, #127
 444 0078 5C23     		movs	r3, #92
 445 007a C252     		strh	r2, [r0, r3]
 446              	.LVL37:
 447 007c 03E0     		b	.L25
 448              	.LVL38:
 449              	.L26:
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 450              		.loc 1 946 0 discriminator 6
 451 007e 8022     		movs	r2, #128
 452 0080 5205     		lsls	r2, r2, #21
 453 0082 9342     		cmp	r3, r2
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 52


 454 0084 13D0     		beq	.L37
 455              	.LVL39:
 456              	.L25:
 948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 457              		.loc 1 948 0 is_stmt 1
 458 0086 0023     		movs	r3, #0
 459 0088 C366     		str	r3, [r0, #108]
 949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 460              		.loc 1 949 0
 461 008a 2221     		movs	r1, #34
 462 008c 6A22     		movs	r2, #106
 463 008e 8154     		strb	r1, [r0, r2]
 952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 464              		.loc 1 952 0
 465 0090 023A     		subs	r2, r2, #2
 466 0092 8354     		strb	r3, [r0, r2]
 955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 467              		.loc 1 955 0
 468 0094 0268     		ldr	r2, [r0]
 469 0096 9368     		ldr	r3, [r2, #8]
 470 0098 2139     		subs	r1, r1, #33
 471 009a 0B43     		orrs	r3, r1
 472 009c 9360     		str	r3, [r2, #8]
 958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 473              		.loc 1 958 0
 474 009e 0268     		ldr	r2, [r0]
 475 00a0 1168     		ldr	r1, [r2]
 476 00a2 9023     		movs	r3, #144
 477 00a4 5B00     		lsls	r3, r3, #1
 478 00a6 0B43     		orrs	r3, r1
 479 00a8 1360     		str	r3, [r2]
 960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 480              		.loc 1 960 0
 481 00aa 0020     		movs	r0, #0
 482              	.LVL40:
 483 00ac AEE7     		b	.L21
 484              	.LVL41:
 485              	.L37:
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 486              		.loc 1 946 0 discriminator 9
 487 00ae 0369     		ldr	r3, [r0, #16]
 488 00b0 002B     		cmp	r3, #0
 489 00b2 03D1     		bne	.L28
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 490              		.loc 1 946 0 is_stmt 0 discriminator 10
 491 00b4 7F22     		movs	r2, #127
 492 00b6 5C33     		adds	r3, r3, #92
 493 00b8 C252     		strh	r2, [r0, r3]
 494              	.LVL42:
 495 00ba E4E7     		b	.L25
 496              	.LVL43:
 497              	.L28:
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 498              		.loc 1 946 0 discriminator 11
 499 00bc 3F22     		movs	r2, #63
 500 00be 5C23     		movs	r3, #92
 501 00c0 C252     		strh	r2, [r0, r3]
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 53


 502              	.LVL44:
 503 00c2 E0E7     		b	.L25
 504              	.LVL45:
 505              	.L30:
 924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 506              		.loc 1 924 0 is_stmt 1
 507 00c4 0120     		movs	r0, #1
 508              	.LVL46:
 509 00c6 A1E7     		b	.L21
 510              	.LVL47:
 511              	.L31:
 512 00c8 0120     		movs	r0, #1
 513              	.LVL48:
 514 00ca 9FE7     		b	.L21
 515              	.LVL49:
 516              	.L33:
 939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 517              		.loc 1 939 0
 518 00cc 0220     		movs	r0, #2
 519              	.LVL50:
 520 00ce 9DE7     		b	.L21
 521              	.L39:
 522              		.align	2
 523              	.L38:
 524 00d0 FF010000 		.word	511
 525              		.cfi_endproc
 526              	.LFE44:
 528              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 529              		.align	1
 530              		.global	HAL_UART_Transmit_DMA
 531              		.syntax unified
 532              		.code	16
 533              		.thumb_func
 534              		.fpu softvfp
 536              	HAL_UART_Transmit_DMA:
 537              	.LFB45:
 980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 538              		.loc 1 980 0
 539              		.cfi_startproc
 540              		@ args = 0, pretend = 0, frame = 0
 541              		@ frame_needed = 0, uses_anonymous_args = 0
 542              	.LVL51:
 543 0000 70B5     		push	{r4, r5, r6, lr}
 544              	.LCFI3:
 545              		.cfi_def_cfa_offset 16
 546              		.cfi_offset 4, -16
 547              		.cfi_offset 5, -12
 548              		.cfi_offset 6, -8
 549              		.cfi_offset 14, -4
 550 0002 0400     		movs	r4, r0
 982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 551              		.loc 1 982 0
 552 0004 6920     		movs	r0, #105
 553              	.LVL52:
 554 0006 205C     		ldrb	r0, [r4, r0]
 555 0008 2028     		cmp	r0, #32
 556 000a 01D0     		beq	.L48
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 54


1039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 557              		.loc 1 1039 0
 558 000c 0220     		movs	r0, #2
 559              	.LVL53:
 560              	.L41:
1041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 561              		.loc 1 1041 0
 562              		@ sp needed
 563              	.LVL54:
 564 000e 70BD     		pop	{r4, r5, r6, pc}
 565              	.LVL55:
 566              	.L48:
 984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 567              		.loc 1 984 0
 568 0010 0029     		cmp	r1, #0
 569 0012 3ED0     		beq	.L44
 984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 570              		.loc 1 984 0 is_stmt 0 discriminator 1
 571 0014 002A     		cmp	r2, #0
 572 0016 3ED0     		beq	.L45
 992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 573              		.loc 1 992 0 is_stmt 1
 574 0018 8023     		movs	r3, #128
 575 001a 5B01     		lsls	r3, r3, #5
 576 001c A068     		ldr	r0, [r4, #8]
 577 001e 9842     		cmp	r0, r3
 578 0020 05D0     		beq	.L49
 579              	.L42:
1001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 580              		.loc 1 1001 0
 581 0022 6823     		movs	r3, #104
 582 0024 E35C     		ldrb	r3, [r4, r3]
 583 0026 012B     		cmp	r3, #1
 584 0028 08D1     		bne	.L50
 585 002a 0220     		movs	r0, #2
 586 002c EFE7     		b	.L41
 587              	.L49:
 992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 588              		.loc 1 992 0 discriminator 1
 589 002e 2369     		ldr	r3, [r4, #16]
 590 0030 002B     		cmp	r3, #0
 591 0032 F6D1     		bne	.L42
 994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 592              		.loc 1 994 0
 593 0034 CB07     		lsls	r3, r1, #31
 594 0036 F4D5     		bpl	.L42
 996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 595              		.loc 1 996 0
 596 0038 0120     		movs	r0, #1
 597 003a E8E7     		b	.L41
 598              	.L50:
1001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 599              		.loc 1 1001 0 discriminator 2
 600 003c 6826     		movs	r6, #104
 601 003e 0123     		movs	r3, #1
 602 0040 A355     		strb	r3, [r4, r6]
1003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferSize = Size;
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 55


 603              		.loc 1 1003 0 discriminator 2
 604 0042 E164     		str	r1, [r4, #76]
1004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = Size;
 605              		.loc 1 1004 0 discriminator 2
 606 0044 4F33     		adds	r3, r3, #79
 607 0046 E252     		strh	r2, [r4, r3]
1005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 608              		.loc 1 1005 0 discriminator 2
 609 0048 0233     		adds	r3, r3, #2
 610 004a E252     		strh	r2, [r4, r3]
1007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 611              		.loc 1 1007 0 discriminator 2
 612 004c 0025     		movs	r5, #0
 613 004e E566     		str	r5, [r4, #108]
1008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 614              		.loc 1 1008 0 discriminator 2
 615 0050 2121     		movs	r1, #33
 616              	.LVL56:
 617 0052 1733     		adds	r3, r3, #23
 618 0054 E154     		strb	r1, [r4, r3]
1011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 619              		.loc 1 1011 0 discriminator 2
 620 0056 236E     		ldr	r3, [r4, #96]
 621 0058 1049     		ldr	r1, .L51
 622 005a 9962     		str	r1, [r3, #40]
1014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 623              		.loc 1 1014 0 discriminator 2
 624 005c 236E     		ldr	r3, [r4, #96]
 625 005e 1049     		ldr	r1, .L51+4
 626 0060 D962     		str	r1, [r3, #44]
1017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 627              		.loc 1 1017 0 discriminator 2
 628 0062 236E     		ldr	r3, [r4, #96]
 629 0064 0F49     		ldr	r1, .L51+8
 630 0066 1963     		str	r1, [r3, #48]
1020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 631              		.loc 1 1020 0 discriminator 2
 632 0068 236E     		ldr	r3, [r4, #96]
 633 006a 5D63     		str	r5, [r3, #52]
1023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 634              		.loc 1 1023 0 discriminator 2
 635 006c 2168     		ldr	r1, [r4]
 636 006e 2831     		adds	r1, r1, #40
 637 0070 1300     		movs	r3, r2
 638 0072 0A00     		movs	r2, r1
 639              	.LVL57:
 640 0074 E16C     		ldr	r1, [r4, #76]
 641 0076 206E     		ldr	r0, [r4, #96]
 642 0078 FFF7FEFF 		bl	HAL_DMA_Start_IT
 643              	.LVL58:
1026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 644              		.loc 1 1026 0 discriminator 2
 645 007c 2368     		ldr	r3, [r4]
 646 007e 4022     		movs	r2, #64
 647 0080 1A62     		str	r2, [r3, #32]
1029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 648              		.loc 1 1029 0 discriminator 2
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 56


 649 0082 A555     		strb	r5, [r4, r6]
1033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 650              		.loc 1 1033 0 discriminator 2
 651 0084 2268     		ldr	r2, [r4]
 652 0086 9368     		ldr	r3, [r2, #8]
 653 0088 8021     		movs	r1, #128
 654 008a 0B43     		orrs	r3, r1
 655 008c 9360     		str	r3, [r2, #8]
1035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 656              		.loc 1 1035 0 discriminator 2
 657 008e 0020     		movs	r0, #0
 658 0090 BDE7     		b	.L41
 659              	.LVL59:
 660              	.L44:
 986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 661              		.loc 1 986 0
 662 0092 0120     		movs	r0, #1
 663 0094 BBE7     		b	.L41
 664              	.L45:
 665 0096 0120     		movs	r0, #1
 666 0098 B9E7     		b	.L41
 667              	.L52:
 668 009a C046     		.align	2
 669              	.L51:
 670 009c 00000000 		.word	UART_DMATransmitCplt
 671 00a0 00000000 		.word	UART_DMATxHalfCplt
 672 00a4 00000000 		.word	UART_DMAError
 673              		.cfi_endproc
 674              	.LFE45:
 676              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 677              		.align	1
 678              		.global	HAL_UART_Receive_DMA
 679              		.syntax unified
 680              		.code	16
 681              		.thumb_func
 682              		.fpu softvfp
 684              	HAL_UART_Receive_DMA:
 685              	.LFB46:
1055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 686              		.loc 1 1055 0
 687              		.cfi_startproc
 688              		@ args = 0, pretend = 0, frame = 0
 689              		@ frame_needed = 0, uses_anonymous_args = 0
 690              	.LVL60:
 691 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 692              	.LCFI4:
 693              		.cfi_def_cfa_offset 24
 694              		.cfi_offset 3, -24
 695              		.cfi_offset 4, -20
 696              		.cfi_offset 5, -16
 697              		.cfi_offset 6, -12
 698              		.cfi_offset 7, -8
 699              		.cfi_offset 14, -4
 700 0002 0400     		movs	r4, r0
1057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 701              		.loc 1 1057 0
 702 0004 6A20     		movs	r0, #106
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 57


 703              	.LVL61:
 704 0006 205C     		ldrb	r0, [r4, r0]
 705 0008 2028     		cmp	r0, #32
 706 000a 01D0     		beq	.L61
1116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 707              		.loc 1 1116 0
 708 000c 0220     		movs	r0, #2
 709              	.LVL62:
 710              	.L54:
1118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 711              		.loc 1 1118 0
 712              		@ sp needed
 713              	.LVL63:
 714 000e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 715              	.LVL64:
 716              	.L61:
1059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 717              		.loc 1 1059 0
 718 0010 0029     		cmp	r1, #0
 719 0012 42D0     		beq	.L57
1059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 720              		.loc 1 1059 0 is_stmt 0 discriminator 1
 721 0014 002A     		cmp	r2, #0
 722 0016 42D0     		beq	.L58
1067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 723              		.loc 1 1067 0 is_stmt 1
 724 0018 8023     		movs	r3, #128
 725 001a 5B01     		lsls	r3, r3, #5
 726 001c A068     		ldr	r0, [r4, #8]
 727 001e 9842     		cmp	r0, r3
 728 0020 05D0     		beq	.L62
 729              	.L55:
1076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 730              		.loc 1 1076 0
 731 0022 6823     		movs	r3, #104
 732 0024 E35C     		ldrb	r3, [r4, r3]
 733 0026 012B     		cmp	r3, #1
 734 0028 08D1     		bne	.L63
 735 002a 0220     		movs	r0, #2
 736 002c EFE7     		b	.L54
 737              	.L62:
1067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 738              		.loc 1 1067 0 discriminator 1
 739 002e 2369     		ldr	r3, [r4, #16]
 740 0030 002B     		cmp	r3, #0
 741 0032 F6D1     		bne	.L55
1069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 742              		.loc 1 1069 0
 743 0034 CB07     		lsls	r3, r1, #31
 744 0036 F4D5     		bpl	.L55
1071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 745              		.loc 1 1071 0
 746 0038 0120     		movs	r0, #1
 747 003a E8E7     		b	.L54
 748              	.L63:
1076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 749              		.loc 1 1076 0 discriminator 2
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 58


 750 003c 6827     		movs	r7, #104
 751 003e 0126     		movs	r6, #1
 752 0040 E655     		strb	r6, [r4, r7]
1078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferSize = Size;
 753              		.loc 1 1078 0 discriminator 2
 754 0042 6165     		str	r1, [r4, #84]
1079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 755              		.loc 1 1079 0 discriminator 2
 756 0044 5823     		movs	r3, #88
 757 0046 E252     		strh	r2, [r4, r3]
1081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 758              		.loc 1 1081 0 discriminator 2
 759 0048 0025     		movs	r5, #0
 760 004a E566     		str	r5, [r4, #108]
1082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 761              		.loc 1 1082 0 discriminator 2
 762 004c 2221     		movs	r1, #34
 763              	.LVL65:
 764 004e 1233     		adds	r3, r3, #18
 765 0050 E154     		strb	r1, [r4, r3]
1085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 766              		.loc 1 1085 0 discriminator 2
 767 0052 636E     		ldr	r3, [r4, #100]
 768 0054 1349     		ldr	r1, .L64
 769 0056 9962     		str	r1, [r3, #40]
1088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 770              		.loc 1 1088 0 discriminator 2
 771 0058 636E     		ldr	r3, [r4, #100]
 772 005a 1349     		ldr	r1, .L64+4
 773 005c D962     		str	r1, [r3, #44]
1091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 774              		.loc 1 1091 0 discriminator 2
 775 005e 636E     		ldr	r3, [r4, #100]
 776 0060 1249     		ldr	r1, .L64+8
 777 0062 1963     		str	r1, [r3, #48]
1094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 778              		.loc 1 1094 0 discriminator 2
 779 0064 636E     		ldr	r3, [r4, #100]
 780 0066 5D63     		str	r5, [r3, #52]
1097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 781              		.loc 1 1097 0 discriminator 2
 782 0068 2168     		ldr	r1, [r4]
 783 006a 2431     		adds	r1, r1, #36
 784 006c 1300     		movs	r3, r2
 785 006e 626D     		ldr	r2, [r4, #84]
 786              	.LVL66:
 787 0070 606E     		ldr	r0, [r4, #100]
 788 0072 FFF7FEFF 		bl	HAL_DMA_Start_IT
 789              	.LVL67:
1100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 790              		.loc 1 1100 0 discriminator 2
 791 0076 E555     		strb	r5, [r4, r7]
1103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 792              		.loc 1 1103 0 discriminator 2
 793 0078 2268     		ldr	r2, [r4]
 794 007a 1168     		ldr	r1, [r2]
 795 007c 8023     		movs	r3, #128
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 59


 796 007e 5B00     		lsls	r3, r3, #1
 797 0080 0B43     		orrs	r3, r1
 798 0082 1360     		str	r3, [r2]
1106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 799              		.loc 1 1106 0 discriminator 2
 800 0084 2268     		ldr	r2, [r4]
 801 0086 9368     		ldr	r3, [r2, #8]
 802 0088 3343     		orrs	r3, r6
 803 008a 9360     		str	r3, [r2, #8]
1110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 804              		.loc 1 1110 0 discriminator 2
 805 008c 2268     		ldr	r2, [r4]
 806 008e 9368     		ldr	r3, [r2, #8]
 807 0090 4021     		movs	r1, #64
 808 0092 0B43     		orrs	r3, r1
 809 0094 9360     		str	r3, [r2, #8]
1112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 810              		.loc 1 1112 0 discriminator 2
 811 0096 0020     		movs	r0, #0
 812 0098 B9E7     		b	.L54
 813              	.LVL68:
 814              	.L57:
1061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 815              		.loc 1 1061 0
 816 009a 0120     		movs	r0, #1
 817 009c B7E7     		b	.L54
 818              	.L58:
 819 009e 0120     		movs	r0, #1
 820 00a0 B5E7     		b	.L54
 821              	.L65:
 822 00a2 C046     		.align	2
 823              	.L64:
 824 00a4 00000000 		.word	UART_DMAReceiveCplt
 825 00a8 00000000 		.word	UART_DMARxHalfCplt
 826 00ac 00000000 		.word	UART_DMAError
 827              		.cfi_endproc
 828              	.LFE46:
 830              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 831              		.align	1
 832              		.global	HAL_UART_DMAPause
 833              		.syntax unified
 834              		.code	16
 835              		.thumb_func
 836              		.fpu softvfp
 838              	HAL_UART_DMAPause:
 839              	.LFB47:
1126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
 840              		.loc 1 1126 0
 841              		.cfi_startproc
 842              		@ args = 0, pretend = 0, frame = 0
 843              		@ frame_needed = 0, uses_anonymous_args = 0
 844              		@ link register save eliminated.
 845              	.LVL69:
1128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 846              		.loc 1 1128 0
 847 0000 6823     		movs	r3, #104
 848 0002 C35C     		ldrb	r3, [r0, r3]
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 60


 849 0004 012B     		cmp	r3, #1
 850 0006 2CD0     		beq	.L70
1128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 851              		.loc 1 1128 0 is_stmt 0 discriminator 2
 852 0008 0122     		movs	r2, #1
 853 000a 6823     		movs	r3, #104
 854 000c C254     		strb	r2, [r0, r3]
1130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 855              		.loc 1 1130 0 is_stmt 1 discriminator 2
 856 000e 0133     		adds	r3, r3, #1
 857 0010 C35C     		ldrb	r3, [r0, r3]
 858 0012 212B     		cmp	r3, #33
 859 0014 08D0     		beq	.L71
 860              	.L68:
1136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 861              		.loc 1 1136 0
 862 0016 6A23     		movs	r3, #106
 863 0018 C35C     		ldrb	r3, [r0, r3]
 864 001a 222B     		cmp	r3, #34
 865 001c 0DD0     		beq	.L72
 866              	.L69:
1148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 867              		.loc 1 1148 0
 868 001e 0022     		movs	r2, #0
 869 0020 6823     		movs	r3, #104
 870 0022 C254     		strb	r2, [r0, r3]
1150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 871              		.loc 1 1150 0
 872 0024 0020     		movs	r0, #0
 873              	.LVL70:
 874              	.L67:
1151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 875              		.loc 1 1151 0
 876              		@ sp needed
 877 0026 7047     		bx	lr
 878              	.LVL71:
 879              	.L71:
1131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 880              		.loc 1 1131 0 discriminator 1
 881 0028 0368     		ldr	r3, [r0]
 882 002a 9A68     		ldr	r2, [r3, #8]
1130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 883              		.loc 1 1130 0 discriminator 1
 884 002c 1206     		lsls	r2, r2, #24
 885 002e F2D5     		bpl	.L68
1134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 886              		.loc 1 1134 0
 887 0030 9A68     		ldr	r2, [r3, #8]
 888 0032 8021     		movs	r1, #128
 889 0034 8A43     		bics	r2, r1
 890 0036 9A60     		str	r2, [r3, #8]
 891 0038 EDE7     		b	.L68
 892              	.L72:
1137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 893              		.loc 1 1137 0 discriminator 1
 894 003a 0368     		ldr	r3, [r0]
 895 003c 9A68     		ldr	r2, [r3, #8]
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 61


1136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 896              		.loc 1 1136 0 discriminator 1
 897 003e 5206     		lsls	r2, r2, #25
 898 0040 EDD5     		bpl	.L69
1140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 899              		.loc 1 1140 0
 900 0042 1A68     		ldr	r2, [r3]
 901 0044 0849     		ldr	r1, .L73
 902 0046 0A40     		ands	r2, r1
 903 0048 1A60     		str	r2, [r3]
1141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 904              		.loc 1 1141 0
 905 004a 0268     		ldr	r2, [r0]
 906 004c 9368     		ldr	r3, [r2, #8]
 907 004e 0331     		adds	r1, r1, #3
 908 0050 FF31     		adds	r1, r1, #255
 909 0052 8B43     		bics	r3, r1
 910 0054 9360     		str	r3, [r2, #8]
1144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 911              		.loc 1 1144 0
 912 0056 0268     		ldr	r2, [r0]
 913 0058 9368     		ldr	r3, [r2, #8]
 914 005a 3F31     		adds	r1, r1, #63
 915 005c 8B43     		bics	r3, r1
 916 005e 9360     		str	r3, [r2, #8]
 917 0060 DDE7     		b	.L69
 918              	.L70:
1128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 919              		.loc 1 1128 0
 920 0062 0220     		movs	r0, #2
 921              	.LVL72:
 922 0064 DFE7     		b	.L67
 923              	.L74:
 924 0066 C046     		.align	2
 925              	.L73:
 926 0068 FFFEFFFF 		.word	-257
 927              		.cfi_endproc
 928              	.LFE47:
 930              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 931              		.align	1
 932              		.global	HAL_UART_DMAResume
 933              		.syntax unified
 934              		.code	16
 935              		.thumb_func
 936              		.fpu softvfp
 938              	HAL_UART_DMAResume:
 939              	.LFB48:
1159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
 940              		.loc 1 1159 0
 941              		.cfi_startproc
 942              		@ args = 0, pretend = 0, frame = 0
 943              		@ frame_needed = 0, uses_anonymous_args = 0
 944              		@ link register save eliminated.
 945              	.LVL73:
1161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 946              		.loc 1 1161 0
 947 0000 6823     		movs	r3, #104
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 62


 948 0002 C35C     		ldrb	r3, [r0, r3]
 949 0004 012B     		cmp	r3, #1
 950 0006 29D0     		beq	.L79
1161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 951              		.loc 1 1161 0 is_stmt 0 discriminator 2
 952 0008 0122     		movs	r2, #1
 953 000a 6823     		movs	r3, #104
 954 000c C254     		strb	r2, [r0, r3]
1163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 955              		.loc 1 1163 0 is_stmt 1 discriminator 2
 956 000e 0133     		adds	r3, r3, #1
 957 0010 C35C     		ldrb	r3, [r0, r3]
 958 0012 212B     		cmp	r3, #33
 959 0014 08D0     		beq	.L80
 960              	.L77:
1168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 961              		.loc 1 1168 0
 962 0016 6A23     		movs	r3, #106
 963 0018 C35C     		ldrb	r3, [r0, r3]
 964 001a 222B     		cmp	r3, #34
 965 001c 0AD0     		beq	.L81
 966              	.L78:
1182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 967              		.loc 1 1182 0
 968 001e 0022     		movs	r2, #0
 969 0020 6823     		movs	r3, #104
 970 0022 C254     		strb	r2, [r0, r3]
1184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 971              		.loc 1 1184 0
 972 0024 0020     		movs	r0, #0
 973              	.LVL74:
 974              	.L76:
1185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 975              		.loc 1 1185 0
 976              		@ sp needed
 977 0026 7047     		bx	lr
 978              	.LVL75:
 979              	.L80:
1166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 980              		.loc 1 1166 0
 981 0028 0268     		ldr	r2, [r0]
 982 002a 9368     		ldr	r3, [r2, #8]
 983 002c 8021     		movs	r1, #128
 984 002e 0B43     		orrs	r3, r1
 985 0030 9360     		str	r3, [r2, #8]
 986 0032 F0E7     		b	.L77
 987              	.L81:
1171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 988              		.loc 1 1171 0
 989 0034 0368     		ldr	r3, [r0]
 990 0036 0822     		movs	r2, #8
 991 0038 1A62     		str	r2, [r3, #32]
1174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 992              		.loc 1 1174 0
 993 003a 0268     		ldr	r2, [r0]
 994 003c 1168     		ldr	r1, [r2]
 995 003e 8023     		movs	r3, #128
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 63


 996 0040 5B00     		lsls	r3, r3, #1
 997 0042 0B43     		orrs	r3, r1
 998 0044 1360     		str	r3, [r2]
1175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 999              		.loc 1 1175 0
 1000 0046 0268     		ldr	r2, [r0]
 1001 0048 9368     		ldr	r3, [r2, #8]
 1002 004a 0121     		movs	r1, #1
 1003 004c 0B43     		orrs	r3, r1
 1004 004e 9360     		str	r3, [r2, #8]
1178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 1005              		.loc 1 1178 0
 1006 0050 0268     		ldr	r2, [r0]
 1007 0052 9368     		ldr	r3, [r2, #8]
 1008 0054 3F31     		adds	r1, r1, #63
 1009 0056 0B43     		orrs	r3, r1
 1010 0058 9360     		str	r3, [r2, #8]
 1011 005a E0E7     		b	.L78
 1012              	.L79:
1161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1013              		.loc 1 1161 0
 1014 005c 0220     		movs	r0, #2
 1015              	.LVL76:
 1016 005e E2E7     		b	.L76
 1017              		.cfi_endproc
 1018              	.LFE48:
 1020              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 1021              		.align	1
 1022              		.global	HAL_UART_DMAStop
 1023              		.syntax unified
 1024              		.code	16
 1025              		.thumb_func
 1026              		.fpu softvfp
 1028              	HAL_UART_DMAStop:
 1029              	.LFB49:
1193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
 1030              		.loc 1 1193 0
 1031              		.cfi_startproc
 1032              		@ args = 0, pretend = 0, frame = 0
 1033              		@ frame_needed = 0, uses_anonymous_args = 0
 1034              	.LVL77:
 1035 0000 10B5     		push	{r4, lr}
 1036              	.LCFI5:
 1037              		.cfi_def_cfa_offset 8
 1038              		.cfi_offset 4, -8
 1039              		.cfi_offset 14, -4
 1040 0002 0400     		movs	r4, r0
1202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 1041              		.loc 1 1202 0
 1042 0004 6923     		movs	r3, #105
 1043 0006 C35C     		ldrb	r3, [r0, r3]
 1044 0008 212B     		cmp	r3, #33
 1045 000a 05D0     		beq	.L87
 1046              	.LVL78:
 1047              	.L83:
1217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 1048              		.loc 1 1217 0
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 64


 1049 000c 6A23     		movs	r3, #106
 1050 000e E35C     		ldrb	r3, [r4, r3]
 1051 0010 222B     		cmp	r3, #34
 1052 0012 12D0     		beq	.L88
 1053              	.L85:
1232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1054              		.loc 1 1232 0
 1055 0014 0020     		movs	r0, #0
 1056              		@ sp needed
 1057              	.LVL79:
 1058 0016 10BD     		pop	{r4, pc}
 1059              	.LVL80:
 1060              	.L87:
1203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1061              		.loc 1 1203 0 discriminator 1
 1062 0018 0368     		ldr	r3, [r0]
 1063 001a 9A68     		ldr	r2, [r3, #8]
1202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 1064              		.loc 1 1202 0 discriminator 1
 1065 001c 1206     		lsls	r2, r2, #24
 1066 001e F5D5     		bpl	.L83
1205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1067              		.loc 1 1205 0
 1068 0020 9A68     		ldr	r2, [r3, #8]
 1069 0022 8021     		movs	r1, #128
 1070 0024 8A43     		bics	r2, r1
 1071 0026 9A60     		str	r2, [r3, #8]
1208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1072              		.loc 1 1208 0
 1073 0028 006E     		ldr	r0, [r0, #96]
 1074              	.LVL81:
 1075 002a 0028     		cmp	r0, #0
 1076 002c 01D0     		beq	.L84
1210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 1077              		.loc 1 1210 0
 1078 002e FFF7FEFF 		bl	HAL_DMA_Abort
 1079              	.LVL82:
 1080              	.L84:
1213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 1081              		.loc 1 1213 0
 1082 0032 2000     		movs	r0, r4
 1083 0034 FFF7FEFF 		bl	UART_EndTxTransfer
 1084              	.LVL83:
 1085 0038 E8E7     		b	.L83
 1086              	.L88:
1218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1087              		.loc 1 1218 0 discriminator 1
 1088 003a 2368     		ldr	r3, [r4]
 1089 003c 9A68     		ldr	r2, [r3, #8]
1217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 1090              		.loc 1 1217 0 discriminator 1
 1091 003e 5206     		lsls	r2, r2, #25
 1092 0040 E8D5     		bpl	.L85
1220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1093              		.loc 1 1220 0
 1094 0042 9A68     		ldr	r2, [r3, #8]
 1095 0044 4021     		movs	r1, #64
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 65


 1096 0046 8A43     		bics	r2, r1
 1097 0048 9A60     		str	r2, [r3, #8]
1223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1098              		.loc 1 1223 0
 1099 004a 606E     		ldr	r0, [r4, #100]
 1100 004c 0028     		cmp	r0, #0
 1101 004e 01D0     		beq	.L86
1225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 1102              		.loc 1 1225 0
 1103 0050 FFF7FEFF 		bl	HAL_DMA_Abort
 1104              	.LVL84:
 1105              	.L86:
1228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 1106              		.loc 1 1228 0
 1107 0054 2000     		movs	r0, r4
 1108 0056 FFF7FEFF 		bl	UART_EndRxTransfer
 1109              	.LVL85:
 1110 005a DBE7     		b	.L85
 1111              		.cfi_endproc
 1112              	.LFE49:
 1114              		.section	.text.HAL_UART_Abort,"ax",%progbits
 1115              		.align	1
 1116              		.global	HAL_UART_Abort
 1117              		.syntax unified
 1118              		.code	16
 1119              		.thumb_func
 1120              		.fpu softvfp
 1122              	HAL_UART_Abort:
 1123              	.LFB50:
1247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 1124              		.loc 1 1247 0
 1125              		.cfi_startproc
 1126              		@ args = 0, pretend = 0, frame = 0
 1127              		@ frame_needed = 0, uses_anonymous_args = 0
 1128              	.LVL86:
 1129 0000 10B5     		push	{r4, lr}
 1130              	.LCFI6:
 1131              		.cfi_def_cfa_offset 8
 1132              		.cfi_offset 4, -8
 1133              		.cfi_offset 14, -4
 1134 0002 0400     		movs	r4, r0
1249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1135              		.loc 1 1249 0
 1136 0004 0268     		ldr	r2, [r0]
 1137 0006 1368     		ldr	r3, [r2]
 1138 0008 1C49     		ldr	r1, .L92
 1139 000a 0B40     		ands	r3, r1
 1140 000c 1360     		str	r3, [r2]
1250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1141              		.loc 1 1250 0
 1142 000e 0268     		ldr	r2, [r0]
 1143 0010 9368     		ldr	r3, [r2, #8]
 1144 0012 E331     		adds	r1, r1, #227
 1145 0014 FF31     		adds	r1, r1, #255
 1146 0016 8B43     		bics	r3, r1
 1147 0018 9360     		str	r3, [r2, #8]
1253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 66


 1148              		.loc 1 1253 0
 1149 001a 0368     		ldr	r3, [r0]
 1150 001c 9A68     		ldr	r2, [r3, #8]
 1151 001e 1206     		lsls	r2, r2, #24
 1152 0020 0BD5     		bpl	.L90
1255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1153              		.loc 1 1255 0
 1154 0022 9A68     		ldr	r2, [r3, #8]
 1155 0024 7F31     		adds	r1, r1, #127
 1156 0026 8A43     		bics	r2, r1
 1157 0028 9A60     		str	r2, [r3, #8]
1258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1158              		.loc 1 1258 0
 1159 002a 036E     		ldr	r3, [r0, #96]
 1160 002c 002B     		cmp	r3, #0
 1161 002e 04D0     		beq	.L90
1262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1162              		.loc 1 1262 0
 1163 0030 0022     		movs	r2, #0
 1164 0032 5A63     		str	r2, [r3, #52]
1264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 1165              		.loc 1 1264 0
 1166 0034 006E     		ldr	r0, [r0, #96]
 1167              	.LVL87:
 1168 0036 FFF7FEFF 		bl	HAL_DMA_Abort
 1169              	.LVL88:
 1170              	.L90:
1269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1171              		.loc 1 1269 0
 1172 003a 2368     		ldr	r3, [r4]
 1173 003c 9A68     		ldr	r2, [r3, #8]
 1174 003e 5206     		lsls	r2, r2, #25
 1175 0040 0BD5     		bpl	.L91
1271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1176              		.loc 1 1271 0
 1177 0042 9A68     		ldr	r2, [r3, #8]
 1178 0044 4021     		movs	r1, #64
 1179 0046 8A43     		bics	r2, r1
 1180 0048 9A60     		str	r2, [r3, #8]
1274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1181              		.loc 1 1274 0
 1182 004a 636E     		ldr	r3, [r4, #100]
 1183 004c 002B     		cmp	r3, #0
 1184 004e 04D0     		beq	.L91
1278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1185              		.loc 1 1278 0
 1186 0050 0022     		movs	r2, #0
 1187 0052 5A63     		str	r2, [r3, #52]
1280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 1188              		.loc 1 1280 0
 1189 0054 606E     		ldr	r0, [r4, #100]
 1190 0056 FFF7FEFF 		bl	HAL_DMA_Abort
 1191              	.LVL89:
 1192              	.L91:
1285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U; 
 1193              		.loc 1 1285 0
 1194 005a 0023     		movs	r3, #0
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 67


 1195 005c 5222     		movs	r2, #82
 1196 005e A352     		strh	r3, [r4, r2]
1286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1197              		.loc 1 1286 0
 1198 0060 0832     		adds	r2, r2, #8
 1199 0062 A352     		strh	r3, [r4, r2]
1289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1200              		.loc 1 1289 0
 1201 0064 2268     		ldr	r2, [r4]
 1202 0066 0F21     		movs	r1, #15
 1203 0068 1162     		str	r1, [r2, #32]
1292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 1204              		.loc 1 1292 0
 1205 006a 2022     		movs	r2, #32
 1206 006c 5A31     		adds	r1, r1, #90
 1207 006e 6254     		strb	r2, [r4, r1]
1293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1208              		.loc 1 1293 0
 1209 0070 0131     		adds	r1, r1, #1
 1210 0072 6254     		strb	r2, [r4, r1]
1296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1211              		.loc 1 1296 0
 1212 0074 E366     		str	r3, [r4, #108]
1299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1213              		.loc 1 1299 0
 1214 0076 0020     		movs	r0, #0
 1215              		@ sp needed
 1216              	.LVL90:
 1217 0078 10BD     		pop	{r4, pc}
 1218              	.L93:
 1219 007a C046     		.align	2
 1220              	.L92:
 1221 007c 1FFEFFFF 		.word	-481
 1222              		.cfi_endproc
 1223              	.LFE50:
 1225              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 1226              		.align	1
 1227              		.global	HAL_UART_AbortTransmit
 1228              		.syntax unified
 1229              		.code	16
 1230              		.thumb_func
 1231              		.fpu softvfp
 1233              	HAL_UART_AbortTransmit:
 1234              	.LFB51:
1314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 1235              		.loc 1 1314 0
 1236              		.cfi_startproc
 1237              		@ args = 0, pretend = 0, frame = 0
 1238              		@ frame_needed = 0, uses_anonymous_args = 0
 1239              	.LVL91:
 1240 0000 10B5     		push	{r4, lr}
 1241              	.LCFI7:
 1242              		.cfi_def_cfa_offset 8
 1243              		.cfi_offset 4, -8
 1244              		.cfi_offset 14, -4
 1245 0002 0400     		movs	r4, r0
1316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 68


 1246              		.loc 1 1316 0
 1247 0004 0268     		ldr	r2, [r0]
 1248 0006 1368     		ldr	r3, [r2]
 1249 0008 C021     		movs	r1, #192
 1250 000a 8B43     		bics	r3, r1
 1251 000c 1360     		str	r3, [r2]
1319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1252              		.loc 1 1319 0
 1253 000e 0368     		ldr	r3, [r0]
 1254 0010 9A68     		ldr	r2, [r3, #8]
 1255 0012 1206     		lsls	r2, r2, #24
 1256 0014 0BD5     		bpl	.L95
1321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1257              		.loc 1 1321 0
 1258 0016 9A68     		ldr	r2, [r3, #8]
 1259 0018 4039     		subs	r1, r1, #64
 1260 001a 8A43     		bics	r2, r1
 1261 001c 9A60     		str	r2, [r3, #8]
1324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1262              		.loc 1 1324 0
 1263 001e 036E     		ldr	r3, [r0, #96]
 1264 0020 002B     		cmp	r3, #0
 1265 0022 04D0     		beq	.L95
1328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1266              		.loc 1 1328 0
 1267 0024 0022     		movs	r2, #0
 1268 0026 5A63     		str	r2, [r3, #52]
1330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 1269              		.loc 1 1330 0
 1270 0028 006E     		ldr	r0, [r0, #96]
 1271              	.LVL92:
 1272 002a FFF7FEFF 		bl	HAL_DMA_Abort
 1273              	.LVL93:
 1274              	.L95:
1335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1275              		.loc 1 1335 0
 1276 002e 0022     		movs	r2, #0
 1277 0030 5223     		movs	r3, #82
 1278 0032 E252     		strh	r2, [r4, r3]
1338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1279              		.loc 1 1338 0
 1280 0034 2032     		adds	r2, r2, #32
 1281 0036 1733     		adds	r3, r3, #23
 1282 0038 E254     		strb	r2, [r4, r3]
1341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1283              		.loc 1 1341 0
 1284 003a 0020     		movs	r0, #0
 1285              		@ sp needed
 1286              	.LVL94:
 1287 003c 10BD     		pop	{r4, pc}
 1288              		.cfi_endproc
 1289              	.LFE51:
 1291              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 1292              		.align	1
 1293              		.global	HAL_UART_AbortReceive
 1294              		.syntax unified
 1295              		.code	16
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 69


 1296              		.thumb_func
 1297              		.fpu softvfp
 1299              	HAL_UART_AbortReceive:
 1300              	.LFB52:
1356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 1301              		.loc 1 1356 0
 1302              		.cfi_startproc
 1303              		@ args = 0, pretend = 0, frame = 0
 1304              		@ frame_needed = 0, uses_anonymous_args = 0
 1305              	.LVL95:
 1306 0000 10B5     		push	{r4, lr}
 1307              	.LCFI8:
 1308              		.cfi_def_cfa_offset 8
 1309              		.cfi_offset 4, -8
 1310              		.cfi_offset 14, -4
 1311 0002 0400     		movs	r4, r0
1358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1312              		.loc 1 1358 0
 1313 0004 0268     		ldr	r2, [r0]
 1314 0006 1368     		ldr	r3, [r2]
 1315 0008 1149     		ldr	r1, .L98
 1316 000a 0B40     		ands	r3, r1
 1317 000c 1360     		str	r3, [r2]
1359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1318              		.loc 1 1359 0
 1319 000e 0268     		ldr	r2, [r0]
 1320 0010 9368     		ldr	r3, [r2, #8]
 1321 0012 2331     		adds	r1, r1, #35
 1322 0014 FF31     		adds	r1, r1, #255
 1323 0016 8B43     		bics	r3, r1
 1324 0018 9360     		str	r3, [r2, #8]
1362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1325              		.loc 1 1362 0
 1326 001a 0368     		ldr	r3, [r0]
 1327 001c 9A68     		ldr	r2, [r3, #8]
 1328 001e 5206     		lsls	r2, r2, #25
 1329 0020 0BD5     		bpl	.L97
1364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1330              		.loc 1 1364 0
 1331 0022 9A68     		ldr	r2, [r3, #8]
 1332 0024 3F31     		adds	r1, r1, #63
 1333 0026 8A43     		bics	r2, r1
 1334 0028 9A60     		str	r2, [r3, #8]
1367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1335              		.loc 1 1367 0
 1336 002a 436E     		ldr	r3, [r0, #100]
 1337 002c 002B     		cmp	r3, #0
 1338 002e 04D0     		beq	.L97
1371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1339              		.loc 1 1371 0
 1340 0030 0022     		movs	r2, #0
 1341 0032 5A63     		str	r2, [r3, #52]
1373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 1342              		.loc 1 1373 0
 1343 0034 406E     		ldr	r0, [r0, #100]
 1344              	.LVL96:
 1345 0036 FFF7FEFF 		bl	HAL_DMA_Abort
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 70


 1346              	.LVL97:
 1347              	.L97:
1378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1348              		.loc 1 1378 0
 1349 003a 0022     		movs	r2, #0
 1350 003c 5A23     		movs	r3, #90
 1351 003e E252     		strh	r2, [r4, r3]
1381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1352              		.loc 1 1381 0
 1353 0040 2368     		ldr	r3, [r4]
 1354 0042 0F32     		adds	r2, r2, #15
 1355 0044 1A62     		str	r2, [r3, #32]
1384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1356              		.loc 1 1384 0
 1357 0046 1132     		adds	r2, r2, #17
 1358 0048 6A23     		movs	r3, #106
 1359 004a E254     		strb	r2, [r4, r3]
1387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1360              		.loc 1 1387 0
 1361 004c 0020     		movs	r0, #0
 1362              		@ sp needed
 1363              	.LVL98:
 1364 004e 10BD     		pop	{r4, pc}
 1365              	.L99:
 1366              		.align	2
 1367              	.L98:
 1368 0050 DFFEFFFF 		.word	-289
 1369              		.cfi_endproc
 1370              	.LFE52:
 1372              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 1373              		.align	1
 1374              		.weak	HAL_UART_TxCpltCallback
 1375              		.syntax unified
 1376              		.code	16
 1377              		.thumb_func
 1378              		.fpu softvfp
 1380              	HAL_UART_TxCpltCallback:
 1381              	.LFB57:
1811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1382              		.loc 1 1811 0
 1383              		.cfi_startproc
 1384              		@ args = 0, pretend = 0, frame = 0
 1385              		@ frame_needed = 0, uses_anonymous_args = 0
 1386              		@ link register save eliminated.
 1387              	.LVL99:
1818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1388              		.loc 1 1818 0
 1389              		@ sp needed
 1390 0000 7047     		bx	lr
 1391              		.cfi_endproc
 1392              	.LFE57:
 1394              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 1395              		.align	1
 1396              		.syntax unified
 1397              		.code	16
 1398              		.thumb_func
 1399              		.fpu softvfp
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 71


 1401              	UART_DMATransmitCplt:
 1402              	.LFB78:
2405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DMA UART transmit process complete callback.
2409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param hdma DMA handle.
2410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
2413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 1403              		.loc 1 2413 0
 1404              		.cfi_startproc
 1405              		@ args = 0, pretend = 0, frame = 0
 1406              		@ frame_needed = 0, uses_anonymous_args = 0
 1407              	.LVL100:
 1408 0000 10B5     		push	{r4, lr}
 1409              	.LCFI9:
 1410              		.cfi_def_cfa_offset 8
 1411              		.cfi_offset 4, -8
 1412              		.cfi_offset 14, -4
2414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1413              		.loc 1 2414 0
 1414 0002 436A     		ldr	r3, [r0, #36]
 1415              	.LVL101:
2415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
2416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DMA Normal mode */
2417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ( HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC) )
 1416              		.loc 1 2417 0
 1417 0004 0268     		ldr	r2, [r0]
 1418 0006 1268     		ldr	r2, [r2]
 1419 0008 9206     		lsls	r2, r2, #26
 1420 000a 0DD4     		bmi	.L102
2418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = 0;
 1421              		.loc 1 2419 0
 1422 000c 0021     		movs	r1, #0
 1423 000e 5222     		movs	r2, #82
 1424 0010 9952     		strh	r1, [r3, r2]
2420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by resetting the DMAT bit
2422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        in the UART CR3 register */
2423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1425              		.loc 1 2423 0
 1426 0012 1968     		ldr	r1, [r3]
 1427 0014 8A68     		ldr	r2, [r1, #8]
 1428 0016 8020     		movs	r0, #128
 1429              	.LVL102:
 1430 0018 8243     		bics	r2, r0
 1431 001a 8A60     		str	r2, [r1, #8]
2424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
2426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 1432              		.loc 1 2426 0
 1433 001c 1A68     		ldr	r2, [r3]
 1434 001e 1368     		ldr	r3, [r2]
 1435              	.LVL103:
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 72


 1436 0020 4021     		movs	r1, #64
 1437 0022 0B43     		orrs	r3, r1
 1438 0024 1360     		str	r3, [r2]
 1439              	.L101:
2427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DMA Circular mode */
2429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
2430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
2432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1440              		.loc 1 2434 0
 1441              		@ sp needed
 1442 0026 10BD     		pop	{r4, pc}
 1443              	.LVL104:
 1444              	.L102:
2431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 1445              		.loc 1 2431 0
 1446 0028 1800     		movs	r0, r3
 1447              	.LVL105:
 1448 002a FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 1449              	.LVL106:
 1450              		.loc 1 2434 0
 1451 002e FAE7     		b	.L101
 1452              		.cfi_endproc
 1453              	.LFE78:
 1455              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 1456              		.align	1
 1457              		.weak	HAL_UART_TxHalfCpltCallback
 1458              		.syntax unified
 1459              		.code	16
 1460              		.thumb_func
 1461              		.fpu softvfp
 1463              	HAL_UART_TxHalfCpltCallback:
 1464              	.LFB58:
1826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1465              		.loc 1 1826 0
 1466              		.cfi_startproc
 1467              		@ args = 0, pretend = 0, frame = 0
 1468              		@ frame_needed = 0, uses_anonymous_args = 0
 1469              		@ link register save eliminated.
 1470              	.LVL107:
1833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1471              		.loc 1 1833 0
 1472              		@ sp needed
 1473 0000 7047     		bx	lr
 1474              		.cfi_endproc
 1475              	.LFE58:
 1477              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 1478              		.align	1
 1479              		.syntax unified
 1480              		.code	16
 1481              		.thumb_func
 1482              		.fpu softvfp
 1484              	UART_DMATxHalfCplt:
 1485              	.LFB79:
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 73


2435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback.
2438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param hdma DMA handle.
2439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
2442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 1486              		.loc 1 2442 0
 1487              		.cfi_startproc
 1488              		@ args = 0, pretend = 0, frame = 0
 1489              		@ frame_needed = 0, uses_anonymous_args = 0
 1490              	.LVL108:
 1491 0000 10B5     		push	{r4, lr}
 1492              	.LCFI10:
 1493              		.cfi_def_cfa_offset 8
 1494              		.cfi_offset 4, -8
 1495              		.cfi_offset 14, -4
2443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1496              		.loc 1 2443 0
 1497 0002 406A     		ldr	r0, [r0, #36]
 1498              	.LVL109:
2444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
 1499              		.loc 1 2445 0
 1500 0004 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
 1501              	.LVL110:
2446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1502              		.loc 1 2446 0
 1503              		@ sp needed
 1504 0008 10BD     		pop	{r4, pc}
 1505              		.cfi_endproc
 1506              	.LFE79:
 1508              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 1509              		.align	1
 1510              		.weak	HAL_UART_RxCpltCallback
 1511              		.syntax unified
 1512              		.code	16
 1513              		.thumb_func
 1514              		.fpu softvfp
 1516              	HAL_UART_RxCpltCallback:
 1517              	.LFB59:
1841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1518              		.loc 1 1841 0
 1519              		.cfi_startproc
 1520              		@ args = 0, pretend = 0, frame = 0
 1521              		@ frame_needed = 0, uses_anonymous_args = 0
 1522              		@ link register save eliminated.
 1523              	.LVL111:
1848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1524              		.loc 1 1848 0
 1525              		@ sp needed
 1526 0000 7047     		bx	lr
 1527              		.cfi_endproc
 1528              	.LFE59:
 1530              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 1531              		.align	1
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 74


 1532              		.syntax unified
 1533              		.code	16
 1534              		.thumb_func
 1535              		.fpu softvfp
 1537              	UART_DMAReceiveCplt:
 1538              	.LFB80:
2447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DMA UART receive process complete callback.
2450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param hdma DMA handle.
2451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
2454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 1539              		.loc 1 2454 0
 1540              		.cfi_startproc
 1541              		@ args = 0, pretend = 0, frame = 0
 1542              		@ frame_needed = 0, uses_anonymous_args = 0
 1543              	.LVL112:
 1544 0000 10B5     		push	{r4, lr}
 1545              	.LCFI11:
 1546              		.cfi_def_cfa_offset 8
 1547              		.cfi_offset 4, -8
 1548              		.cfi_offset 14, -4
2455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1549              		.loc 1 2455 0
 1550 0002 436A     		ldr	r3, [r0, #36]
 1551              	.LVL113:
2456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DMA Normal mode */
2458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ( HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC) )
 1552              		.loc 1 2458 0
 1553 0004 0268     		ldr	r2, [r0]
 1554 0006 1268     		ldr	r2, [r2]
 1555 0008 9206     		lsls	r2, r2, #26
 1556 000a 15D4     		bmi	.L108
2459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = 0U;
 1557              		.loc 1 2460 0
 1558 000c 0021     		movs	r1, #0
 1559 000e 5A22     		movs	r2, #90
 1560 0010 9952     		strh	r1, [r3, r2]
2461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
2463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 1561              		.loc 1 2463 0
 1562 0012 1968     		ldr	r1, [r3]
 1563 0014 0A68     		ldr	r2, [r1]
 1564 0016 0A48     		ldr	r0, .L109
 1565              	.LVL114:
 1566 0018 0240     		ands	r2, r0
 1567 001a 0A60     		str	r2, [r1]
2464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1568              		.loc 1 2464 0
 1569 001c 1968     		ldr	r1, [r3]
 1570 001e 8A68     		ldr	r2, [r1, #8]
 1571 0020 0330     		adds	r0, r0, #3
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 75


 1572 0022 FF30     		adds	r0, r0, #255
 1573 0024 8243     		bics	r2, r0
 1574 0026 8A60     		str	r2, [r1, #8]
2465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
2467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        in the UART CR3 register */
2468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 1575              		.loc 1 2468 0
 1576 0028 1968     		ldr	r1, [r3]
 1577 002a 8A68     		ldr	r2, [r1, #8]
 1578 002c 3F30     		adds	r0, r0, #63
 1579 002e 8243     		bics	r2, r0
 1580 0030 8A60     		str	r2, [r1, #8]
2469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
2471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 1581              		.loc 1 2471 0
 1582 0032 2021     		movs	r1, #32
 1583 0034 6A22     		movs	r2, #106
 1584 0036 9954     		strb	r1, [r3, r2]
 1585              	.L108:
2472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
 1586              		.loc 1 2474 0
 1587 0038 1800     		movs	r0, r3
 1588 003a FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 1589              	.LVL115:
2475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1590              		.loc 1 2475 0
 1591              		@ sp needed
 1592 003e 10BD     		pop	{r4, pc}
 1593              	.L110:
 1594              		.align	2
 1595              	.L109:
 1596 0040 FFFEFFFF 		.word	-257
 1597              		.cfi_endproc
 1598              	.LFE80:
 1600              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 1601              		.align	1
 1602              		.weak	HAL_UART_RxHalfCpltCallback
 1603              		.syntax unified
 1604              		.code	16
 1605              		.thumb_func
 1606              		.fpu softvfp
 1608              	HAL_UART_RxHalfCpltCallback:
 1609              	.LFB60:
1856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1610              		.loc 1 1856 0
 1611              		.cfi_startproc
 1612              		@ args = 0, pretend = 0, frame = 0
 1613              		@ frame_needed = 0, uses_anonymous_args = 0
 1614              		@ link register save eliminated.
 1615              	.LVL116:
1863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1616              		.loc 1 1863 0
 1617              		@ sp needed
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 76


 1618 0000 7047     		bx	lr
 1619              		.cfi_endproc
 1620              	.LFE60:
 1622              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 1623              		.align	1
 1624              		.syntax unified
 1625              		.code	16
 1626              		.thumb_func
 1627              		.fpu softvfp
 1629              	UART_DMARxHalfCplt:
 1630              	.LFB81:
2476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback.
2479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param hdma DMA handle.
2480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
2483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 1631              		.loc 1 2483 0
 1632              		.cfi_startproc
 1633              		@ args = 0, pretend = 0, frame = 0
 1634              		@ frame_needed = 0, uses_anonymous_args = 0
 1635              	.LVL117:
 1636 0000 10B5     		push	{r4, lr}
 1637              	.LCFI12:
 1638              		.cfi_def_cfa_offset 8
 1639              		.cfi_offset 4, -8
 1640              		.cfi_offset 14, -4
2484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1641              		.loc 1 2484 0
 1642 0002 406A     		ldr	r0, [r0, #36]
 1643              	.LVL118:
2485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart);
 1644              		.loc 1 2486 0
 1645 0004 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 1646              	.LVL119:
2487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1647              		.loc 1 2487 0
 1648              		@ sp needed
 1649 0008 10BD     		pop	{r4, pc}
 1650              		.cfi_endproc
 1651              	.LFE81:
 1653              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 1654              		.align	1
 1655              		.weak	HAL_UART_ErrorCallback
 1656              		.syntax unified
 1657              		.code	16
 1658              		.thumb_func
 1659              		.fpu softvfp
 1661              	HAL_UART_ErrorCallback:
 1662              	.LFB61:
1871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1663              		.loc 1 1871 0
 1664              		.cfi_startproc
 1665              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 77


 1666              		@ frame_needed = 0, uses_anonymous_args = 0
 1667              		@ link register save eliminated.
 1668              	.LVL120:
1878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1669              		.loc 1 1878 0
 1670              		@ sp needed
 1671 0000 7047     		bx	lr
 1672              		.cfi_endproc
 1673              	.LFE61:
 1675              		.section	.text.UART_DMAError,"ax",%progbits
 1676              		.align	1
 1677              		.syntax unified
 1678              		.code	16
 1679              		.thumb_func
 1680              		.fpu softvfp
 1682              	UART_DMAError:
 1683              	.LFB82:
2488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DMA UART communication error callback.
2491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param hdma DMA handle.
2492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
2495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 1684              		.loc 1 2495 0
 1685              		.cfi_startproc
 1686              		@ args = 0, pretend = 0, frame = 0
 1687              		@ frame_needed = 0, uses_anonymous_args = 0
 1688              	.LVL121:
 1689 0000 10B5     		push	{r4, lr}
 1690              	.LCFI13:
 1691              		.cfi_def_cfa_offset 8
 1692              		.cfi_offset 4, -8
 1693              		.cfi_offset 14, -4
2496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1694              		.loc 1 2496 0
 1695 0002 446A     		ldr	r4, [r0, #36]
 1696              	.LVL122:
2497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
2499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (  (huart->gState == HAL_UART_STATE_BUSY_TX)
 1697              		.loc 1 2499 0
 1698 0004 6923     		movs	r3, #105
 1699 0006 E35C     		ldrb	r3, [r4, r3]
 1700 0008 212B     		cmp	r3, #33
 1701 000a 0BD0     		beq	.L117
 1702              	.LVL123:
 1703              	.L115:
2500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       &&(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) )
2501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = 0U;
2503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndTxTransfer(huart);
2504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
2507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (  (huart->RxState == HAL_UART_STATE_BUSY_RX)
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 78


 1704              		.loc 1 2507 0
 1705 000c 6A23     		movs	r3, #106
 1706 000e E35C     		ldrb	r3, [r4, r3]
 1707 0010 222B     		cmp	r3, #34
 1708 0012 12D0     		beq	.L118
 1709              	.L116:
2508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       &&(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) )
2509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = 0U;
2511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndRxTransfer(huart);
2512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
 1710              		.loc 1 2514 0
 1711 0014 E36E     		ldr	r3, [r4, #108]
 1712 0016 1022     		movs	r2, #16
 1713 0018 1343     		orrs	r3, r2
 1714 001a E366     		str	r3, [r4, #108]
2515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 1715              		.loc 1 2515 0
 1716 001c 2000     		movs	r0, r4
 1717 001e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 1718              	.LVL124:
2516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1719              		.loc 1 2516 0
 1720              		@ sp needed
 1721              	.LVL125:
 1722 0022 10BD     		pop	{r4, pc}
 1723              	.LVL126:
 1724              	.L117:
2500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1725              		.loc 1 2500 0
 1726 0024 2368     		ldr	r3, [r4]
 1727 0026 9B68     		ldr	r3, [r3, #8]
 1728 0028 1B06     		lsls	r3, r3, #24
 1729 002a EFD5     		bpl	.L115
2502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 1730              		.loc 1 2502 0
 1731 002c 0022     		movs	r2, #0
 1732 002e 5223     		movs	r3, #82
 1733 0030 E252     		strh	r2, [r4, r3]
2503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 1734              		.loc 1 2503 0
 1735 0032 2000     		movs	r0, r4
 1736              	.LVL127:
 1737 0034 FFF7FEFF 		bl	UART_EndTxTransfer
 1738              	.LVL128:
 1739 0038 E8E7     		b	.L115
 1740              	.L118:
2508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1741              		.loc 1 2508 0
 1742 003a 2368     		ldr	r3, [r4]
 1743 003c 9B68     		ldr	r3, [r3, #8]
 1744 003e 5B06     		lsls	r3, r3, #25
 1745 0040 E8D5     		bpl	.L116
2510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 1746              		.loc 1 2510 0
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 79


 1747 0042 0022     		movs	r2, #0
 1748 0044 5A23     		movs	r3, #90
 1749 0046 E252     		strh	r2, [r4, r3]
2511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 1750              		.loc 1 2511 0
 1751 0048 2000     		movs	r0, r4
 1752 004a FFF7FEFF 		bl	UART_EndRxTransfer
 1753              	.LVL129:
 1754 004e E1E7     		b	.L116
 1755              		.cfi_endproc
 1756              	.LFE82:
 1758              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 1759              		.align	1
 1760              		.syntax unified
 1761              		.code	16
 1762              		.thumb_func
 1763              		.fpu softvfp
 1765              	UART_DMAAbortOnError:
 1766              	.LFB83:
2517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
2520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
2521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  hdma DMA handle.
2522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
2525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 1767              		.loc 1 2525 0
 1768              		.cfi_startproc
 1769              		@ args = 0, pretend = 0, frame = 0
 1770              		@ frame_needed = 0, uses_anonymous_args = 0
 1771              	.LVL130:
 1772 0000 10B5     		push	{r4, lr}
 1773              	.LCFI14:
 1774              		.cfi_def_cfa_offset 8
 1775              		.cfi_offset 4, -8
 1776              		.cfi_offset 14, -4
2526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1777              		.loc 1 2526 0
 1778 0002 406A     		ldr	r0, [r0, #36]
 1779              	.LVL131:
2527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
 1780              		.loc 1 2527 0
 1781 0004 0023     		movs	r3, #0
 1782 0006 5A22     		movs	r2, #90
 1783 0008 8352     		strh	r3, [r0, r2]
2528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U;
 1784              		.loc 1 2528 0
 1785 000a 083A     		subs	r2, r2, #8
 1786 000c 8352     		strh	r3, [r0, r2]
2529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 1787              		.loc 1 2530 0
 1788 000e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 1789              	.LVL132:
2531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 80


 1790              		.loc 1 2531 0
 1791              		@ sp needed
 1792 0012 10BD     		pop	{r4, pc}
 1793              		.cfi_endproc
 1794              	.LFE83:
 1796              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 1797              		.align	1
 1798              		.weak	HAL_UART_AbortCpltCallback
 1799              		.syntax unified
 1800              		.code	16
 1801              		.thumb_func
 1802              		.fpu softvfp
 1804              	HAL_UART_AbortCpltCallback:
 1805              	.LFB62:
1886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1806              		.loc 1 1886 0
 1807              		.cfi_startproc
 1808              		@ args = 0, pretend = 0, frame = 0
 1809              		@ frame_needed = 0, uses_anonymous_args = 0
 1810              		@ link register save eliminated.
 1811              	.LVL133:
1893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1812              		.loc 1 1893 0
 1813              		@ sp needed
 1814 0000 7047     		bx	lr
 1815              		.cfi_endproc
 1816              	.LFE62:
 1818              		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 1819              		.align	1
 1820              		.global	HAL_UART_Abort_IT
 1821              		.syntax unified
 1822              		.code	16
 1823              		.thumb_func
 1824              		.fpu softvfp
 1826              	HAL_UART_Abort_IT:
 1827              	.LFB53:
1404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 1828              		.loc 1 1404 0
 1829              		.cfi_startproc
 1830              		@ args = 0, pretend = 0, frame = 0
 1831              		@ frame_needed = 0, uses_anonymous_args = 0
 1832              	.LVL134:
 1833 0000 10B5     		push	{r4, lr}
 1834              	.LCFI15:
 1835              		.cfi_def_cfa_offset 8
 1836              		.cfi_offset 4, -8
 1837              		.cfi_offset 14, -4
 1838 0002 0400     		movs	r4, r0
 1839              	.LVL135:
1408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1840              		.loc 1 1408 0
 1841 0004 0268     		ldr	r2, [r0]
 1842 0006 1368     		ldr	r3, [r2]
 1843 0008 3249     		ldr	r1, .L134
 1844 000a 0B40     		ands	r3, r1
 1845 000c 1360     		str	r3, [r2]
1409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 81


 1846              		.loc 1 1409 0
 1847 000e 0268     		ldr	r2, [r0]
 1848 0010 9368     		ldr	r3, [r2, #8]
 1849 0012 E331     		adds	r1, r1, #227
 1850 0014 FF31     		adds	r1, r1, #255
 1851 0016 8B43     		bics	r3, r1
 1852 0018 9360     		str	r3, [r2, #8]
1414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1853              		.loc 1 1414 0
 1854 001a 036E     		ldr	r3, [r0, #96]
 1855 001c 002B     		cmp	r3, #0
 1856 001e 05D0     		beq	.L122
1418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1857              		.loc 1 1418 0
 1858 0020 0268     		ldr	r2, [r0]
 1859 0022 9268     		ldr	r2, [r2, #8]
 1860 0024 1206     		lsls	r2, r2, #24
 1861 0026 1ED5     		bpl	.L123
1420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 1862              		.loc 1 1420 0
 1863 0028 2B4A     		ldr	r2, .L134+4
 1864 002a 5A63     		str	r2, [r3, #52]
 1865              	.L122:
1428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1866              		.loc 1 1428 0
 1867 002c 636E     		ldr	r3, [r4, #100]
 1868 002e 002B     		cmp	r3, #0
 1869 0030 05D0     		beq	.L124
1432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1870              		.loc 1 1432 0
 1871 0032 2268     		ldr	r2, [r4]
 1872 0034 9268     		ldr	r2, [r2, #8]
 1873 0036 5206     		lsls	r2, r2, #25
 1874 0038 18D5     		bpl	.L125
1434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 1875              		.loc 1 1434 0
 1876 003a 284A     		ldr	r2, .L134+8
 1877 003c 5A63     		str	r2, [r3, #52]
 1878              	.L124:
1443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1879              		.loc 1 1443 0
 1880 003e 2368     		ldr	r3, [r4]
 1881 0040 9A68     		ldr	r2, [r3, #8]
 1882 0042 1206     		lsls	r2, r2, #24
 1883 0044 15D5     		bpl	.L129
1446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1884              		.loc 1 1446 0
 1885 0046 9A68     		ldr	r2, [r3, #8]
 1886 0048 8021     		movs	r1, #128
 1887 004a 8A43     		bics	r2, r1
 1888 004c 9A60     		str	r2, [r3, #8]
1449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1889              		.loc 1 1449 0
 1890 004e 206E     		ldr	r0, [r4, #96]
 1891              	.LVL136:
 1892 0050 0028     		cmp	r0, #0
 1893 0052 26D0     		beq	.L130
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 82


1455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 1894              		.loc 1 1455 0
 1895 0054 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 1896              	.LVL137:
 1897 0058 0028     		cmp	r0, #0
 1898 005a 24D0     		beq	.L131
1457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 1899              		.loc 1 1457 0
 1900 005c 236E     		ldr	r3, [r4, #96]
 1901 005e 0022     		movs	r2, #0
 1902 0060 5A63     		str	r2, [r3, #52]
1405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 1903              		.loc 1 1405 0
 1904 0062 0132     		adds	r2, r2, #1
 1905 0064 06E0     		b	.L126
 1906              	.LVL138:
 1907              	.L123:
1424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 1908              		.loc 1 1424 0
 1909 0066 0022     		movs	r2, #0
 1910 0068 5A63     		str	r2, [r3, #52]
 1911 006a DFE7     		b	.L122
 1912              	.L125:
1438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 1913              		.loc 1 1438 0
 1914 006c 0022     		movs	r2, #0
 1915 006e 5A63     		str	r2, [r3, #52]
 1916 0070 E5E7     		b	.L124
 1917              	.L129:
1405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 1918              		.loc 1 1405 0
 1919 0072 0122     		movs	r2, #1
 1920              	.LVL139:
 1921              	.L126:
1467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1922              		.loc 1 1467 0
 1923 0074 2368     		ldr	r3, [r4]
 1924 0076 9968     		ldr	r1, [r3, #8]
 1925 0078 4906     		lsls	r1, r1, #25
 1926 007a 0ED5     		bpl	.L127
1469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1927              		.loc 1 1469 0
 1928 007c 9968     		ldr	r1, [r3, #8]
 1929 007e 4020     		movs	r0, #64
 1930 0080 8143     		bics	r1, r0
 1931 0082 9960     		str	r1, [r3, #8]
1472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1932              		.loc 1 1472 0
 1933 0084 606E     		ldr	r0, [r4, #100]
 1934 0086 0028     		cmp	r0, #0
 1935 0088 07D0     		beq	.L127
1478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 1936              		.loc 1 1478 0
 1937 008a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 1938              	.LVL140:
 1939 008e 0028     		cmp	r0, #0
 1940 0090 0BD0     		beq	.L132
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 83


1480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         abortcplt = 1U;
 1941              		.loc 1 1480 0
 1942 0092 636E     		ldr	r3, [r4, #100]
 1943 0094 0022     		movs	r2, #0
 1944 0096 5A63     		str	r2, [r3, #52]
 1945              	.LVL141:
1481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 1946              		.loc 1 1481 0
 1947 0098 0132     		adds	r2, r2, #1
 1948              	.LVL142:
 1949              	.L127:
1491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1950              		.loc 1 1491 0
 1951 009a 012A     		cmp	r2, #1
 1952 009c 07D0     		beq	.L133
 1953              	.LVL143:
 1954              	.L128:
1512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1955              		.loc 1 1512 0
 1956 009e 0020     		movs	r0, #0
 1957              		@ sp needed
 1958              	.LVL144:
 1959 00a0 10BD     		pop	{r4, pc}
 1960              	.LVL145:
 1961              	.L130:
1405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 1962              		.loc 1 1405 0
 1963 00a2 0122     		movs	r2, #1
 1964 00a4 E6E7     		b	.L126
 1965              	.L131:
1461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 1966              		.loc 1 1461 0
 1967 00a6 0022     		movs	r2, #0
 1968 00a8 E4E7     		b	.L126
 1969              	.LVL146:
 1970              	.L132:
1485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 1971              		.loc 1 1485 0
 1972 00aa 0022     		movs	r2, #0
 1973 00ac F5E7     		b	.L127
 1974              	.LVL147:
 1975              	.L133:
1494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = 0U;
 1976              		.loc 1 1494 0
 1977 00ae 0023     		movs	r3, #0
 1978 00b0 5132     		adds	r2, r2, #81
 1979              	.LVL148:
 1980 00b2 A352     		strh	r3, [r4, r2]
1495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1981              		.loc 1 1495 0
 1982 00b4 0832     		adds	r2, r2, #8
 1983              	.LVL149:
 1984 00b6 A352     		strh	r3, [r4, r2]
1498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1985              		.loc 1 1498 0
 1986 00b8 E366     		str	r3, [r4, #108]
1501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 84


 1987              		.loc 1 1501 0
 1988 00ba 2368     		ldr	r3, [r4]
 1989 00bc 4B3A     		subs	r2, r2, #75
 1990              	.LVL150:
 1991 00be 1A62     		str	r2, [r3, #32]
1504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 1992              		.loc 1 1504 0
 1993 00c0 2023     		movs	r3, #32
 1994 00c2 5A32     		adds	r2, r2, #90
 1995              	.LVL151:
 1996 00c4 A354     		strb	r3, [r4, r2]
1505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1997              		.loc 1 1505 0
 1998 00c6 0132     		adds	r2, r2, #1
 1999              	.LVL152:
 2000 00c8 A354     		strb	r3, [r4, r2]
1508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 2001              		.loc 1 1508 0
 2002 00ca 2000     		movs	r0, r4
 2003 00cc FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 2004              	.LVL153:
 2005 00d0 E5E7     		b	.L128
 2006              	.L135:
 2007 00d2 C046     		.align	2
 2008              	.L134:
 2009 00d4 1FFEFFFF 		.word	-481
 2010 00d8 00000000 		.word	UART_DMATxAbortCallback
 2011 00dc 00000000 		.word	UART_DMARxAbortCallback
 2012              		.cfi_endproc
 2013              	.LFE53:
 2015              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 2016              		.align	1
 2017              		.syntax unified
 2018              		.code	16
 2019              		.thumb_func
 2020              		.fpu softvfp
 2022              	UART_DMARxAbortCallback:
 2023              	.LFB85:
2532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
2535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
2536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
2538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  hdma DMA handle.
2539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
2542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef* )(hdma->Parent);
2544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
2545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
2546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->hdmarx != NULL)
2549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmarx->XferAbortCallback != NULL)
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 85


2551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return;
2553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
2556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U;
2558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
2559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset errorCode */
2561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
2564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
2565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call user Abort complete callback */
2571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
2572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
2577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
2578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
2580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  hdma DMA handle.
2581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
2584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 2024              		.loc 1 2584 0
 2025              		.cfi_startproc
 2026              		@ args = 0, pretend = 0, frame = 0
 2027              		@ frame_needed = 0, uses_anonymous_args = 0
 2028              	.LVL154:
 2029 0000 10B5     		push	{r4, lr}
 2030              	.LCFI16:
 2031              		.cfi_def_cfa_offset 8
 2032              		.cfi_offset 4, -8
 2033              		.cfi_offset 14, -4
2585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef* )(hdma->Parent);
 2034              		.loc 1 2585 0
 2035 0002 406A     		ldr	r0, [r0, #36]
 2036              	.LVL155:
2586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
2587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
 2037              		.loc 1 2587 0
 2038 0004 436E     		ldr	r3, [r0, #100]
 2039 0006 0022     		movs	r2, #0
 2040 0008 5A63     		str	r2, [r3, #52]
2588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->hdmatx != NULL)
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 86


 2041              		.loc 1 2590 0
 2042 000a 036E     		ldr	r3, [r0, #96]
 2043 000c 002B     		cmp	r3, #0
 2044 000e 03D0     		beq	.L137
2591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmatx->XferAbortCallback != NULL)
 2045              		.loc 1 2592 0
 2046 0010 5B6B     		ldr	r3, [r3, #52]
 2047 0012 002B     		cmp	r3, #0
 2048 0014 00D0     		beq	.L137
 2049              	.LVL156:
 2050              	.L136:
2593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return;
2595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
2598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U;
2600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
2601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset errorCode */
2603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
2606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
2607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call user Abort complete callback */
2613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
2614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2051              		.loc 1 2614 0
 2052              		@ sp needed
 2053 0016 10BD     		pop	{r4, pc}
 2054              	.LVL157:
 2055              	.L137:
2599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2056              		.loc 1 2599 0
 2057 0018 0023     		movs	r3, #0
 2058 001a 5222     		movs	r2, #82
 2059 001c 8352     		strh	r3, [r0, r2]
2600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2060              		.loc 1 2600 0
 2061 001e 0832     		adds	r2, r2, #8
 2062 0020 8352     		strh	r3, [r0, r2]
2603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2063              		.loc 1 2603 0
 2064 0022 C366     		str	r3, [r0, #108]
2606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2065              		.loc 1 2606 0
 2066 0024 0368     		ldr	r3, [r0]
 2067 0026 4B3A     		subs	r2, r2, #75
 2068 0028 1A62     		str	r2, [r3, #32]
2609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 87


 2069              		.loc 1 2609 0
 2070 002a 2023     		movs	r3, #32
 2071 002c 5A32     		adds	r2, r2, #90
 2072 002e 8354     		strb	r3, [r0, r2]
2610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2073              		.loc 1 2610 0
 2074 0030 0132     		adds	r2, r2, #1
 2075 0032 8354     		strb	r3, [r0, r2]
2613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2076              		.loc 1 2613 0
 2077 0034 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 2078              	.LVL158:
 2079 0038 EDE7     		b	.L136
 2080              		.cfi_endproc
 2081              	.LFE85:
 2083              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 2084              		.align	1
 2085              		.syntax unified
 2086              		.code	16
 2087              		.thumb_func
 2088              		.fpu softvfp
 2090              	UART_DMATxAbortCallback:
 2091              	.LFB84:
2542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef* )(hdma->Parent);
 2092              		.loc 1 2542 0
 2093              		.cfi_startproc
 2094              		@ args = 0, pretend = 0, frame = 0
 2095              		@ frame_needed = 0, uses_anonymous_args = 0
 2096              	.LVL159:
 2097 0000 10B5     		push	{r4, lr}
 2098              	.LCFI17:
 2099              		.cfi_def_cfa_offset 8
 2100              		.cfi_offset 4, -8
 2101              		.cfi_offset 14, -4
2543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 2102              		.loc 1 2543 0
 2103 0002 406A     		ldr	r0, [r0, #36]
 2104              	.LVL160:
2545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2105              		.loc 1 2545 0
 2106 0004 036E     		ldr	r3, [r0, #96]
 2107 0006 0022     		movs	r2, #0
 2108 0008 5A63     		str	r2, [r3, #52]
2548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2109              		.loc 1 2548 0
 2110 000a 436E     		ldr	r3, [r0, #100]
 2111 000c 002B     		cmp	r3, #0
 2112 000e 03D0     		beq	.L140
2550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2113              		.loc 1 2550 0
 2114 0010 5B6B     		ldr	r3, [r3, #52]
 2115 0012 002B     		cmp	r3, #0
 2116 0014 00D0     		beq	.L140
 2117              	.LVL161:
 2118              	.L139:
2572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2119              		.loc 1 2572 0
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 88


 2120              		@ sp needed
 2121 0016 10BD     		pop	{r4, pc}
 2122              	.LVL162:
 2123              	.L140:
2557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2124              		.loc 1 2557 0
 2125 0018 0023     		movs	r3, #0
 2126 001a 5222     		movs	r2, #82
 2127 001c 8352     		strh	r3, [r0, r2]
2558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2128              		.loc 1 2558 0
 2129 001e 0832     		adds	r2, r2, #8
 2130 0020 8352     		strh	r3, [r0, r2]
2561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2131              		.loc 1 2561 0
 2132 0022 C366     		str	r3, [r0, #108]
2564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2133              		.loc 1 2564 0
 2134 0024 0368     		ldr	r3, [r0]
 2135 0026 4B3A     		subs	r2, r2, #75
 2136 0028 1A62     		str	r2, [r3, #32]
2567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2137              		.loc 1 2567 0
 2138 002a 2023     		movs	r3, #32
 2139 002c 5A32     		adds	r2, r2, #90
 2140 002e 8354     		strb	r3, [r0, r2]
2568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2141              		.loc 1 2568 0
 2142 0030 0132     		adds	r2, r2, #1
 2143 0032 8354     		strb	r3, [r0, r2]
2571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2144              		.loc 1 2571 0
 2145 0034 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 2146              	.LVL163:
 2147 0038 EDE7     		b	.L139
 2148              		.cfi_endproc
 2149              	.LFE84:
 2151              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 2152              		.align	1
 2153              		.weak	HAL_UART_AbortTransmitCpltCallback
 2154              		.syntax unified
 2155              		.code	16
 2156              		.thumb_func
 2157              		.fpu softvfp
 2159              	HAL_UART_AbortTransmitCpltCallback:
 2160              	.LFB63:
1901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2161              		.loc 1 1901 0
 2162              		.cfi_startproc
 2163              		@ args = 0, pretend = 0, frame = 0
 2164              		@ frame_needed = 0, uses_anonymous_args = 0
 2165              		@ link register save eliminated.
 2166              	.LVL164:
1908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2167              		.loc 1 1908 0
 2168              		@ sp needed
 2169 0000 7047     		bx	lr
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 89


 2170              		.cfi_endproc
 2171              	.LFE63:
 2173              		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 2174              		.align	1
 2175              		.global	HAL_UART_AbortTransmit_IT
 2176              		.syntax unified
 2177              		.code	16
 2178              		.thumb_func
 2179              		.fpu softvfp
 2181              	HAL_UART_AbortTransmit_IT:
 2182              	.LFB54:
1529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 2183              		.loc 1 1529 0
 2184              		.cfi_startproc
 2185              		@ args = 0, pretend = 0, frame = 0
 2186              		@ frame_needed = 0, uses_anonymous_args = 0
 2187              	.LVL165:
 2188 0000 10B5     		push	{r4, lr}
 2189              	.LCFI18:
 2190              		.cfi_def_cfa_offset 8
 2191              		.cfi_offset 4, -8
 2192              		.cfi_offset 14, -4
 2193 0002 0400     		movs	r4, r0
1531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2194              		.loc 1 1531 0
 2195 0004 0268     		ldr	r2, [r0]
 2196 0006 1368     		ldr	r3, [r2]
 2197 0008 C021     		movs	r1, #192
 2198 000a 8B43     		bics	r3, r1
 2199 000c 1360     		str	r3, [r2]
1534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2200              		.loc 1 1534 0
 2201 000e 0368     		ldr	r3, [r0]
 2202 0010 9A68     		ldr	r2, [r3, #8]
 2203 0012 1206     		lsls	r2, r2, #24
 2204 0014 1CD5     		bpl	.L144
1536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2205              		.loc 1 1536 0
 2206 0016 9A68     		ldr	r2, [r3, #8]
 2207 0018 4039     		subs	r1, r1, #64
 2208 001a 8A43     		bics	r2, r1
 2209 001c 9A60     		str	r2, [r3, #8]
1539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2210              		.loc 1 1539 0
 2211 001e 036E     		ldr	r3, [r0, #96]
 2212 0020 002B     		cmp	r3, #0
 2213 0022 0CD0     		beq	.L145
1543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2214              		.loc 1 1543 0
 2215 0024 0F4A     		ldr	r2, .L148
 2216 0026 5A63     		str	r2, [r3, #52]
1546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 2217              		.loc 1 1546 0
 2218 0028 006E     		ldr	r0, [r0, #96]
 2219              	.LVL166:
 2220 002a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2221              	.LVL167:
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 90


 2222 002e 0028     		cmp	r0, #0
 2223 0030 01D1     		bne	.L147
 2224              	.L146:
1577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2225              		.loc 1 1577 0
 2226 0032 0020     		movs	r0, #0
 2227              		@ sp needed
 2228              	.LVL168:
 2229 0034 10BD     		pop	{r4, pc}
 2230              	.LVL169:
 2231              	.L147:
1549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 2232              		.loc 1 1549 0
 2233 0036 206E     		ldr	r0, [r4, #96]
 2234 0038 436B     		ldr	r3, [r0, #52]
 2235 003a 9847     		blx	r3
 2236              	.LVL170:
 2237 003c F9E7     		b	.L146
 2238              	.LVL171:
 2239              	.L145:
1555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2240              		.loc 1 1555 0
 2241 003e 0022     		movs	r2, #0
 2242 0040 5223     		movs	r3, #82
 2243 0042 C252     		strh	r2, [r0, r3]
1558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2244              		.loc 1 1558 0
 2245 0044 2032     		adds	r2, r2, #32
 2246 0046 1733     		adds	r3, r3, #23
 2247 0048 C254     		strb	r2, [r0, r3]
1561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 2248              		.loc 1 1561 0
 2249 004a FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2250              	.LVL172:
 2251 004e F0E7     		b	.L146
 2252              	.LVL173:
 2253              	.L144:
1567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2254              		.loc 1 1567 0
 2255 0050 0022     		movs	r2, #0
 2256 0052 5223     		movs	r3, #82
 2257 0054 C252     		strh	r2, [r0, r3]
1570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2258              		.loc 1 1570 0
 2259 0056 2032     		adds	r2, r2, #32
 2260 0058 1733     		adds	r3, r3, #23
 2261 005a C254     		strb	r2, [r0, r3]
1573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 2262              		.loc 1 1573 0
 2263 005c FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2264              	.LVL174:
 2265 0060 E7E7     		b	.L146
 2266              	.L149:
 2267 0062 C046     		.align	2
 2268              	.L148:
 2269 0064 00000000 		.word	UART_DMATxOnlyAbortCallback
 2270              		.cfi_endproc
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 91


 2271              	.LFE54:
 2273              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 2274              		.align	1
 2275              		.syntax unified
 2276              		.code	16
 2277              		.thumb_func
 2278              		.fpu softvfp
 2280              	UART_DMATxOnlyAbortCallback:
 2281              	.LFB86:
2615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
2619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
2620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
2621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
2622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  hdma DMA handle.
2623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 2282              		.loc 1 2626 0
 2283              		.cfi_startproc
 2284              		@ args = 0, pretend = 0, frame = 0
 2285              		@ frame_needed = 0, uses_anonymous_args = 0
 2286              	.LVL175:
 2287 0000 10B5     		push	{r4, lr}
 2288              	.LCFI19:
 2289              		.cfi_def_cfa_offset 8
 2290              		.cfi_offset 4, -8
 2291              		.cfi_offset 14, -4
2627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 2292              		.loc 1 2627 0
 2293 0002 406A     		ldr	r0, [r0, #36]
 2294              	.LVL176:
2628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U;
 2295              		.loc 1 2629 0
 2296 0004 0022     		movs	r2, #0
 2297 0006 5223     		movs	r3, #82
 2298 0008 C252     		strh	r2, [r0, r3]
2630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->gState to Ready */
2632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 2299              		.loc 1 2632 0
 2300 000a 2032     		adds	r2, r2, #32
 2301 000c 1733     		adds	r3, r3, #23
 2302 000e C254     		strb	r2, [r0, r3]
2633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call user Abort complete callback */
2635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
 2303              		.loc 1 2635 0
 2304 0010 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2305              	.LVL177:
2636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2306              		.loc 1 2636 0
 2307              		@ sp needed
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 92


 2308 0014 10BD     		pop	{r4, pc}
 2309              		.cfi_endproc
 2310              	.LFE86:
 2312              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 2313              		.align	1
 2314              		.weak	HAL_UART_AbortReceiveCpltCallback
 2315              		.syntax unified
 2316              		.code	16
 2317              		.thumb_func
 2318              		.fpu softvfp
 2320              	HAL_UART_AbortReceiveCpltCallback:
 2321              	.LFB64:
1916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2322              		.loc 1 1916 0
 2323              		.cfi_startproc
 2324              		@ args = 0, pretend = 0, frame = 0
 2325              		@ frame_needed = 0, uses_anonymous_args = 0
 2326              		@ link register save eliminated.
 2327              	.LVL178:
1923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2328              		.loc 1 1923 0
 2329              		@ sp needed
 2330 0000 7047     		bx	lr
 2331              		.cfi_endproc
 2332              	.LFE64:
 2334              		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 2335              		.align	1
 2336              		.global	HAL_UART_AbortReceive_IT
 2337              		.syntax unified
 2338              		.code	16
 2339              		.thumb_func
 2340              		.fpu softvfp
 2342              	HAL_UART_AbortReceive_IT:
 2343              	.LFB55:
1594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2344              		.loc 1 1594 0
 2345              		.cfi_startproc
 2346              		@ args = 0, pretend = 0, frame = 0
 2347              		@ frame_needed = 0, uses_anonymous_args = 0
 2348              	.LVL179:
 2349 0000 10B5     		push	{r4, lr}
 2350              	.LCFI20:
 2351              		.cfi_def_cfa_offset 8
 2352              		.cfi_offset 4, -8
 2353              		.cfi_offset 14, -4
 2354 0002 0400     		movs	r4, r0
1596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2355              		.loc 1 1596 0
 2356 0004 0268     		ldr	r2, [r0]
 2357 0006 1368     		ldr	r3, [r2]
 2358 0008 1B49     		ldr	r1, .L157
 2359 000a 0B40     		ands	r3, r1
 2360 000c 1360     		str	r3, [r2]
1597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2361              		.loc 1 1597 0
 2362 000e 0268     		ldr	r2, [r0]
 2363 0010 9368     		ldr	r3, [r2, #8]
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 93


 2364 0012 2331     		adds	r1, r1, #35
 2365 0014 FF31     		adds	r1, r1, #255
 2366 0016 8B43     		bics	r3, r1
 2367 0018 9360     		str	r3, [r2, #8]
1600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2368              		.loc 1 1600 0
 2369 001a 0368     		ldr	r3, [r0]
 2370 001c 9A68     		ldr	r2, [r3, #8]
 2371 001e 5206     		lsls	r2, r2, #25
 2372 0020 1FD5     		bpl	.L153
1602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2373              		.loc 1 1602 0
 2374 0022 9A68     		ldr	r2, [r3, #8]
 2375 0024 3F31     		adds	r1, r1, #63
 2376 0026 8A43     		bics	r2, r1
 2377 0028 9A60     		str	r2, [r3, #8]
1605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2378              		.loc 1 1605 0
 2379 002a 436E     		ldr	r3, [r0, #100]
 2380 002c 002B     		cmp	r3, #0
 2381 002e 0CD0     		beq	.L154
1609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2382              		.loc 1 1609 0
 2383 0030 124A     		ldr	r2, .L157+4
 2384 0032 5A63     		str	r2, [r3, #52]
1612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 2385              		.loc 1 1612 0
 2386 0034 406E     		ldr	r0, [r0, #100]
 2387              	.LVL180:
 2388 0036 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2389              	.LVL181:
 2390 003a 0028     		cmp	r0, #0
 2391 003c 01D1     		bne	.L156
 2392              	.L155:
1649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2393              		.loc 1 1649 0
 2394 003e 0020     		movs	r0, #0
 2395              		@ sp needed
 2396              	.LVL182:
 2397 0040 10BD     		pop	{r4, pc}
 2398              	.LVL183:
 2399              	.L156:
1615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 2400              		.loc 1 1615 0
 2401 0042 606E     		ldr	r0, [r4, #100]
 2402 0044 436B     		ldr	r3, [r0, #52]
 2403 0046 9847     		blx	r3
 2404              	.LVL184:
 2405 0048 F9E7     		b	.L155
 2406              	.LVL185:
 2407              	.L154:
1621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2408              		.loc 1 1621 0
 2409 004a 0022     		movs	r2, #0
 2410 004c 5A23     		movs	r3, #90
 2411 004e C252     		strh	r2, [r0, r3]
1624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 94


 2412              		.loc 1 1624 0
 2413 0050 0368     		ldr	r3, [r0]
 2414 0052 0F32     		adds	r2, r2, #15
 2415 0054 1A62     		str	r2, [r3, #32]
1627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2416              		.loc 1 1627 0
 2417 0056 1132     		adds	r2, r2, #17
 2418 0058 6A23     		movs	r3, #106
 2419 005a C254     		strb	r2, [r0, r3]
1630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 2420              		.loc 1 1630 0
 2421 005c FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 2422              	.LVL186:
 2423 0060 EDE7     		b	.L155
 2424              	.LVL187:
 2425              	.L153:
1636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2426              		.loc 1 1636 0
 2427 0062 0021     		movs	r1, #0
 2428 0064 5A22     		movs	r2, #90
 2429 0066 8152     		strh	r1, [r0, r2]
1639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2430              		.loc 1 1639 0
 2431 0068 4B3A     		subs	r2, r2, #75
 2432 006a 1A62     		str	r2, [r3, #32]
1642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2433              		.loc 1 1642 0
 2434 006c 1132     		adds	r2, r2, #17
 2435 006e 6A23     		movs	r3, #106
 2436 0070 C254     		strb	r2, [r0, r3]
1645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 2437              		.loc 1 1645 0
 2438 0072 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 2439              	.LVL188:
 2440 0076 E2E7     		b	.L155
 2441              	.L158:
 2442              		.align	2
 2443              	.L157:
 2444 0078 DFFEFFFF 		.word	-289
 2445 007c 00000000 		.word	UART_DMARxOnlyAbortCallback
 2446              		.cfi_endproc
 2447              	.LFE55:
 2449              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 2450              		.align	1
 2451              		.syntax unified
 2452              		.code	16
 2453              		.thumb_func
 2454              		.fpu softvfp
 2456              	UART_DMARxOnlyAbortCallback:
 2457              	.LFB87:
2637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
2640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
2641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
2642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
2643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  hdma DMA handle.
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 95


2644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 2458              		.loc 1 2647 0
 2459              		.cfi_startproc
 2460              		@ args = 0, pretend = 0, frame = 0
 2461              		@ frame_needed = 0, uses_anonymous_args = 0
 2462              	.LVL189:
 2463 0000 10B5     		push	{r4, lr}
 2464              	.LCFI21:
 2465              		.cfi_def_cfa_offset 8
 2466              		.cfi_offset 4, -8
 2467              		.cfi_offset 14, -4
2648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2468              		.loc 1 2648 0
 2469 0002 406A     		ldr	r0, [r0, #36]
 2470              	.LVL190:
2649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2471              		.loc 1 2650 0
 2472 0004 0022     		movs	r2, #0
 2473 0006 5A23     		movs	r3, #90
 2474 0008 C252     		strh	r2, [r0, r3]
2651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
2653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 2475              		.loc 1 2653 0
 2476 000a 0368     		ldr	r3, [r0]
 2477 000c 0F32     		adds	r2, r2, #15
 2478 000e 1A62     		str	r2, [r3, #32]
2654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
2656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2479              		.loc 1 2656 0
 2480 0010 1132     		adds	r2, r2, #17
 2481 0012 6A23     		movs	r3, #106
 2482 0014 C254     		strb	r2, [r0, r3]
2657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call user Abort complete callback */
2659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
 2483              		.loc 1 2659 0
 2484 0016 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 2485              	.LVL191:
2660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2486              		.loc 1 2660 0
 2487              		@ sp needed
 2488 001a 10BD     		pop	{r4, pc}
 2489              		.cfi_endproc
 2490              	.LFE87:
 2492              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 2493              		.align	1
 2494              		.global	HAL_MultiProcessor_EnterMuteMode
 2495              		.syntax unified
 2496              		.code	16
 2497              		.thumb_func
 2498              		.fpu softvfp
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 96


 2500              	HAL_MultiProcessor_EnterMuteMode:
 2501              	.LFB67:
1996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
 2502              		.loc 1 1996 0
 2503              		.cfi_startproc
 2504              		@ args = 0, pretend = 0, frame = 0
 2505              		@ frame_needed = 0, uses_anonymous_args = 0
 2506              		@ link register save eliminated.
 2507              	.LVL192:
1997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2508              		.loc 1 1997 0
 2509 0000 0268     		ldr	r2, [r0]
 2510 0002 9369     		ldr	r3, [r2, #24]
 2511 0004 0421     		movs	r1, #4
 2512 0006 0B43     		orrs	r3, r1
 2513 0008 9361     		str	r3, [r2, #24]
1998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2514              		.loc 1 1998 0
 2515              		@ sp needed
 2516 000a 7047     		bx	lr
 2517              		.cfi_endproc
 2518              	.LFE67:
 2520              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 2521              		.align	1
 2522              		.global	HAL_HalfDuplex_EnableTransmitter
 2523              		.syntax unified
 2524              		.code	16
 2525              		.thumb_func
 2526              		.fpu softvfp
 2528              	HAL_HalfDuplex_EnableTransmitter:
 2529              	.LFB68:
2006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
 2530              		.loc 1 2006 0
 2531              		.cfi_startproc
 2532              		@ args = 0, pretend = 0, frame = 0
 2533              		@ frame_needed = 0, uses_anonymous_args = 0
 2534              	.LVL193:
 2535 0000 30B5     		push	{r4, r5, lr}
 2536              	.LCFI22:
 2537              		.cfi_def_cfa_offset 12
 2538              		.cfi_offset 4, -12
 2539              		.cfi_offset 5, -8
 2540              		.cfi_offset 14, -4
2008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2541              		.loc 1 2008 0
 2542 0002 6823     		movs	r3, #104
 2543 0004 C35C     		ldrb	r3, [r0, r3]
 2544 0006 012B     		cmp	r3, #1
 2545 0008 15D0     		beq	.L163
2008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2546              		.loc 1 2008 0 is_stmt 0 discriminator 2
 2547 000a 6822     		movs	r2, #104
 2548 000c 0123     		movs	r3, #1
 2549 000e 8354     		strb	r3, [r0, r2]
2009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2550              		.loc 1 2009 0 is_stmt 1 discriminator 2
 2551 0010 6921     		movs	r1, #105
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 97


 2552 0012 2333     		adds	r3, r3, #35
 2553 0014 4354     		strb	r3, [r0, r1]
2012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
 2554              		.loc 1 2012 0 discriminator 2
 2555 0016 0468     		ldr	r4, [r0]
 2556 0018 2368     		ldr	r3, [r4]
 2557 001a 0C25     		movs	r5, #12
 2558 001c AB43     		bics	r3, r5
 2559 001e 2360     		str	r3, [r4]
2014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2560              		.loc 1 2014 0 discriminator 2
 2561 0020 0468     		ldr	r4, [r0]
 2562 0022 2368     		ldr	r3, [r4]
 2563 0024 043D     		subs	r5, r5, #4
 2564 0026 2B43     		orrs	r3, r5
 2565 0028 2360     		str	r3, [r4]
2016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2566              		.loc 1 2016 0 discriminator 2
 2567 002a 2023     		movs	r3, #32
 2568 002c 4354     		strb	r3, [r0, r1]
2019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2569              		.loc 1 2019 0 discriminator 2
 2570 002e 0023     		movs	r3, #0
 2571 0030 8354     		strb	r3, [r0, r2]
2021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2572              		.loc 1 2021 0 discriminator 2
 2573 0032 0020     		movs	r0, #0
 2574              	.LVL194:
 2575              	.L162:
2022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2576              		.loc 1 2022 0
 2577              		@ sp needed
 2578 0034 30BD     		pop	{r4, r5, pc}
 2579              	.LVL195:
 2580              	.L163:
2008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2581              		.loc 1 2008 0
 2582 0036 0220     		movs	r0, #2
 2583              	.LVL196:
 2584 0038 FCE7     		b	.L162
 2585              		.cfi_endproc
 2586              	.LFE68:
 2588              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 2589              		.align	1
 2590              		.global	HAL_HalfDuplex_EnableReceiver
 2591              		.syntax unified
 2592              		.code	16
 2593              		.thumb_func
 2594              		.fpu softvfp
 2596              	HAL_HalfDuplex_EnableReceiver:
 2597              	.LFB69:
2030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
 2598              		.loc 1 2030 0
 2599              		.cfi_startproc
 2600              		@ args = 0, pretend = 0, frame = 0
 2601              		@ frame_needed = 0, uses_anonymous_args = 0
 2602              	.LVL197:
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 98


 2603 0000 30B5     		push	{r4, r5, lr}
 2604              	.LCFI23:
 2605              		.cfi_def_cfa_offset 12
 2606              		.cfi_offset 4, -12
 2607              		.cfi_offset 5, -8
 2608              		.cfi_offset 14, -4
2032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2609              		.loc 1 2032 0
 2610 0002 6823     		movs	r3, #104
 2611 0004 C35C     		ldrb	r3, [r0, r3]
 2612 0006 012B     		cmp	r3, #1
 2613 0008 15D0     		beq	.L166
2032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2614              		.loc 1 2032 0 is_stmt 0 discriminator 2
 2615 000a 6822     		movs	r2, #104
 2616 000c 0123     		movs	r3, #1
 2617 000e 8354     		strb	r3, [r0, r2]
2033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2618              		.loc 1 2033 0 is_stmt 1 discriminator 2
 2619 0010 6921     		movs	r1, #105
 2620 0012 2333     		adds	r3, r3, #35
 2621 0014 4354     		strb	r3, [r0, r1]
2036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
 2622              		.loc 1 2036 0 discriminator 2
 2623 0016 0468     		ldr	r4, [r0]
 2624 0018 2368     		ldr	r3, [r4]
 2625 001a 0C25     		movs	r5, #12
 2626 001c AB43     		bics	r3, r5
 2627 001e 2360     		str	r3, [r4]
2038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2628              		.loc 1 2038 0 discriminator 2
 2629 0020 0468     		ldr	r4, [r0]
 2630 0022 2368     		ldr	r3, [r4]
 2631 0024 083D     		subs	r5, r5, #8
 2632 0026 2B43     		orrs	r3, r5
 2633 0028 2360     		str	r3, [r4]
2040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Unlocked */
 2634              		.loc 1 2040 0 discriminator 2
 2635 002a 2023     		movs	r3, #32
 2636 002c 4354     		strb	r3, [r0, r1]
2042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2637              		.loc 1 2042 0 discriminator 2
 2638 002e 0023     		movs	r3, #0
 2639 0030 8354     		strb	r3, [r0, r2]
2044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2640              		.loc 1 2044 0 discriminator 2
 2641 0032 0020     		movs	r0, #0
 2642              	.LVL198:
 2643              	.L165:
2045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2644              		.loc 1 2045 0
 2645              		@ sp needed
 2646 0034 30BD     		pop	{r4, r5, pc}
 2647              	.LVL199:
 2648              	.L166:
2032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2649              		.loc 1 2032 0
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 99


 2650 0036 0220     		movs	r0, #2
 2651              	.LVL200:
 2652 0038 FCE7     		b	.L165
 2653              		.cfi_endproc
 2654              	.LFE69:
 2656              		.section	.text.HAL_UART_GetState,"ax",%progbits
 2657              		.align	1
 2658              		.global	HAL_UART_GetState
 2659              		.syntax unified
 2660              		.code	16
 2661              		.thumb_func
 2662              		.fpu softvfp
 2664              	HAL_UART_GetState:
 2665              	.LFB70:
2074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t temp1= 0x00U, temp2 = 0x00U;
 2666              		.loc 1 2074 0
 2667              		.cfi_startproc
 2668              		@ args = 0, pretend = 0, frame = 0
 2669              		@ frame_needed = 0, uses_anonymous_args = 0
 2670              		@ link register save eliminated.
 2671              	.LVL201:
2076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   temp2 = huart->RxState;
 2672              		.loc 1 2076 0
 2673 0000 6923     		movs	r3, #105
 2674 0002 C35C     		ldrb	r3, [r0, r3]
 2675              	.LVL202:
2077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2676              		.loc 1 2077 0
 2677 0004 6A22     		movs	r2, #106
 2678 0006 805C     		ldrb	r0, [r0, r2]
 2679              	.LVL203:
2079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2680              		.loc 1 2079 0
 2681 0008 1843     		orrs	r0, r3
 2682              	.LVL204:
2080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2683              		.loc 1 2080 0
 2684              		@ sp needed
 2685 000a 7047     		bx	lr
 2686              		.cfi_endproc
 2687              	.LFE70:
 2689              		.section	.text.HAL_UART_GetError,"ax",%progbits
 2690              		.align	1
 2691              		.global	HAL_UART_GetError
 2692              		.syntax unified
 2693              		.code	16
 2694              		.thumb_func
 2695              		.fpu softvfp
 2697              	HAL_UART_GetError:
 2698              	.LFB71:
2089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return huart->ErrorCode;
 2699              		.loc 1 2089 0
 2700              		.cfi_startproc
 2701              		@ args = 0, pretend = 0, frame = 0
 2702              		@ frame_needed = 0, uses_anonymous_args = 0
 2703              		@ link register save eliminated.
 2704              	.LVL205:
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 100


2090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2705              		.loc 1 2090 0
 2706 0000 C06E     		ldr	r0, [r0, #108]
 2707              	.LVL206:
2091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 2708              		.loc 1 2091 0
 2709              		@ sp needed
 2710 0002 7047     		bx	lr
 2711              		.cfi_endproc
 2712              	.LFE71:
 2714              		.global	__aeabi_uidiv
 2715              		.section	.text.UART_SetConfig,"ax",%progbits
 2716              		.align	1
 2717              		.global	UART_SetConfig
 2718              		.syntax unified
 2719              		.code	16
 2720              		.thumb_func
 2721              		.fpu softvfp
 2723              	UART_SetConfig:
 2724              	.LFB72:
2110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t tmpreg                     = 0x00000000U;
 2725              		.loc 1 2110 0
 2726              		.cfi_startproc
 2727              		@ args = 0, pretend = 0, frame = 0
 2728              		@ frame_needed = 0, uses_anonymous_args = 0
 2729              	.LVL207:
 2730 0000 70B5     		push	{r4, r5, r6, lr}
 2731              	.LCFI24:
 2732              		.cfi_def_cfa_offset 16
 2733              		.cfi_offset 4, -16
 2734              		.cfi_offset 5, -12
 2735              		.cfi_offset 6, -8
 2736              		.cfi_offset 14, -4
 2737 0002 0400     		movs	r4, r0
 2738              	.LVL208:
2135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 2739              		.loc 1 2135 0
 2740 0004 8368     		ldr	r3, [r0, #8]
 2741 0006 0269     		ldr	r2, [r0, #16]
 2742 0008 1343     		orrs	r3, r2
 2743 000a 4269     		ldr	r2, [r0, #20]
 2744 000c 1343     		orrs	r3, r2
 2745 000e C269     		ldr	r2, [r0, #28]
 2746 0010 1343     		orrs	r3, r2
 2747              	.LVL209:
2136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2748              		.loc 1 2136 0
 2749 0012 0168     		ldr	r1, [r0]
 2750 0014 0A68     		ldr	r2, [r1]
 2751 0016 7248     		ldr	r0, .L209
 2752              	.LVL210:
 2753 0018 0240     		ands	r2, r0
 2754 001a 1343     		orrs	r3, r2
 2755              	.LVL211:
 2756 001c 0B60     		str	r3, [r1]
 2757              	.LVL212:
2141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 101


 2758              		.loc 1 2141 0
 2759 001e 2268     		ldr	r2, [r4]
 2760 0020 5368     		ldr	r3, [r2, #4]
 2761 0022 7049     		ldr	r1, .L209+4
 2762 0024 0B40     		ands	r3, r1
 2763 0026 E168     		ldr	r1, [r4, #12]
 2764 0028 0B43     		orrs	r3, r1
 2765 002a 5360     		str	r3, [r2, #4]
2149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT), tmpreg);
 2766              		.loc 1 2149 0
 2767 002c A369     		ldr	r3, [r4, #24]
 2768 002e 226A     		ldr	r2, [r4, #32]
 2769 0030 1343     		orrs	r3, r2
 2770              	.LVL213:
2150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2771              		.loc 1 2150 0
 2772 0032 2168     		ldr	r1, [r4]
 2773 0034 8A68     		ldr	r2, [r1, #8]
 2774 0036 6C48     		ldr	r0, .L209+8
 2775 0038 0240     		ands	r2, r0
 2776 003a 1343     		orrs	r3, r2
 2777              	.LVL214:
 2778 003c 8B60     		str	r3, [r1, #8]
 2779              	.LVL215:
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 2780              		.loc 1 2153 0
 2781 003e 2568     		ldr	r5, [r4]
 2782 0040 6A4B     		ldr	r3, .L209+12
 2783 0042 9D42     		cmp	r5, r3
 2784 0044 26D0     		beq	.L202
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 2785              		.loc 1 2153 0 is_stmt 0 discriminator 2
 2786 0046 6A4B     		ldr	r3, .L209+16
 2787 0048 9D42     		cmp	r5, r3
 2788 004a 37D0     		beq	.L203
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 2789              		.loc 1 2153 0 discriminator 9
 2790 004c 694B     		ldr	r3, .L209+20
 2791 004e 9D42     		cmp	r5, r3
 2792 0050 56D0     		beq	.L197
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 2793              		.loc 1 2153 0 discriminator 16
 2794 0052 694B     		ldr	r3, .L209+24
 2795 0054 9D42     		cmp	r5, r3
 2796 0056 4FD0     		beq	.L204
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 2797              		.loc 1 2153 0
 2798 0058 1023     		movs	r3, #16
 2799              	.LVL216:
 2800              	.L175:
2156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2801              		.loc 1 2156 0 is_stmt 1
 2802 005a 8022     		movs	r2, #128
 2803 005c 1202     		lsls	r2, r2, #8
 2804 005e E169     		ldr	r1, [r4, #28]
 2805 0060 9142     		cmp	r1, r2
 2806 0062 4FD0     		beq	.L205
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 102


2184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2807              		.loc 1 2184 0
 2808 0064 022B     		cmp	r3, #2
 2809 0066 00D1     		bne	.LCB2366
 2810 0068 9FE0     		b	.L190	@long jump
 2811              	.LCB2366:
 2812 006a 00D8     		bhi	.LCB2368
 2813 006c 8FE0     		b	.L206	@long jump
 2814              	.LCB2368:
 2815 006e 042B     		cmp	r3, #4
 2816 0070 00D1     		bne	.LCB2370
 2817 0072 A6E0     		b	.L193	@long jump
 2818              	.LCB2370:
 2819 0074 082B     		cmp	r3, #8
 2820 0076 00D0     		beq	.LCB2372
 2821 0078 AFE0     		b	.L200	@long jump
 2822              	.LCB2372:
2196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 2823              		.loc 1 2196 0
 2824 007a 6168     		ldr	r1, [r4, #4]
 2825 007c 4808     		lsrs	r0, r1, #1
 2826 007e 8023     		movs	r3, #128
 2827              	.LVL217:
 2828 0080 1B02     		lsls	r3, r3, #8
 2829 0082 9C46     		mov	ip, r3
 2830 0084 6044     		add	r0, r0, ip
 2831 0086 FFF7FEFF 		bl	__aeabi_uidiv
 2832              	.LVL218:
 2833 008a 0004     		lsls	r0, r0, #16
 2834 008c 000C     		lsrs	r0, r0, #16
 2835 008e E860     		str	r0, [r5, #12]
2115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2836              		.loc 1 2115 0
 2837 0090 0020     		movs	r0, #0
2197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
 2838              		.loc 1 2197 0
 2839 0092 61E0     		b	.L189
 2840              	.LVL219:
 2841              	.L202:
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 2842              		.loc 1 2153 0 discriminator 1
 2843 0094 594B     		ldr	r3, .L209+28
 2844 0096 1A6B     		ldr	r2, [r3, #48]
 2845 0098 0323     		movs	r3, #3
 2846 009a 1340     		ands	r3, r2
 2847 009c 012B     		cmp	r3, #1
 2848 009e 09D0     		beq	.L172
 2849 00a0 002B     		cmp	r3, #0
 2850 00a2 05D0     		beq	.L173
 2851 00a4 022B     		cmp	r3, #2
 2852 00a6 07D0     		beq	.L174
 2853 00a8 032B     		cmp	r3, #3
 2854 00aa 27D0     		beq	.L195
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 2855              		.loc 1 2153 0 is_stmt 0 discriminator 3
 2856 00ac 1023     		movs	r3, #16
 2857 00ae D4E7     		b	.L175
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 103


 2858              	.L173:
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 2859              		.loc 1 2153 0
 2860 00b0 0023     		movs	r3, #0
 2861 00b2 D2E7     		b	.L175
 2862              	.L172:
 2863              	.LVL220:
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 2864              		.loc 1 2153 0 discriminator 5
 2865 00b4 0423     		movs	r3, #4
 2866 00b6 D0E7     		b	.L175
 2867              	.LVL221:
 2868              	.L174:
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 2869              		.loc 1 2153 0 discriminator 6
 2870 00b8 0823     		movs	r3, #8
 2871 00ba CEE7     		b	.L175
 2872              	.LVL222:
 2873              	.L203:
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 2874              		.loc 1 2153 0 discriminator 8
 2875 00bc 4F4B     		ldr	r3, .L209+28
 2876 00be 1B6B     		ldr	r3, [r3, #48]
 2877 00c0 C022     		movs	r2, #192
 2878 00c2 9202     		lsls	r2, r2, #10
 2879 00c4 1340     		ands	r3, r2
 2880 00c6 8022     		movs	r2, #128
 2881 00c8 5202     		lsls	r2, r2, #9
 2882 00ca 9342     		cmp	r3, r2
 2883 00cc 0ED0     		beq	.L178
 2884 00ce 09D9     		bls	.L207
 2885 00d0 8022     		movs	r2, #128
 2886 00d2 9202     		lsls	r2, r2, #10
 2887 00d4 9342     		cmp	r3, r2
 2888 00d6 0BD0     		beq	.L181
 2889 00d8 C022     		movs	r2, #192
 2890 00da 9202     		lsls	r2, r2, #10
 2891 00dc 9342     		cmp	r3, r2
 2892 00de 09D1     		bne	.L177
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 2893              		.loc 1 2153 0
 2894 00e0 0223     		movs	r3, #2
 2895 00e2 BAE7     		b	.L175
 2896              	.L207:
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 2897              		.loc 1 2153 0 discriminator 8
 2898 00e4 002B     		cmp	r3, #0
 2899 00e6 05D1     		bne	.L177
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 2900              		.loc 1 2153 0
 2901 00e8 0023     		movs	r3, #0
 2902 00ea B6E7     		b	.L175
 2903              	.L178:
 2904              	.LVL223:
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 2905              		.loc 1 2153 0 discriminator 12
 2906 00ec 0423     		movs	r3, #4
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 104


 2907 00ee B4E7     		b	.L175
 2908              	.LVL224:
 2909              	.L181:
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 2910              		.loc 1 2153 0 discriminator 13
 2911 00f0 0823     		movs	r3, #8
 2912 00f2 B2E7     		b	.L175
 2913              	.LVL225:
 2914              	.L177:
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 2915              		.loc 1 2153 0 discriminator 10
 2916 00f4 1023     		movs	r3, #16
 2917 00f6 B0E7     		b	.L175
 2918              	.L204:
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 2919              		.loc 1 2153 0
 2920 00f8 0023     		movs	r3, #0
 2921 00fa AEE7     		b	.L175
 2922              	.L195:
 2923 00fc 0223     		movs	r3, #2
 2924 00fe ACE7     		b	.L175
 2925              	.L197:
 2926 0100 0023     		movs	r3, #0
 2927 0102 AAE7     		b	.L175
 2928              	.LVL226:
 2929              	.L205:
2158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2930              		.loc 1 2158 0 is_stmt 1
 2931 0104 022B     		cmp	r3, #2
 2932 0106 28D0     		beq	.L184
 2933 0108 0FD9     		bls	.L208
 2934 010a 042B     		cmp	r3, #4
 2935 010c 30D0     		beq	.L187
 2936 010e 082B     		cmp	r3, #8
 2937 0110 3AD1     		bne	.L199
2170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 2938              		.loc 1 2170 0
 2939 0112 6368     		ldr	r3, [r4, #4]
 2940              	.LVL227:
 2941 0114 5808     		lsrs	r0, r3, #1
 2942 0116 8023     		movs	r3, #128
 2943 0118 5B02     		lsls	r3, r3, #9
 2944 011a 9C46     		mov	ip, r3
 2945 011c 6044     		add	r0, r0, ip
 2946 011e 6168     		ldr	r1, [r4, #4]
 2947 0120 FFF7FEFF 		bl	__aeabi_uidiv
 2948              	.LVL228:
 2949 0124 83B2     		uxth	r3, r0
 2950              	.LVL229:
2115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2951              		.loc 1 2115 0
 2952 0126 0020     		movs	r0, #0
2171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
 2953              		.loc 1 2171 0
 2954 0128 0CE0     		b	.L183
 2955              	.LVL230:
 2956              	.L208:
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 105


2158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2957              		.loc 1 2158 0
 2958 012a 002B     		cmp	r3, #0
 2959 012c 2CD1     		bne	.L199
2161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 2960              		.loc 1 2161 0
 2961 012e FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 2962              	.LVL231:
 2963 0132 4000     		lsls	r0, r0, #1
 2964 0134 6368     		ldr	r3, [r4, #4]
 2965 0136 5B08     		lsrs	r3, r3, #1
 2966 0138 C018     		adds	r0, r0, r3
 2967 013a 6168     		ldr	r1, [r4, #4]
 2968 013c FFF7FEFF 		bl	__aeabi_uidiv
 2969              	.LVL232:
 2970 0140 83B2     		uxth	r3, r0
 2971              	.LVL233:
2115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2972              		.loc 1 2115 0
 2973 0142 0020     		movs	r0, #0
 2974              	.LVL234:
 2975              	.L183:
2178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 2976              		.loc 1 2178 0
 2977 0144 0F22     		movs	r2, #15
 2978 0146 1900     		movs	r1, r3
 2979 0148 9143     		bics	r1, r2
 2980 014a 0A00     		movs	r2, r1
 2981              	.LVL235:
2179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->Instance->BRR = brrtemp;
 2982              		.loc 1 2179 0
 2983 014c 5B10     		asrs	r3, r3, #1
 2984              	.LVL236:
 2985 014e 0721     		movs	r1, #7
 2986 0150 0B40     		ands	r3, r1
 2987 0152 1343     		orrs	r3, r2
 2988              	.LVL237:
2180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 2989              		.loc 1 2180 0
 2990 0154 2268     		ldr	r2, [r4]
 2991 0156 D360     		str	r3, [r2, #12]
 2992              	.LVL238:
 2993              	.L189:
2207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2994              		.loc 1 2207 0
 2995              		@ sp needed
 2996              	.LVL239:
 2997 0158 70BD     		pop	{r4, r5, r6, pc}
 2998              	.LVL240:
 2999              	.L184:
2164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 3000              		.loc 1 2164 0
 3001 015a 6368     		ldr	r3, [r4, #4]
 3002              	.LVL241:
 3003 015c 5808     		lsrs	r0, r3, #1
 3004 015e 284B     		ldr	r3, .L209+32
 3005 0160 9C46     		mov	ip, r3
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 106


 3006 0162 6044     		add	r0, r0, ip
 3007 0164 6168     		ldr	r1, [r4, #4]
 3008 0166 FFF7FEFF 		bl	__aeabi_uidiv
 3009              	.LVL242:
 3010 016a 83B2     		uxth	r3, r0
 3011              	.LVL243:
2115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3012              		.loc 1 2115 0
 3013 016c 0020     		movs	r0, #0
2165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
 3014              		.loc 1 2165 0
 3015 016e E9E7     		b	.L183
 3016              	.LVL244:
 3017              	.L187:
2167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 3018              		.loc 1 2167 0
 3019 0170 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 3020              	.LVL245:
 3021 0174 4000     		lsls	r0, r0, #1
 3022 0176 6368     		ldr	r3, [r4, #4]
 3023 0178 5B08     		lsrs	r3, r3, #1
 3024 017a C018     		adds	r0, r0, r3
 3025 017c 6168     		ldr	r1, [r4, #4]
 3026 017e FFF7FEFF 		bl	__aeabi_uidiv
 3027              	.LVL246:
 3028 0182 83B2     		uxth	r3, r0
 3029              	.LVL247:
2115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3030              		.loc 1 2115 0
 3031 0184 0020     		movs	r0, #0
2168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 3032              		.loc 1 2168 0
 3033 0186 DDE7     		b	.L183
 3034              	.LVL248:
 3035              	.L199:
2174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 3036              		.loc 1 2174 0
 3037 0188 0120     		movs	r0, #1
2114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 3038              		.loc 1 2114 0
 3039 018a 0023     		movs	r3, #0
 3040              	.LVL249:
 3041 018c DAE7     		b	.L183
 3042              	.LVL250:
 3043              	.L206:
2184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3044              		.loc 1 2184 0
 3045 018e 002B     		cmp	r3, #0
 3046 0190 23D1     		bne	.L200
2187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 3047              		.loc 1 2187 0
 3048 0192 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 3049              	.LVL251:
 3050 0196 6168     		ldr	r1, [r4, #4]
 3051 0198 4B08     		lsrs	r3, r1, #1
 3052 019a C018     		adds	r0, r0, r3
 3053 019c FFF7FEFF 		bl	__aeabi_uidiv
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 107


 3054              	.LVL252:
 3055 01a0 0004     		lsls	r0, r0, #16
 3056 01a2 000C     		lsrs	r0, r0, #16
 3057 01a4 E860     		str	r0, [r5, #12]
2115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3058              		.loc 1 2115 0
 3059 01a6 0020     		movs	r0, #0
2188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
 3060              		.loc 1 2188 0
 3061 01a8 D6E7     		b	.L189
 3062              	.LVL253:
 3063              	.L190:
2190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 3064              		.loc 1 2190 0
 3065 01aa 6168     		ldr	r1, [r4, #4]
 3066 01ac 4808     		lsrs	r0, r1, #1
 3067 01ae 154B     		ldr	r3, .L209+36
 3068              	.LVL254:
 3069 01b0 9C46     		mov	ip, r3
 3070 01b2 6044     		add	r0, r0, ip
 3071 01b4 FFF7FEFF 		bl	__aeabi_uidiv
 3072              	.LVL255:
 3073 01b8 0004     		lsls	r0, r0, #16
 3074 01ba 000C     		lsrs	r0, r0, #16
 3075 01bc E860     		str	r0, [r5, #12]
2115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3076              		.loc 1 2115 0
 3077 01be 0020     		movs	r0, #0
2191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
 3078              		.loc 1 2191 0
 3079 01c0 CAE7     		b	.L189
 3080              	.LVL256:
 3081              	.L193:
2193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 3082              		.loc 1 2193 0
 3083 01c2 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 3084              	.LVL257:
 3085 01c6 6168     		ldr	r1, [r4, #4]
 3086 01c8 4B08     		lsrs	r3, r1, #1
 3087 01ca C018     		adds	r0, r0, r3
 3088 01cc FFF7FEFF 		bl	__aeabi_uidiv
 3089              	.LVL258:
 3090 01d0 0004     		lsls	r0, r0, #16
 3091 01d2 000C     		lsrs	r0, r0, #16
 3092 01d4 E860     		str	r0, [r5, #12]
2115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3093              		.loc 1 2115 0
 3094 01d6 0020     		movs	r0, #0
2194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 3095              		.loc 1 2194 0
 3096 01d8 BEE7     		b	.L189
 3097              	.LVL259:
 3098              	.L200:
2200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 3099              		.loc 1 2200 0
 3100 01da 0120     		movs	r0, #1
 3101 01dc BCE7     		b	.L189
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 108


 3102              	.L210:
 3103 01de C046     		.align	2
 3104              	.L209:
 3105 01e0 F369FFEF 		.word	-268473869
 3106 01e4 FFCFFFFF 		.word	-12289
 3107 01e8 FFF4FFFF 		.word	-2817
 3108 01ec 00380140 		.word	1073821696
 3109 01f0 00440040 		.word	1073759232
 3110 01f4 00480040 		.word	1073760256
 3111 01f8 004C0040 		.word	1073761280
 3112 01fc 00100240 		.word	1073876992
 3113 0200 0024F400 		.word	16000000
 3114 0204 00127A00 		.word	8000000
 3115              		.cfi_endproc
 3116              	.LFE72:
 3118              		.section	.text.UART_AdvFeatureConfig,"ax",%progbits
 3119              		.align	1
 3120              		.global	UART_AdvFeatureConfig
 3121              		.syntax unified
 3122              		.code	16
 3123              		.thumb_func
 3124              		.fpu softvfp
 3126              	UART_AdvFeatureConfig:
 3127              	.LFB73:
2215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
 3128              		.loc 1 2215 0
 3129              		.cfi_startproc
 3130              		@ args = 0, pretend = 0, frame = 0
 3131              		@ frame_needed = 0, uses_anonymous_args = 0
 3132              		@ link register save eliminated.
 3133              	.LVL260:
2220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3134              		.loc 1 2220 0
 3135 0000 436A     		ldr	r3, [r0, #36]
 3136 0002 DB07     		lsls	r3, r3, #31
 3137 0004 06D5     		bpl	.L212
2223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3138              		.loc 1 2223 0
 3139 0006 0268     		ldr	r2, [r0]
 3140 0008 5368     		ldr	r3, [r2, #4]
 3141 000a 2C49     		ldr	r1, .L221
 3142 000c 0B40     		ands	r3, r1
 3143 000e 816A     		ldr	r1, [r0, #40]
 3144 0010 0B43     		orrs	r3, r1
 3145 0012 5360     		str	r3, [r2, #4]
 3146              	.L212:
2227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3147              		.loc 1 2227 0
 3148 0014 436A     		ldr	r3, [r0, #36]
 3149 0016 9B07     		lsls	r3, r3, #30
 3150 0018 06D5     		bpl	.L213
2230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3151              		.loc 1 2230 0
 3152 001a 0268     		ldr	r2, [r0]
 3153 001c 5368     		ldr	r3, [r2, #4]
 3154 001e 2849     		ldr	r1, .L221+4
 3155 0020 0B40     		ands	r3, r1
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 109


 3156 0022 C16A     		ldr	r1, [r0, #44]
 3157 0024 0B43     		orrs	r3, r1
 3158 0026 5360     		str	r3, [r2, #4]
 3159              	.L213:
2234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3160              		.loc 1 2234 0
 3161 0028 436A     		ldr	r3, [r0, #36]
 3162 002a 5B07     		lsls	r3, r3, #29
 3163 002c 06D5     		bpl	.L214
2237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3164              		.loc 1 2237 0
 3165 002e 0268     		ldr	r2, [r0]
 3166 0030 5368     		ldr	r3, [r2, #4]
 3167 0032 2449     		ldr	r1, .L221+8
 3168 0034 0B40     		ands	r3, r1
 3169 0036 016B     		ldr	r1, [r0, #48]
 3170 0038 0B43     		orrs	r3, r1
 3171 003a 5360     		str	r3, [r2, #4]
 3172              	.L214:
2241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3173              		.loc 1 2241 0
 3174 003c 436A     		ldr	r3, [r0, #36]
 3175 003e 1B07     		lsls	r3, r3, #28
 3176 0040 06D5     		bpl	.L215
2244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3177              		.loc 1 2244 0
 3178 0042 0268     		ldr	r2, [r0]
 3179 0044 5368     		ldr	r3, [r2, #4]
 3180 0046 2049     		ldr	r1, .L221+12
 3181 0048 0B40     		ands	r3, r1
 3182 004a 416B     		ldr	r1, [r0, #52]
 3183 004c 0B43     		orrs	r3, r1
 3184 004e 5360     		str	r3, [r2, #4]
 3185              	.L215:
2248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3186              		.loc 1 2248 0
 3187 0050 436A     		ldr	r3, [r0, #36]
 3188 0052 DB06     		lsls	r3, r3, #27
 3189 0054 06D5     		bpl	.L216
2251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3190              		.loc 1 2251 0
 3191 0056 0268     		ldr	r2, [r0]
 3192 0058 9368     		ldr	r3, [r2, #8]
 3193 005a 1C49     		ldr	r1, .L221+16
 3194 005c 0B40     		ands	r3, r1
 3195 005e 816B     		ldr	r1, [r0, #56]
 3196 0060 0B43     		orrs	r3, r1
 3197 0062 9360     		str	r3, [r2, #8]
 3198              	.L216:
2255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3199              		.loc 1 2255 0
 3200 0064 436A     		ldr	r3, [r0, #36]
 3201 0066 9B06     		lsls	r3, r3, #26
 3202 0068 06D5     		bpl	.L217
2258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3203              		.loc 1 2258 0
 3204 006a 0268     		ldr	r2, [r0]
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 110


 3205 006c 9368     		ldr	r3, [r2, #8]
 3206 006e 1849     		ldr	r1, .L221+20
 3207 0070 0B40     		ands	r3, r1
 3208 0072 C16B     		ldr	r1, [r0, #60]
 3209 0074 0B43     		orrs	r3, r1
 3210 0076 9360     		str	r3, [r2, #8]
 3211              	.L217:
2262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3212              		.loc 1 2262 0
 3213 0078 436A     		ldr	r3, [r0, #36]
 3214 007a 5B06     		lsls	r3, r3, #25
 3215 007c 0BD5     		bpl	.L218
2266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
 3216              		.loc 1 2266 0
 3217 007e 0268     		ldr	r2, [r0]
 3218 0080 5368     		ldr	r3, [r2, #4]
 3219 0082 1449     		ldr	r1, .L221+24
 3220 0084 0B40     		ands	r3, r1
 3221 0086 016C     		ldr	r1, [r0, #64]
 3222 0088 0B43     		orrs	r3, r1
 3223 008a 5360     		str	r3, [r2, #4]
2268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3224              		.loc 1 2268 0
 3225 008c 8023     		movs	r3, #128
 3226 008e 5B03     		lsls	r3, r3, #13
 3227 0090 026C     		ldr	r2, [r0, #64]
 3228 0092 9A42     		cmp	r2, r3
 3229 0094 0AD0     		beq	.L220
 3230              	.L218:
2276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3231              		.loc 1 2276 0
 3232 0096 436A     		ldr	r3, [r0, #36]
 3233 0098 1B06     		lsls	r3, r3, #24
 3234 009a 06D5     		bpl	.L211
2279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3235              		.loc 1 2279 0
 3236 009c 0268     		ldr	r2, [r0]
 3237 009e 5368     		ldr	r3, [r2, #4]
 3238 00a0 0D49     		ldr	r1, .L221+28
 3239 00a2 0B40     		ands	r3, r1
 3240 00a4 816C     		ldr	r1, [r0, #72]
 3241 00a6 0B43     		orrs	r3, r1
 3242 00a8 5360     		str	r3, [r2, #4]
 3243              	.L211:
2281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3244              		.loc 1 2281 0
 3245              		@ sp needed
 3246 00aa 7047     		bx	lr
 3247              	.L220:
2271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 3248              		.loc 1 2271 0
 3249 00ac 0268     		ldr	r2, [r0]
 3250 00ae 5368     		ldr	r3, [r2, #4]
 3251 00b0 0A49     		ldr	r1, .L221+32
 3252 00b2 0B40     		ands	r3, r1
 3253 00b4 416C     		ldr	r1, [r0, #68]
 3254 00b6 0B43     		orrs	r3, r1
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 111


 3255 00b8 5360     		str	r3, [r2, #4]
 3256 00ba ECE7     		b	.L218
 3257              	.L222:
 3258              		.align	2
 3259              	.L221:
 3260 00bc FFFFFDFF 		.word	-131073
 3261 00c0 FFFFFEFF 		.word	-65537
 3262 00c4 FFFFFBFF 		.word	-262145
 3263 00c8 FF7FFFFF 		.word	-32769
 3264 00cc FFEFFFFF 		.word	-4097
 3265 00d0 FFDFFFFF 		.word	-8193
 3266 00d4 FFFFEFFF 		.word	-1048577
 3267 00d8 FFFFF7FF 		.word	-524289
 3268 00dc FFFF9FFF 		.word	-6291457
 3269              		.cfi_endproc
 3270              	.LFE73:
 3272              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 3273              		.align	1
 3274              		.global	UART_WaitOnFlagUntilTimeout
 3275              		.syntax unified
 3276              		.code	16
 3277              		.thumb_func
 3278              		.fpu softvfp
 3280              	UART_WaitOnFlagUntilTimeout:
 3281              	.LFB75:
2350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Wait until flag is set */
 3282              		.loc 1 2350 0
 3283              		.cfi_startproc
 3284              		@ args = 4, pretend = 0, frame = 0
 3285              		@ frame_needed = 0, uses_anonymous_args = 0
 3286              	.LVL261:
 3287 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3288              	.LCFI25:
 3289              		.cfi_def_cfa_offset 20
 3290              		.cfi_offset 4, -20
 3291              		.cfi_offset 5, -16
 3292              		.cfi_offset 6, -12
 3293              		.cfi_offset 7, -8
 3294              		.cfi_offset 14, -4
 3295 0002 C646     		mov	lr, r8
 3296 0004 00B5     		push	{lr}
 3297              	.LCFI26:
 3298              		.cfi_def_cfa_offset 24
 3299              		.cfi_offset 8, -24
 3300 0006 0500     		movs	r5, r0
 3301 0008 0F00     		movs	r7, r1
 3302 000a 1600     		movs	r6, r2
 3303 000c 9846     		mov	r8, r3
 3304 000e 069C     		ldr	r4, [sp, #24]
 3305              	.LVL262:
 3306              	.L225:
2352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3307              		.loc 1 2352 0
 3308 0010 2B68     		ldr	r3, [r5]
 3309 0012 DB69     		ldr	r3, [r3, #28]
 3310 0014 3A00     		movs	r2, r7
 3311 0016 9A43     		bics	r2, r3
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 112


 3312 0018 1300     		movs	r3, r2
 3313 001a 5A42     		rsbs	r2, r3, #0
 3314 001c 5341     		adcs	r3, r3, r2
 3315 001e B342     		cmp	r3, r6
 3316 0020 1ED1     		bne	.L229
2355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3317              		.loc 1 2355 0
 3318 0022 631C     		adds	r3, r4, #1
 3319 0024 F4D0     		beq	.L225
2357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 3320              		.loc 1 2357 0
 3321 0026 002C     		cmp	r4, #0
 3322 0028 05D0     		beq	.L226
2357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 3323              		.loc 1 2357 0 is_stmt 0 discriminator 1
 3324 002a FFF7FEFF 		bl	HAL_GetTick
 3325              	.LVL263:
 3326 002e 4346     		mov	r3, r8
 3327 0030 C01A     		subs	r0, r0, r3
 3328 0032 8442     		cmp	r4, r0
 3329 0034 ECD2     		bcs	.L225
 3330              	.L226:
2360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3331              		.loc 1 2360 0 is_stmt 1
 3332 0036 2A68     		ldr	r2, [r5]
 3333 0038 1368     		ldr	r3, [r2]
 3334 003a 0B49     		ldr	r1, .L230
 3335 003c 0B40     		ands	r3, r1
 3336 003e 1360     		str	r3, [r2]
2361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3337              		.loc 1 2361 0
 3338 0040 2A68     		ldr	r2, [r5]
 3339 0042 9368     		ldr	r3, [r2, #8]
 3340 0044 A331     		adds	r1, r1, #163
 3341 0046 FF31     		adds	r1, r1, #255
 3342 0048 8B43     		bics	r3, r1
 3343 004a 9360     		str	r3, [r2, #8]
2363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 3344              		.loc 1 2363 0
 3345 004c 2023     		movs	r3, #32
 3346 004e 6922     		movs	r2, #105
 3347 0050 AB54     		strb	r3, [r5, r2]
2364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3348              		.loc 1 2364 0
 3349 0052 0132     		adds	r2, r2, #1
 3350 0054 AB54     		strb	r3, [r5, r2]
2367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return HAL_TIMEOUT;
 3351              		.loc 1 2367 0
 3352 0056 0022     		movs	r2, #0
 3353 0058 4833     		adds	r3, r3, #72
 3354 005a EA54     		strb	r2, [r5, r3]
2368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 3355              		.loc 1 2368 0
 3356 005c 0320     		movs	r0, #3
 3357 005e 00E0     		b	.L227
 3358              	.L229:
2372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 113


 3359              		.loc 1 2372 0
 3360 0060 0020     		movs	r0, #0
 3361              	.L227:
2373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3362              		.loc 1 2373 0
 3363              		@ sp needed
 3364              	.LVL264:
 3365              	.LVL265:
 3366              	.LVL266:
 3367 0062 04BC     		pop	{r2}
 3368 0064 9046     		mov	r8, r2
 3369 0066 F0BD     		pop	{r4, r5, r6, r7, pc}
 3370              	.L231:
 3371              		.align	2
 3372              	.L230:
 3373 0068 5FFEFFFF 		.word	-417
 3374              		.cfi_endproc
 3375              	.LFE75:
 3377              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 3378              		.align	1
 3379              		.global	HAL_UART_Transmit
 3380              		.syntax unified
 3381              		.code	16
 3382              		.thumb_func
 3383              		.fpu softvfp
 3385              	HAL_UART_Transmit:
 3386              	.LFB41:
 692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t* tmp;
 3387              		.loc 1 692 0
 3388              		.cfi_startproc
 3389              		@ args = 0, pretend = 0, frame = 8
 3390              		@ frame_needed = 0, uses_anonymous_args = 0
 3391              	.LVL267:
 3392 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3393              	.LCFI27:
 3394              		.cfi_def_cfa_offset 20
 3395              		.cfi_offset 4, -20
 3396              		.cfi_offset 5, -16
 3397              		.cfi_offset 6, -12
 3398              		.cfi_offset 7, -8
 3399              		.cfi_offset 14, -4
 3400 0002 85B0     		sub	sp, sp, #20
 3401              	.LCFI28:
 3402              		.cfi_def_cfa_offset 40
 3403 0004 0400     		movs	r4, r0
 3404 0006 0F00     		movs	r7, r1
 3405 0008 1600     		movs	r6, r2
 3406 000a 1D00     		movs	r5, r3
 3407              	.LVL268:
 697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3408              		.loc 1 697 0
 3409 000c 6923     		movs	r3, #105
 3410              	.LVL269:
 3411 000e C35C     		ldrb	r3, [r0, r3]
 3412 0010 202B     		cmp	r3, #32
 3413 0012 02D0     		beq	.L246
 759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 114


 3414              		.loc 1 759 0
 3415 0014 0220     		movs	r0, #2
 3416              	.LVL270:
 3417              	.L233:
 761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3418              		.loc 1 761 0
 3419 0016 05B0     		add	sp, sp, #20
 3420              		@ sp needed
 3421              	.LVL271:
 3422              	.LVL272:
 3423              	.LVL273:
 3424 0018 F0BD     		pop	{r4, r5, r6, r7, pc}
 3425              	.LVL274:
 3426              	.L246:
 699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3427              		.loc 1 699 0
 3428 001a 0029     		cmp	r1, #0
 3429 001c 5BD0     		beq	.L240
 699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3430              		.loc 1 699 0 is_stmt 0 discriminator 1
 3431 001e 002A     		cmp	r2, #0
 3432 0020 5BD0     		beq	.L241
 707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3433              		.loc 1 707 0 is_stmt 1
 3434 0022 8023     		movs	r3, #128
 3435 0024 5B01     		lsls	r3, r3, #5
 3436 0026 8268     		ldr	r2, [r0, #8]
 3437              	.LVL275:
 3438 0028 9A42     		cmp	r2, r3
 3439 002a 05D0     		beq	.L247
 3440              	.L234:
 716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3441              		.loc 1 716 0
 3442 002c 6823     		movs	r3, #104
 3443 002e E35C     		ldrb	r3, [r4, r3]
 3444 0030 012B     		cmp	r3, #1
 3445 0032 08D1     		bne	.L248
 3446 0034 0220     		movs	r0, #2
 3447              	.LVL276:
 3448 0036 EEE7     		b	.L233
 3449              	.LVL277:
 3450              	.L247:
 707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3451              		.loc 1 707 0 discriminator 1
 3452 0038 0369     		ldr	r3, [r0, #16]
 3453 003a 002B     		cmp	r3, #0
 3454 003c F6D1     		bne	.L234
 709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 3455              		.loc 1 709 0
 3456 003e CB07     		lsls	r3, r1, #31
 3457 0040 F4D5     		bpl	.L234
 711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 3458              		.loc 1 711 0
 3459 0042 0120     		movs	r0, #1
 3460              	.LVL278:
 3461 0044 E7E7     		b	.L233
 3462              	.LVL279:
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 115


 3463              	.L248:
 716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3464              		.loc 1 716 0 discriminator 2
 3465 0046 0122     		movs	r2, #1
 3466 0048 6823     		movs	r3, #104
 3467 004a E254     		strb	r2, [r4, r3]
 718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 3468              		.loc 1 718 0 discriminator 2
 3469 004c 0023     		movs	r3, #0
 3470 004e E366     		str	r3, [r4, #108]
 719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3471              		.loc 1 719 0 discriminator 2
 3472 0050 2032     		adds	r2, r2, #32
 3473 0052 6933     		adds	r3, r3, #105
 3474 0054 E254     		strb	r2, [r4, r3]
 722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3475              		.loc 1 722 0 discriminator 2
 3476 0056 FFF7FEFF 		bl	HAL_GetTick
 3477              	.LVL280:
 3478 005a 0390     		str	r0, [sp, #12]
 3479              	.LVL281:
 724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = Size;
 3480              		.loc 1 724 0 discriminator 2
 3481 005c 5023     		movs	r3, #80
 3482 005e E652     		strh	r6, [r4, r3]
 725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     while(huart->TxXferCount > 0)
 3483              		.loc 1 725 0 discriminator 2
 3484 0060 0233     		adds	r3, r3, #2
 3485 0062 E652     		strh	r6, [r4, r3]
 726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3486              		.loc 1 726 0 discriminator 2
 3487 0064 03E0     		b	.L235
 3488              	.LVL282:
 3489              	.L236:
 741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 3490              		.loc 1 741 0
 3491 0066 3B78     		ldrb	r3, [r7]
 3492 0068 2268     		ldr	r2, [r4]
 3493 006a 1385     		strh	r3, [r2, #40]
 3494 006c 0137     		adds	r7, r7, #1
 3495              	.LVL283:
 3496              	.L235:
 726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3497              		.loc 1 726 0
 3498 006e 5223     		movs	r3, #82
 3499 0070 E35A     		ldrh	r3, [r4, r3]
 3500 0072 9BB2     		uxth	r3, r3
 3501 0074 002B     		cmp	r3, #0
 3502 0076 1CD0     		beq	.L249
 728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 3503              		.loc 1 728 0
 3504 0078 5222     		movs	r2, #82
 3505 007a A35A     		ldrh	r3, [r4, r2]
 3506 007c 013B     		subs	r3, r3, #1
 3507 007e 9BB2     		uxth	r3, r3
 3508 0080 A352     		strh	r3, [r4, r2]
 729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 116


 3509              		.loc 1 729 0
 3510 0082 0095     		str	r5, [sp]
 3511 0084 039B     		ldr	r3, [sp, #12]
 3512 0086 0022     		movs	r2, #0
 3513 0088 8021     		movs	r1, #128
 3514 008a 2000     		movs	r0, r4
 3515 008c FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3516              	.LVL284:
 3517 0090 0028     		cmp	r0, #0
 3518 0092 24D1     		bne	.L244
 733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 3519              		.loc 1 733 0
 3520 0094 8023     		movs	r3, #128
 3521 0096 5B01     		lsls	r3, r3, #5
 3522 0098 A268     		ldr	r2, [r4, #8]
 3523 009a 9A42     		cmp	r2, r3
 3524 009c E3D1     		bne	.L236
 733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 3525              		.loc 1 733 0 is_stmt 0 discriminator 1
 3526 009e 2369     		ldr	r3, [r4, #16]
 3527 00a0 002B     		cmp	r3, #0
 3528 00a2 E0D1     		bne	.L236
 3529              	.LVL285:
 736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pData += 2;
 3530              		.loc 1 736 0 is_stmt 1
 3531 00a4 3B88     		ldrh	r3, [r7]
 3532 00a6 DB05     		lsls	r3, r3, #23
 3533 00a8 DB0D     		lsrs	r3, r3, #23
 3534 00aa 2268     		ldr	r2, [r4]
 3535 00ac 1385     		strh	r3, [r2, #40]
 737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 3536              		.loc 1 737 0
 3537 00ae 0237     		adds	r7, r7, #2
 3538              	.LVL286:
 3539 00b0 DDE7     		b	.L235
 3540              	.LVL287:
 3541              	.L249:
 744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3542              		.loc 1 744 0
 3543 00b2 0095     		str	r5, [sp]
 3544 00b4 039B     		ldr	r3, [sp, #12]
 3545 00b6 0022     		movs	r2, #0
 3546 00b8 4021     		movs	r1, #64
 3547 00ba 2000     		movs	r0, r4
 3548 00bc FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3549              	.LVL288:
 3550 00c0 0028     		cmp	r0, #0
 3551 00c2 01D0     		beq	.L250
 746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 3552              		.loc 1 746 0
 3553 00c4 0320     		movs	r0, #3
 3554 00c6 A6E7     		b	.L233
 3555              	.L250:
 750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3556              		.loc 1 750 0
 3557 00c8 2022     		movs	r2, #32
 3558 00ca 6923     		movs	r3, #105
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 117


 3559 00cc E254     		strb	r2, [r4, r3]
 753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3560              		.loc 1 753 0
 3561 00ce 0022     		movs	r2, #0
 3562 00d0 013B     		subs	r3, r3, #1
 3563 00d2 E254     		strb	r2, [r4, r3]
 755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3564              		.loc 1 755 0
 3565 00d4 9FE7     		b	.L233
 3566              	.LVL289:
 3567              	.L240:
 701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 3568              		.loc 1 701 0
 3569 00d6 0120     		movs	r0, #1
 3570              	.LVL290:
 3571 00d8 9DE7     		b	.L233
 3572              	.LVL291:
 3573              	.L241:
 3574 00da 0120     		movs	r0, #1
 3575              	.LVL292:
 3576 00dc 9BE7     		b	.L233
 3577              	.LVL293:
 3578              	.L244:
 731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 3579              		.loc 1 731 0
 3580 00de 0320     		movs	r0, #3
 3581 00e0 99E7     		b	.L233
 3582              		.cfi_endproc
 3583              	.LFE41:
 3585              		.section	.text.HAL_UART_Receive,"ax",%progbits
 3586              		.align	1
 3587              		.global	HAL_UART_Receive
 3588              		.syntax unified
 3589              		.code	16
 3590              		.thumb_func
 3591              		.fpu softvfp
 3593              	HAL_UART_Receive:
 3594              	.LFB42:
 776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t* tmp;
 3595              		.loc 1 776 0
 3596              		.cfi_startproc
 3597              		@ args = 0, pretend = 0, frame = 8
 3598              		@ frame_needed = 0, uses_anonymous_args = 0
 3599              	.LVL294:
 3600 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3601              	.LCFI29:
 3602              		.cfi_def_cfa_offset 20
 3603              		.cfi_offset 4, -20
 3604              		.cfi_offset 5, -16
 3605              		.cfi_offset 6, -12
 3606              		.cfi_offset 7, -8
 3607              		.cfi_offset 14, -4
 3608 0002 85B0     		sub	sp, sp, #20
 3609              	.LCFI30:
 3610              		.cfi_def_cfa_offset 40
 3611 0004 0400     		movs	r4, r0
 3612 0006 0F00     		movs	r7, r1
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 118


 3613 0008 1600     		movs	r6, r2
 3614 000a 1D00     		movs	r5, r3
 3615              	.LVL295:
 782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3616              		.loc 1 782 0
 3617 000c 6A23     		movs	r3, #106
 3618              	.LVL296:
 3619 000e C35C     		ldrb	r3, [r0, r3]
 3620 0010 202B     		cmp	r3, #32
 3621 0012 02D0     		beq	.L270
 846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3622              		.loc 1 846 0
 3623 0014 0220     		movs	r0, #2
 3624              	.LVL297:
 3625              	.L252:
 848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3626              		.loc 1 848 0
 3627 0016 05B0     		add	sp, sp, #20
 3628              		@ sp needed
 3629              	.LVL298:
 3630              	.LVL299:
 3631              	.LVL300:
 3632 0018 F0BD     		pop	{r4, r5, r6, r7, pc}
 3633              	.LVL301:
 3634              	.L270:
 784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3635              		.loc 1 784 0
 3636 001a 0029     		cmp	r1, #0
 3637 001c 00D1     		bne	.LCB3281
 3638 001e 81E0     		b	.L265	@long jump
 3639              	.LCB3281:
 784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3640              		.loc 1 784 0 is_stmt 0 discriminator 1
 3641 0020 002A     		cmp	r2, #0
 3642 0022 00D1     		bne	.LCB3283
 3643 0024 80E0     		b	.L266	@long jump
 3644              	.LCB3283:
 792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3645              		.loc 1 792 0 is_stmt 1
 3646 0026 8023     		movs	r3, #128
 3647 0028 5B01     		lsls	r3, r3, #5
 3648 002a 8268     		ldr	r2, [r0, #8]
 3649              	.LVL302:
 3650 002c 9A42     		cmp	r2, r3
 3651 002e 05D0     		beq	.L271
 3652              	.L253:
 801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3653              		.loc 1 801 0
 3654 0030 6823     		movs	r3, #104
 3655 0032 E35C     		ldrb	r3, [r4, r3]
 3656 0034 012B     		cmp	r3, #1
 3657 0036 08D1     		bne	.L272
 3658 0038 0220     		movs	r0, #2
 3659              	.LVL303:
 3660 003a ECE7     		b	.L252
 3661              	.LVL304:
 3662              	.L271:
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 119


 792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3663              		.loc 1 792 0 discriminator 1
 3664 003c 0369     		ldr	r3, [r0, #16]
 3665 003e 002B     		cmp	r3, #0
 3666 0040 F6D1     		bne	.L253
 794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 3667              		.loc 1 794 0
 3668 0042 CB07     		lsls	r3, r1, #31
 3669 0044 F4D5     		bpl	.L253
 796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 3670              		.loc 1 796 0
 3671 0046 0120     		movs	r0, #1
 3672              	.LVL305:
 3673 0048 E5E7     		b	.L252
 3674              	.LVL306:
 3675              	.L272:
 801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3676              		.loc 1 801 0 discriminator 2
 3677 004a 0122     		movs	r2, #1
 3678 004c 6823     		movs	r3, #104
 3679 004e E254     		strb	r2, [r4, r3]
 803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 3680              		.loc 1 803 0 discriminator 2
 3681 0050 0023     		movs	r3, #0
 3682 0052 E366     		str	r3, [r4, #108]
 804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3683              		.loc 1 804 0 discriminator 2
 3684 0054 2132     		adds	r2, r2, #33
 3685 0056 6A33     		adds	r3, r3, #106
 3686 0058 E254     		strb	r2, [r4, r3]
 807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3687              		.loc 1 807 0 discriminator 2
 3688 005a FFF7FEFF 		bl	HAL_GetTick
 3689              	.LVL307:
 3690 005e 0390     		str	r0, [sp, #12]
 3691              	.LVL308:
 809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = Size;
 3692              		.loc 1 809 0 discriminator 2
 3693 0060 5823     		movs	r3, #88
 3694 0062 E652     		strh	r6, [r4, r3]
 810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3695              		.loc 1 810 0 discriminator 2
 3696 0064 0233     		adds	r3, r3, #2
 3697 0066 E652     		strh	r6, [r4, r3]
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 3698              		.loc 1 813 0 discriminator 2
 3699 0068 A368     		ldr	r3, [r4, #8]
 3700 006a 8022     		movs	r2, #128
 3701 006c 5201     		lsls	r2, r2, #5
 3702 006e 9342     		cmp	r3, r2
 3703 0070 08D0     		beq	.L273
 3704 0072 002B     		cmp	r3, #0
 3705 0074 15D1     		bne	.L257
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 3706              		.loc 1 813 0 is_stmt 0 discriminator 5
 3707 0076 2369     		ldr	r3, [r4, #16]
 3708 0078 002B     		cmp	r3, #0
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 120


 3709 007a 0ED1     		bne	.L258
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 3710              		.loc 1 813 0 discriminator 7
 3711 007c FF22     		movs	r2, #255
 3712 007e 5C33     		adds	r3, r3, #92
 3713 0080 E252     		strh	r2, [r4, r3]
 3714 0082 12E0     		b	.L256
 3715              	.L273:
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 3716              		.loc 1 813 0 discriminator 1
 3717 0084 2369     		ldr	r3, [r4, #16]
 3718 0086 002B     		cmp	r3, #0
 3719 0088 03D1     		bne	.L255
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 3720              		.loc 1 813 0 discriminator 3
 3721 008a 294A     		ldr	r2, .L276
 3722 008c 5C33     		adds	r3, r3, #92
 3723 008e E252     		strh	r2, [r4, r3]
 3724 0090 0BE0     		b	.L256
 3725              	.L255:
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 3726              		.loc 1 813 0 discriminator 4
 3727 0092 FF22     		movs	r2, #255
 3728 0094 5C23     		movs	r3, #92
 3729 0096 E252     		strh	r2, [r4, r3]
 3730 0098 07E0     		b	.L256
 3731              	.L258:
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 3732              		.loc 1 813 0 discriminator 8
 3733 009a 7F22     		movs	r2, #127
 3734 009c 5C23     		movs	r3, #92
 3735 009e E252     		strh	r2, [r4, r3]
 3736 00a0 03E0     		b	.L256
 3737              	.L257:
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 3738              		.loc 1 813 0 discriminator 6
 3739 00a2 8022     		movs	r2, #128
 3740 00a4 5205     		lsls	r2, r2, #21
 3741 00a6 9342     		cmp	r3, r2
 3742 00a8 02D0     		beq	.L274
 3743              	.L256:
 814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3744              		.loc 1 814 0 is_stmt 1
 3745 00aa 5C23     		movs	r3, #92
 3746 00ac E65A     		ldrh	r6, [r4, r3]
 3747              	.LVL309:
 817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3748              		.loc 1 817 0
 3749 00ae 10E0     		b	.L260
 3750              	.LVL310:
 3751              	.L274:
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 3752              		.loc 1 813 0 discriminator 9
 3753 00b0 2369     		ldr	r3, [r4, #16]
 3754 00b2 002B     		cmp	r3, #0
 3755 00b4 03D1     		bne	.L259
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 121


 3756              		.loc 1 813 0 is_stmt 0 discriminator 10
 3757 00b6 7F22     		movs	r2, #127
 3758 00b8 5C33     		adds	r3, r3, #92
 3759 00ba E252     		strh	r2, [r4, r3]
 3760 00bc F5E7     		b	.L256
 3761              	.L259:
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 3762              		.loc 1 813 0 discriminator 11
 3763 00be 3F22     		movs	r2, #63
 3764 00c0 5C23     		movs	r3, #92
 3765 00c2 E252     		strh	r2, [r4, r3]
 3766 00c4 F1E7     		b	.L256
 3767              	.LVL311:
 3768              	.L261:
 832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 3769              		.loc 1 832 0 is_stmt 1
 3770 00c6 2368     		ldr	r3, [r4]
 3771 00c8 9B8C     		ldrh	r3, [r3, #36]
 3772 00ca F2B2     		uxtb	r2, r6
 3773 00cc 1340     		ands	r3, r2
 3774 00ce 3B70     		strb	r3, [r7]
 3775 00d0 0137     		adds	r7, r7, #1
 3776              	.LVL312:
 3777              	.L260:
 817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3778              		.loc 1 817 0
 3779 00d2 5A23     		movs	r3, #90
 3780 00d4 E35A     		ldrh	r3, [r4, r3]
 3781 00d6 9BB2     		uxth	r3, r3
 3782 00d8 002B     		cmp	r3, #0
 3783 00da 1BD0     		beq	.L275
 819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 3784              		.loc 1 819 0
 3785 00dc 5A22     		movs	r2, #90
 3786 00de A35A     		ldrh	r3, [r4, r2]
 3787 00e0 013B     		subs	r3, r3, #1
 3788 00e2 9BB2     		uxth	r3, r3
 3789 00e4 A352     		strh	r3, [r4, r2]
 820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 3790              		.loc 1 820 0
 3791 00e6 0095     		str	r5, [sp]
 3792 00e8 039B     		ldr	r3, [sp, #12]
 3793 00ea 0022     		movs	r2, #0
 3794 00ec 2021     		movs	r1, #32
 3795 00ee 2000     		movs	r0, r4
 3796 00f0 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3797              	.LVL313:
 3798 00f4 0028     		cmp	r0, #0
 3799 00f6 19D1     		bne	.L269
 824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 3800              		.loc 1 824 0
 3801 00f8 8023     		movs	r3, #128
 3802 00fa 5B01     		lsls	r3, r3, #5
 3803 00fc A268     		ldr	r2, [r4, #8]
 3804 00fe 9A42     		cmp	r2, r3
 3805 0100 E1D1     		bne	.L261
 824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 122


 3806              		.loc 1 824 0 is_stmt 0 discriminator 1
 3807 0102 2369     		ldr	r3, [r4, #16]
 3808 0104 002B     		cmp	r3, #0
 3809 0106 DED1     		bne	.L261
 3810              	.LVL314:
 827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pData +=2U;
 3811              		.loc 1 827 0 is_stmt 1
 3812 0108 2368     		ldr	r3, [r4]
 3813 010a 9B8C     		ldrh	r3, [r3, #36]
 3814 010c 3340     		ands	r3, r6
 3815 010e 3B80     		strh	r3, [r7]
 828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 3816              		.loc 1 828 0
 3817 0110 0237     		adds	r7, r7, #2
 3818              	.LVL315:
 3819 0112 DEE7     		b	.L260
 3820              	.LVL316:
 3821              	.L275:
 837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3822              		.loc 1 837 0
 3823 0114 2022     		movs	r2, #32
 3824 0116 6A33     		adds	r3, r3, #106
 3825 0118 E254     		strb	r2, [r4, r3]
 840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3826              		.loc 1 840 0
 3827 011a 0022     		movs	r2, #0
 3828 011c 023B     		subs	r3, r3, #2
 3829 011e E254     		strb	r2, [r4, r3]
 842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3830              		.loc 1 842 0
 3831 0120 0020     		movs	r0, #0
 3832 0122 78E7     		b	.L252
 3833              	.LVL317:
 3834              	.L265:
 786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 3835              		.loc 1 786 0
 3836 0124 0120     		movs	r0, #1
 3837              	.LVL318:
 3838 0126 76E7     		b	.L252
 3839              	.LVL319:
 3840              	.L266:
 3841 0128 0120     		movs	r0, #1
 3842              	.LVL320:
 3843 012a 74E7     		b	.L252
 3844              	.LVL321:
 3845              	.L269:
 822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 3846              		.loc 1 822 0
 3847 012c 0320     		movs	r0, #3
 3848 012e 72E7     		b	.L252
 3849              	.L277:
 3850              		.align	2
 3851              	.L276:
 3852 0130 FF010000 		.word	511
 3853              		.cfi_endproc
 3854              	.LFE42:
 3856              		.section	.text.UART_CheckIdleState,"ax",%progbits
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 123


 3857              		.align	1
 3858              		.global	UART_CheckIdleState
 3859              		.syntax unified
 3860              		.code	16
 3861              		.thumb_func
 3862              		.fpu softvfp
 3864              	UART_CheckIdleState:
 3865              	.LFB74:
2289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F070x6)&
 3866              		.loc 1 2289 0
 3867              		.cfi_startproc
 3868              		@ args = 0, pretend = 0, frame = 0
 3869              		@ frame_needed = 0, uses_anonymous_args = 0
 3870              	.LVL322:
 3871 0000 30B5     		push	{r4, r5, lr}
 3872              	.LCFI31:
 3873              		.cfi_def_cfa_offset 12
 3874              		.cfi_offset 4, -12
 3875              		.cfi_offset 5, -8
 3876              		.cfi_offset 14, -4
 3877 0002 83B0     		sub	sp, sp, #12
 3878              	.LCFI32:
 3879              		.cfi_def_cfa_offset 24
 3880 0004 0400     		movs	r4, r0
 3881              	.LVL323:
2295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3882              		.loc 1 2295 0
 3883 0006 0023     		movs	r3, #0
 3884 0008 C366     		str	r3, [r0, #108]
2299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3885              		.loc 1 2299 0
 3886 000a FFF7FEFF 		bl	HAL_GetTick
 3887              	.LVL324:
 3888 000e 0500     		movs	r5, r0
 3889              	.LVL325:
2304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3890              		.loc 1 2304 0
 3891 0010 2368     		ldr	r3, [r4]
 3892 0012 194A     		ldr	r2, .L286
 3893 0014 9342     		cmp	r3, r2
 3894 0016 0DD0     		beq	.L279
2304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3895              		.loc 1 2304 0 is_stmt 0 discriminator 1
 3896 0018 184A     		ldr	r2, .L286+4
 3897 001a 9342     		cmp	r3, r2
 3898 001c 0AD0     		beq	.L279
 3899              	.LVL326:
 3900              	.L280:
2331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3901              		.loc 1 2331 0 is_stmt 1
 3902 001e 2023     		movs	r3, #32
 3903 0020 6922     		movs	r2, #105
 3904 0022 A354     		strb	r3, [r4, r2]
2332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3905              		.loc 1 2332 0
 3906 0024 0132     		adds	r2, r2, #1
 3907 0026 A354     		strb	r3, [r4, r2]
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 124


2335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3908              		.loc 1 2335 0
 3909 0028 0022     		movs	r2, #0
 3910 002a 4833     		adds	r3, r3, #72
 3911 002c E254     		strb	r2, [r4, r3]
2337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 3912              		.loc 1 2337 0
 3913 002e 0020     		movs	r0, #0
 3914              	.L282:
2338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3915              		.loc 1 2338 0
 3916 0030 03B0     		add	sp, sp, #12
 3917              		@ sp needed
 3918              	.LVL327:
 3919              	.LVL328:
 3920 0032 30BD     		pop	{r4, r5, pc}
 3921              	.LVL329:
 3922              	.L279:
2307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3923              		.loc 1 2307 0
 3924 0034 1B68     		ldr	r3, [r3]
 3925 0036 1B07     		lsls	r3, r3, #28
 3926 0038 10D4     		bmi	.L285
 3927              	.LVL330:
 3928              	.L281:
2318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3929              		.loc 1 2318 0
 3930 003a 2368     		ldr	r3, [r4]
 3931 003c 1B68     		ldr	r3, [r3]
 3932 003e 5B07     		lsls	r3, r3, #29
 3933 0040 EDD5     		bpl	.L280
2321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 3934              		.loc 1 2321 0
 3935 0042 0F4B     		ldr	r3, .L286+8
 3936 0044 0093     		str	r3, [sp]
 3937 0046 2B00     		movs	r3, r5
 3938 0048 0022     		movs	r2, #0
 3939 004a 8021     		movs	r1, #128
 3940 004c C903     		lsls	r1, r1, #15
 3941 004e 2000     		movs	r0, r4
 3942 0050 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3943              	.LVL331:
 3944 0054 0028     		cmp	r0, #0
 3945 0056 E2D0     		beq	.L280
2324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 3946              		.loc 1 2324 0
 3947 0058 0320     		movs	r0, #3
 3948 005a E9E7     		b	.L282
 3949              	.LVL332:
 3950              	.L285:
2310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 3951              		.loc 1 2310 0
 3952 005c 084B     		ldr	r3, .L286+8
 3953 005e 0093     		str	r3, [sp]
 3954 0060 2B00     		movs	r3, r5
 3955 0062 0022     		movs	r2, #0
 3956 0064 8021     		movs	r1, #128
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 125


 3957 0066 8903     		lsls	r1, r1, #14
 3958 0068 2000     		movs	r0, r4
 3959              	.LVL333:
 3960 006a FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3961              	.LVL334:
 3962 006e 0028     		cmp	r0, #0
 3963 0070 E3D0     		beq	.L281
2313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 3964              		.loc 1 2313 0
 3965 0072 0320     		movs	r0, #3
 3966 0074 DCE7     		b	.L282
 3967              	.L287:
 3968 0076 C046     		.align	2
 3969              	.L286:
 3970 0078 00380140 		.word	1073821696
 3971 007c 00440040 		.word	1073759232
 3972 0080 FFFFFF01 		.word	33554431
 3973              		.cfi_endproc
 3974              	.LFE74:
 3976              		.section	.text.HAL_UART_Init,"ax",%progbits
 3977              		.align	1
 3978              		.global	HAL_UART_Init
 3979              		.syntax unified
 3980              		.code	16
 3981              		.thumb_func
 3982              		.fpu softvfp
 3984              	HAL_UART_Init:
 3985              	.LFB35:
 292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 3986              		.loc 1 292 0
 3987              		.cfi_startproc
 3988              		@ args = 0, pretend = 0, frame = 0
 3989              		@ frame_needed = 0, uses_anonymous_args = 0
 3990              	.LVL335:
 3991 0000 10B5     		push	{r4, lr}
 3992              	.LCFI33:
 3993              		.cfi_def_cfa_offset 8
 3994              		.cfi_offset 4, -8
 3995              		.cfi_offset 14, -4
 3996 0002 041E     		subs	r4, r0, #0
 294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3997              		.loc 1 294 0
 3998 0004 30D0     		beq	.L292
 310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3999              		.loc 1 310 0
 4000 0006 6923     		movs	r3, #105
 4001 0008 C35C     		ldrb	r3, [r0, r3]
 4002 000a 002B     		cmp	r3, #0
 4003 000c 22D0     		beq	.L293
 4004              	.LVL336:
 4005              	.L290:
 319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4006              		.loc 1 319 0
 4007 000e 2422     		movs	r2, #36
 4008 0010 6923     		movs	r3, #105
 4009 0012 E254     		strb	r2, [r4, r3]
 322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 126


 4010              		.loc 1 322 0
 4011 0014 2268     		ldr	r2, [r4]
 4012 0016 1368     		ldr	r3, [r2]
 4013 0018 0121     		movs	r1, #1
 4014 001a 8B43     		bics	r3, r1
 4015 001c 1360     		str	r3, [r2]
 325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4016              		.loc 1 325 0
 4017 001e 2000     		movs	r0, r4
 4018 0020 FFF7FEFF 		bl	UART_SetConfig
 4019              	.LVL337:
 4020 0024 0128     		cmp	r0, #1
 4021 0026 14D0     		beq	.L289
 330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4022              		.loc 1 330 0
 4023 0028 636A     		ldr	r3, [r4, #36]
 4024 002a 002B     		cmp	r3, #0
 4025 002c 18D1     		bne	.L294
 4026              	.L291:
 339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 4027              		.loc 1 339 0
 4028 002e 2268     		ldr	r2, [r4]
 4029 0030 5368     		ldr	r3, [r2, #4]
 4030 0032 0E49     		ldr	r1, .L295
 4031 0034 0B40     		ands	r3, r1
 4032 0036 5360     		str	r3, [r2, #4]
 345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 4033              		.loc 1 345 0
 4034 0038 2268     		ldr	r2, [r4]
 4035 003a 9368     		ldr	r3, [r2, #8]
 4036 003c 2A21     		movs	r1, #42
 4037 003e 8B43     		bics	r3, r1
 4038 0040 9360     		str	r3, [r2, #8]
 358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4039              		.loc 1 358 0
 4040 0042 2268     		ldr	r2, [r4]
 4041 0044 1368     		ldr	r3, [r2]
 4042 0046 2939     		subs	r1, r1, #41
 4043 0048 0B43     		orrs	r3, r1
 4044 004a 1360     		str	r3, [r2]
 361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 4045              		.loc 1 361 0
 4046 004c 2000     		movs	r0, r4
 4047 004e FFF7FEFF 		bl	UART_CheckIdleState
 4048              	.LVL338:
 4049              	.L289:
 362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4050              		.loc 1 362 0
 4051              		@ sp needed
 4052              	.LVL339:
 4053 0052 10BD     		pop	{r4, pc}
 4054              	.LVL340:
 4055              	.L293:
 313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4056              		.loc 1 313 0
 4057 0054 0022     		movs	r2, #0
 4058 0056 6833     		adds	r3, r3, #104
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 127


 4059 0058 C254     		strb	r2, [r0, r3]
 316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 4060              		.loc 1 316 0
 4061 005a FFF7FEFF 		bl	HAL_UART_MspInit
 4062              	.LVL341:
 4063 005e D6E7     		b	.L290
 4064              	.L294:
 332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 4065              		.loc 1 332 0
 4066 0060 2000     		movs	r0, r4
 4067 0062 FFF7FEFF 		bl	UART_AdvFeatureConfig
 4068              	.LVL342:
 4069 0066 E2E7     		b	.L291
 4070              	.LVL343:
 4071              	.L292:
 296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 4072              		.loc 1 296 0
 4073 0068 0120     		movs	r0, #1
 4074              	.LVL344:
 4075 006a F2E7     		b	.L289
 4076              	.L296:
 4077              		.align	2
 4078              	.L295:
 4079 006c FFB7FFFF 		.word	-18433
 4080              		.cfi_endproc
 4081              	.LFE35:
 4083              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 4084              		.align	1
 4085              		.global	HAL_HalfDuplex_Init
 4086              		.syntax unified
 4087              		.code	16
 4088              		.thumb_func
 4089              		.fpu softvfp
 4091              	HAL_HalfDuplex_Init:
 4092              	.LFB36:
 371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 4093              		.loc 1 371 0
 4094              		.cfi_startproc
 4095              		@ args = 0, pretend = 0, frame = 0
 4096              		@ frame_needed = 0, uses_anonymous_args = 0
 4097              	.LVL345:
 4098 0000 10B5     		push	{r4, lr}
 4099              	.LCFI34:
 4100              		.cfi_def_cfa_offset 8
 4101              		.cfi_offset 4, -8
 4102              		.cfi_offset 14, -4
 4103 0002 041E     		subs	r4, r0, #0
 373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4104              		.loc 1 373 0
 4105 0004 35D0     		beq	.L301
 381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4106              		.loc 1 381 0
 4107 0006 6923     		movs	r3, #105
 4108 0008 C35C     		ldrb	r3, [r0, r3]
 4109 000a 002B     		cmp	r3, #0
 4110 000c 27D0     		beq	.L302
 4111              	.LVL346:
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 128


 4112              	.L299:
 390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4113              		.loc 1 390 0
 4114 000e 2422     		movs	r2, #36
 4115 0010 6923     		movs	r3, #105
 4116 0012 E254     		strb	r2, [r4, r3]
 393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4117              		.loc 1 393 0
 4118 0014 2268     		ldr	r2, [r4]
 4119 0016 1368     		ldr	r3, [r2]
 4120 0018 0121     		movs	r1, #1
 4121 001a 8B43     		bics	r3, r1
 4122 001c 1360     		str	r3, [r2]
 396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4123              		.loc 1 396 0
 4124 001e 2000     		movs	r0, r4
 4125 0020 FFF7FEFF 		bl	UART_SetConfig
 4126              	.LVL347:
 4127 0024 0128     		cmp	r0, #1
 4128 0026 19D0     		beq	.L298
 401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4129              		.loc 1 401 0
 4130 0028 636A     		ldr	r3, [r4, #36]
 4131 002a 002B     		cmp	r3, #0
 4132 002c 1DD1     		bne	.L303
 4133              	.L300:
 410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 4134              		.loc 1 410 0
 4135 002e 2268     		ldr	r2, [r4]
 4136 0030 5368     		ldr	r3, [r2, #4]
 4137 0032 1149     		ldr	r1, .L304
 4138 0034 0B40     		ands	r3, r1
 4139 0036 5360     		str	r3, [r2, #4]
 416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 4140              		.loc 1 416 0
 4141 0038 2268     		ldr	r2, [r4]
 4142 003a 9368     		ldr	r3, [r2, #8]
 4143 003c 2221     		movs	r1, #34
 4144 003e 8B43     		bics	r3, r1
 4145 0040 9360     		str	r3, [r2, #8]
 427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4146              		.loc 1 427 0
 4147 0042 2268     		ldr	r2, [r4]
 4148 0044 9368     		ldr	r3, [r2, #8]
 4149 0046 1A39     		subs	r1, r1, #26
 4150 0048 0B43     		orrs	r3, r1
 4151 004a 9360     		str	r3, [r2, #8]
 430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4152              		.loc 1 430 0
 4153 004c 2268     		ldr	r2, [r4]
 4154 004e 1368     		ldr	r3, [r2]
 4155 0050 0739     		subs	r1, r1, #7
 4156 0052 0B43     		orrs	r3, r1
 4157 0054 1360     		str	r3, [r2]
 433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 4158              		.loc 1 433 0
 4159 0056 2000     		movs	r0, r4
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 129


 4160 0058 FFF7FEFF 		bl	UART_CheckIdleState
 4161              	.LVL348:
 4162              	.L298:
 434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4163              		.loc 1 434 0
 4164              		@ sp needed
 4165              	.LVL349:
 4166 005c 10BD     		pop	{r4, pc}
 4167              	.LVL350:
 4168              	.L302:
 384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4169              		.loc 1 384 0
 4170 005e 0022     		movs	r2, #0
 4171 0060 6833     		adds	r3, r3, #104
 4172 0062 C254     		strb	r2, [r0, r3]
 387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 4173              		.loc 1 387 0
 4174 0064 FFF7FEFF 		bl	HAL_UART_MspInit
 4175              	.LVL351:
 4176 0068 D1E7     		b	.L299
 4177              	.L303:
 403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 4178              		.loc 1 403 0
 4179 006a 2000     		movs	r0, r4
 4180 006c FFF7FEFF 		bl	UART_AdvFeatureConfig
 4181              	.LVL352:
 4182 0070 DDE7     		b	.L300
 4183              	.LVL353:
 4184              	.L301:
 375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 4185              		.loc 1 375 0
 4186 0072 0120     		movs	r0, #1
 4187              	.LVL354:
 4188 0074 F2E7     		b	.L298
 4189              	.L305:
 4190 0076 C046     		.align	2
 4191              	.L304:
 4192 0078 FFB7FFFF 		.word	-18433
 4193              		.cfi_endproc
 4194              	.LFE36:
 4196              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 4197              		.align	1
 4198              		.global	HAL_MultiProcessor_Init
 4199              		.syntax unified
 4200              		.code	16
 4201              		.thumb_func
 4202              		.fpu softvfp
 4204              	HAL_MultiProcessor_Init:
 4205              	.LFB37:
 456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 4206              		.loc 1 456 0
 4207              		.cfi_startproc
 4208              		@ args = 0, pretend = 0, frame = 0
 4209              		@ frame_needed = 0, uses_anonymous_args = 0
 4210              	.LVL355:
 4211 0000 70B5     		push	{r4, r5, r6, lr}
 4212              	.LCFI35:
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 130


 4213              		.cfi_def_cfa_offset 16
 4214              		.cfi_offset 4, -16
 4215              		.cfi_offset 5, -12
 4216              		.cfi_offset 6, -8
 4217              		.cfi_offset 14, -4
 4218 0002 0400     		movs	r4, r0
 4219 0004 0D00     		movs	r5, r1
 4220 0006 1600     		movs	r6, r2
 458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4221              		.loc 1 458 0
 4222 0008 0028     		cmp	r0, #0
 4223 000a 42D0     		beq	.L311
 466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4224              		.loc 1 466 0
 4225 000c 6923     		movs	r3, #105
 4226 000e C35C     		ldrb	r3, [r0, r3]
 4227 0010 002B     		cmp	r3, #0
 4228 0012 2CD0     		beq	.L312
 4229              	.LVL356:
 4230              	.L308:
 475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4231              		.loc 1 475 0
 4232 0014 2422     		movs	r2, #36
 4233 0016 6923     		movs	r3, #105
 4234 0018 E254     		strb	r2, [r4, r3]
 478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4235              		.loc 1 478 0
 4236 001a 2268     		ldr	r2, [r4]
 4237 001c 1368     		ldr	r3, [r2]
 4238 001e 0121     		movs	r1, #1
 4239 0020 8B43     		bics	r3, r1
 4240 0022 1360     		str	r3, [r2]
 481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4241              		.loc 1 481 0
 4242 0024 2000     		movs	r0, r4
 4243 0026 FFF7FEFF 		bl	UART_SetConfig
 4244              	.LVL357:
 4245 002a 0128     		cmp	r0, #1
 4246 002c 1ED0     		beq	.L307
 486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4247              		.loc 1 486 0
 4248 002e 636A     		ldr	r3, [r4, #36]
 4249 0030 002B     		cmp	r3, #0
 4250 0032 22D1     		bne	.L313
 4251              	.L309:
 495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 4252              		.loc 1 495 0
 4253 0034 2268     		ldr	r2, [r4]
 4254 0036 5368     		ldr	r3, [r2, #4]
 4255 0038 1749     		ldr	r1, .L315
 4256 003a 0B40     		ands	r3, r1
 4257 003c 5360     		str	r3, [r2, #4]
 501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 4258              		.loc 1 501 0
 4259 003e 2268     		ldr	r2, [r4]
 4260 0040 9368     		ldr	r3, [r2, #8]
 4261 0042 2A21     		movs	r1, #42
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 131


 4262 0044 8B43     		bics	r3, r1
 4263 0046 9360     		str	r3, [r2, #8]
 513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4264              		.loc 1 513 0
 4265 0048 8023     		movs	r3, #128
 4266 004a 1B01     		lsls	r3, r3, #4
 4267 004c 9E42     		cmp	r6, r3
 4268 004e 18D0     		beq	.L314
 4269              	.L310:
 520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4270              		.loc 1 520 0
 4271 0050 2268     		ldr	r2, [r4]
 4272 0052 1368     		ldr	r3, [r2]
 4273 0054 1149     		ldr	r1, .L315+4
 4274 0056 0B40     		ands	r3, r1
 4275 0058 1E43     		orrs	r6, r3
 4276              	.LVL358:
 4277 005a 1660     		str	r6, [r2]
 523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4278              		.loc 1 523 0
 4279 005c 2268     		ldr	r2, [r4]
 4280 005e 1368     		ldr	r3, [r2]
 4281 0060 0121     		movs	r1, #1
 4282 0062 0B43     		orrs	r3, r1
 4283 0064 1360     		str	r3, [r2]
 526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 4284              		.loc 1 526 0
 4285 0066 2000     		movs	r0, r4
 4286 0068 FFF7FEFF 		bl	UART_CheckIdleState
 4287              	.LVL359:
 4288              	.L307:
 527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4289              		.loc 1 527 0
 4290              		@ sp needed
 4291              	.LVL360:
 4292 006c 70BD     		pop	{r4, r5, r6, pc}
 4293              	.LVL361:
 4294              	.L312:
 469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4295              		.loc 1 469 0
 4296 006e 0022     		movs	r2, #0
 4297              	.LVL362:
 4298 0070 6833     		adds	r3, r3, #104
 4299 0072 C254     		strb	r2, [r0, r3]
 472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 4300              		.loc 1 472 0
 4301 0074 FFF7FEFF 		bl	HAL_UART_MspInit
 4302              	.LVL363:
 4303 0078 CCE7     		b	.L308
 4304              	.L313:
 488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 4305              		.loc 1 488 0
 4306 007a 2000     		movs	r0, r4
 4307 007c FFF7FEFF 		bl	UART_AdvFeatureConfig
 4308              	.LVL364:
 4309 0080 D8E7     		b	.L309
 4310              	.L314:
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 132


 516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 4311              		.loc 1 516 0
 4312 0082 2268     		ldr	r2, [r4]
 4313 0084 5368     		ldr	r3, [r2, #4]
 4314 0086 1B02     		lsls	r3, r3, #8
 4315 0088 1B0A     		lsrs	r3, r3, #8
 4316 008a 2D06     		lsls	r5, r5, #24
 4317 008c 1D43     		orrs	r5, r3
 4318 008e 5560     		str	r5, [r2, #4]
 4319 0090 DEE7     		b	.L310
 4320              	.LVL365:
 4321              	.L311:
 460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 4322              		.loc 1 460 0
 4323 0092 0120     		movs	r0, #1
 4324              	.LVL366:
 4325 0094 EAE7     		b	.L307
 4326              	.L316:
 4327 0096 C046     		.align	2
 4328              	.L315:
 4329 0098 FFB7FFFF 		.word	-18433
 4330 009c FFF7FFFF 		.word	-2049
 4331              		.cfi_endproc
 4332              	.LFE37:
 4334              		.section	.text.HAL_MultiProcessor_EnableMuteMode,"ax",%progbits
 4335              		.align	1
 4336              		.global	HAL_MultiProcessor_EnableMuteMode
 4337              		.syntax unified
 4338              		.code	16
 4339              		.thumb_func
 4340              		.fpu softvfp
 4342              	HAL_MultiProcessor_EnableMuteMode:
 4343              	.LFB65:
1954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
 4344              		.loc 1 1954 0
 4345              		.cfi_startproc
 4346              		@ args = 0, pretend = 0, frame = 0
 4347              		@ frame_needed = 0, uses_anonymous_args = 0
 4348              	.LVL367:
 4349 0000 10B5     		push	{r4, lr}
 4350              	.LCFI36:
 4351              		.cfi_def_cfa_offset 8
 4352              		.cfi_offset 4, -8
 4353              		.cfi_offset 14, -4
1956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4354              		.loc 1 1956 0
 4355 0002 6823     		movs	r3, #104
 4356 0004 C35C     		ldrb	r3, [r0, r3]
 4357 0006 012B     		cmp	r3, #1
 4358 0008 01D1     		bne	.L320
 4359 000a 0220     		movs	r0, #2
 4360              	.LVL368:
 4361              	.L318:
1966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4362              		.loc 1 1966 0
 4363              		@ sp needed
 4364 000c 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 133


 4365              	.LVL369:
 4366              	.L320:
1956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4367              		.loc 1 1956 0 discriminator 2
 4368 000e 0122     		movs	r2, #1
 4369 0010 6823     		movs	r3, #104
 4370 0012 C254     		strb	r2, [r0, r3]
1958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4371              		.loc 1 1958 0 discriminator 2
 4372 0014 6832     		adds	r2, r2, #104
 4373 0016 443B     		subs	r3, r3, #68
 4374 0018 8354     		strb	r3, [r0, r2]
1961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4375              		.loc 1 1961 0 discriminator 2
 4376 001a 0168     		ldr	r1, [r0]
 4377 001c 0C68     		ldr	r4, [r1]
 4378 001e 8023     		movs	r3, #128
 4379 0020 9B01     		lsls	r3, r3, #6
 4380 0022 2343     		orrs	r3, r4
 4381 0024 0B60     		str	r3, [r1]
1963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4382              		.loc 1 1963 0 discriminator 2
 4383 0026 2023     		movs	r3, #32
 4384 0028 8354     		strb	r3, [r0, r2]
1965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 4385              		.loc 1 1965 0 discriminator 2
 4386 002a FFF7FEFF 		bl	UART_CheckIdleState
 4387              	.LVL370:
 4388 002e EDE7     		b	.L318
 4389              		.cfi_endproc
 4390              	.LFE65:
 4392              		.section	.text.HAL_MultiProcessor_DisableMuteMode,"ax",%progbits
 4393              		.align	1
 4394              		.global	HAL_MultiProcessor_DisableMuteMode
 4395              		.syntax unified
 4396              		.code	16
 4397              		.thumb_func
 4398              		.fpu softvfp
 4400              	HAL_MultiProcessor_DisableMuteMode:
 4401              	.LFB66:
1975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
 4402              		.loc 1 1975 0
 4403              		.cfi_startproc
 4404              		@ args = 0, pretend = 0, frame = 0
 4405              		@ frame_needed = 0, uses_anonymous_args = 0
 4406              	.LVL371:
 4407 0000 10B5     		push	{r4, lr}
 4408              	.LCFI37:
 4409              		.cfi_def_cfa_offset 8
 4410              		.cfi_offset 4, -8
 4411              		.cfi_offset 14, -4
1977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4412              		.loc 1 1977 0
 4413 0002 6823     		movs	r3, #104
 4414 0004 C35C     		ldrb	r3, [r0, r3]
 4415 0006 012B     		cmp	r3, #1
 4416 0008 01D1     		bne	.L324
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 134


 4417 000a 0220     		movs	r0, #2
 4418              	.LVL372:
 4419              	.L322:
1987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4420              		.loc 1 1987 0
 4421              		@ sp needed
 4422 000c 10BD     		pop	{r4, pc}
 4423              	.LVL373:
 4424              	.L324:
1977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4425              		.loc 1 1977 0 discriminator 2
 4426 000e 0122     		movs	r2, #1
 4427 0010 6823     		movs	r3, #104
 4428 0012 C254     		strb	r2, [r0, r3]
1979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4429              		.loc 1 1979 0 discriminator 2
 4430 0014 6832     		adds	r2, r2, #104
 4431 0016 443B     		subs	r3, r3, #68
 4432 0018 8354     		strb	r3, [r0, r2]
1982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4433              		.loc 1 1982 0 discriminator 2
 4434 001a 0168     		ldr	r1, [r0]
 4435 001c 0B68     		ldr	r3, [r1]
 4436 001e 044C     		ldr	r4, .L325
 4437 0020 2340     		ands	r3, r4
 4438 0022 0B60     		str	r3, [r1]
1984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4439              		.loc 1 1984 0 discriminator 2
 4440 0024 2023     		movs	r3, #32
 4441 0026 8354     		strb	r3, [r0, r2]
1986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 4442              		.loc 1 1986 0 discriminator 2
 4443 0028 FFF7FEFF 		bl	UART_CheckIdleState
 4444              	.LVL374:
 4445 002c EEE7     		b	.L322
 4446              	.L326:
 4447 002e C046     		.align	2
 4448              	.L325:
 4449 0030 FFDFFFFF 		.word	-8193
 4450              		.cfi_endproc
 4451              	.LFE66:
 4453              		.section	.text.UART_Transmit_IT,"ax",%progbits
 4454              		.align	1
 4455              		.global	UART_Transmit_IT
 4456              		.syntax unified
 4457              		.code	16
 4458              		.thumb_func
 4459              		.fpu softvfp
 4461              	UART_Transmit_IT:
 4462              	.LFB88:
2661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Send an amount of data in interrupt mode.
2664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   Function is called under interruption only, once
2665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
2666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 135


2668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
2670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 4463              		.loc 1 2670 0
 4464              		.cfi_startproc
 4465              		@ args = 0, pretend = 0, frame = 0
 4466              		@ frame_needed = 0, uses_anonymous_args = 0
 4467              		@ link register save eliminated.
 4468              	.LVL375:
2671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t* tmp;
2672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
2674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 4469              		.loc 1 2674 0
 4470 0000 6923     		movs	r3, #105
 4471 0002 C35C     		ldrb	r3, [r0, r3]
 4472 0004 212B     		cmp	r3, #33
 4473 0006 01D0     		beq	.L333
2675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->TxXferCount == 0U)
2677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
2679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
2680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
2682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
2683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_OK;
2685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
2687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
2689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         tmp = (uint16_t*) huart->pTxBuffPtr;
2691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
2692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
2693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
2695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0xFFU);
2697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxXferCount--;
2699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_OK;
2701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
2704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 4474              		.loc 1 2705 0
 4475 0008 0220     		movs	r0, #2
 4476              	.LVL376:
 4477              	.L328:
2706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 4478              		.loc 1 2707 0
 4479              		@ sp needed
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 136


 4480 000a 7047     		bx	lr
 4481              	.LVL377:
 4482              	.L333:
2676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4483              		.loc 1 2676 0
 4484 000c 3133     		adds	r3, r3, #49
 4485 000e C35A     		ldrh	r3, [r0, r3]
 4486 0010 9BB2     		uxth	r3, r3
 4487 0012 002B     		cmp	r3, #0
 4488 0014 11D0     		beq	.L334
2688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 4489              		.loc 1 2688 0
 4490 0016 8023     		movs	r3, #128
 4491 0018 5B01     		lsls	r3, r3, #5
 4492 001a 8268     		ldr	r2, [r0, #8]
 4493 001c 9A42     		cmp	r2, r3
 4494 001e 18D0     		beq	.L335
 4495              	.L330:
2696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 4496              		.loc 1 2696 0
 4497 0020 C36C     		ldr	r3, [r0, #76]
 4498 0022 5A1C     		adds	r2, r3, #1
 4499 0024 C264     		str	r2, [r0, #76]
 4500 0026 1B78     		ldrb	r3, [r3]
 4501 0028 0268     		ldr	r2, [r0]
 4502 002a 1385     		strh	r3, [r2, #40]
 4503              	.L331:
2698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4504              		.loc 1 2698 0
 4505 002c 5222     		movs	r2, #82
 4506 002e 835A     		ldrh	r3, [r0, r2]
 4507 0030 013B     		subs	r3, r3, #1
 4508 0032 9BB2     		uxth	r3, r3
 4509 0034 8352     		strh	r3, [r0, r2]
2700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 4510              		.loc 1 2700 0
 4511 0036 0020     		movs	r0, #0
 4512              	.LVL378:
 4513 0038 E7E7     		b	.L328
 4514              	.LVL379:
 4515              	.L334:
2679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4516              		.loc 1 2679 0
 4517 003a 0268     		ldr	r2, [r0]
 4518 003c 1368     		ldr	r3, [r2]
 4519 003e 8021     		movs	r1, #128
 4520 0040 8B43     		bics	r3, r1
 4521 0042 1360     		str	r3, [r2]
2682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4522              		.loc 1 2682 0
 4523 0044 0268     		ldr	r2, [r0]
 4524 0046 1368     		ldr	r3, [r2]
 4525 0048 4039     		subs	r1, r1, #64
 4526 004a 0B43     		orrs	r3, r1
 4527 004c 1360     		str	r3, [r2]
2684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 4528              		.loc 1 2684 0
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 137


 4529 004e 0020     		movs	r0, #0
 4530              	.LVL380:
 4531 0050 DBE7     		b	.L328
 4532              	.LVL381:
 4533              	.L335:
2688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 4534              		.loc 1 2688 0 discriminator 1
 4535 0052 0369     		ldr	r3, [r0, #16]
 4536 0054 002B     		cmp	r3, #0
 4537 0056 E3D1     		bne	.L330
 4538              	.LVL382:
2691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
 4539              		.loc 1 2691 0
 4540 0058 C36C     		ldr	r3, [r0, #76]
 4541 005a 1B88     		ldrh	r3, [r3]
 4542 005c DB05     		lsls	r3, r3, #23
 4543 005e DB0D     		lsrs	r3, r3, #23
 4544 0060 0268     		ldr	r2, [r0]
 4545 0062 1385     		strh	r3, [r2, #40]
 4546              	.LVL383:
2692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 4547              		.loc 1 2692 0
 4548 0064 C36C     		ldr	r3, [r0, #76]
 4549 0066 0233     		adds	r3, r3, #2
 4550 0068 C364     		str	r3, [r0, #76]
 4551 006a DFE7     		b	.L331
 4552              		.cfi_endproc
 4553              	.LFE88:
 4555              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 4556              		.align	1
 4557              		.global	UART_EndTransmit_IT
 4558              		.syntax unified
 4559              		.code	16
 4560              		.thumb_func
 4561              		.fpu softvfp
 4563              	UART_EndTransmit_IT:
 4564              	.LFB89:
2708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Wrap up transmission in non-blocking mode.
2711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
2712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *               the configuration information for the specified UART module.
2713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
2716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 4565              		.loc 1 2716 0
 4566              		.cfi_startproc
 4567              		@ args = 0, pretend = 0, frame = 0
 4568              		@ frame_needed = 0, uses_anonymous_args = 0
 4569              	.LVL384:
 4570 0000 10B5     		push	{r4, lr}
 4571              	.LCFI38:
 4572              		.cfi_def_cfa_offset 8
 4573              		.cfi_offset 4, -8
 4574              		.cfi_offset 14, -4
2717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 138


2718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 4575              		.loc 1 2718 0
 4576 0002 0268     		ldr	r2, [r0]
 4577 0004 1368     		ldr	r3, [r2]
 4578 0006 4021     		movs	r1, #64
 4579 0008 8B43     		bics	r3, r1
 4580 000a 1360     		str	r3, [r2]
2719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
2721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4581              		.loc 1 2721 0
 4582 000c 2022     		movs	r2, #32
 4583 000e 6923     		movs	r3, #105
 4584 0010 C254     		strb	r2, [r0, r3]
2722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 4585              		.loc 1 2723 0
 4586 0012 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 4587              	.LVL385:
2724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
2726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 4588              		.loc 1 2726 0
 4589 0016 0020     		movs	r0, #0
 4590              		@ sp needed
 4591 0018 10BD     		pop	{r4, pc}
 4592              		.cfi_endproc
 4593              	.LFE89:
 4595              		.section	.text.UART_Receive_IT,"ax",%progbits
 4596              		.align	1
 4597              		.global	UART_Receive_IT
 4598              		.syntax unified
 4599              		.code	16
 4600              		.thumb_func
 4601              		.fpu softvfp
 4603              	UART_Receive_IT:
 4604              	.LFB90:
2727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Receive an amount of data in interrupt mode.
2730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   Function is called under interruption only, once
2731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
2732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
2736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 4605              		.loc 1 2736 0
 4606              		.cfi_startproc
 4607              		@ args = 0, pretend = 0, frame = 0
 4608              		@ frame_needed = 0, uses_anonymous_args = 0
 4609              	.LVL386:
 4610 0000 10B5     		push	{r4, lr}
 4611              	.LCFI39:
 4612              		.cfi_def_cfa_offset 8
 4613              		.cfi_offset 4, -8
 4614              		.cfi_offset 14, -4
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 139


2737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t* tmp;
2738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t  uhMask = huart->Mask;
 4615              		.loc 1 2738 0
 4616 0002 5C23     		movs	r3, #92
 4617 0004 C25A     		ldrh	r2, [r0, r3]
 4618              	.LVL387:
2739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t  uhdata;
2740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
2742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
 4619              		.loc 1 2742 0
 4620 0006 0E33     		adds	r3, r3, #14
 4621 0008 C35C     		ldrb	r3, [r0, r3]
 4622 000a 222B     		cmp	r3, #34
 4623 000c 06D0     		beq	.L343
2743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
2745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
2746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       tmp = (uint16_t*) huart->pRxBuffPtr ;
2748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       *tmp = (uint16_t)(uhdata & uhMask);
2749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->pRxBuffPtr +=2U;
2750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
2752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       *huart->pRxBuffPtr++ = (uint8_t)(uhdata & (uint8_t)uhMask);
2754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(--huart->RxXferCount == 0U)
2757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
2759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
2760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
2762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
2765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
2766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
2768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_OK;
2770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
2773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
2775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
2777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 4624              		.loc 1 2777 0
 4625 000e 0268     		ldr	r2, [r0]
 4626              	.LVL388:
 4627 0010 9369     		ldr	r3, [r2, #24]
 4628 0012 0821     		movs	r1, #8
 4629 0014 0B43     		orrs	r3, r1
 4630 0016 9361     		str	r3, [r2, #24]
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 140


 4631              	.LVL389:
2778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 4632              		.loc 1 2779 0
 4633 0018 0220     		movs	r0, #2
 4634              	.LVL390:
 4635              	.L341:
2780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 4636              		.loc 1 2781 0
 4637              		@ sp needed
 4638 001a 10BD     		pop	{r4, pc}
 4639              	.LVL391:
 4640              	.L343:
2744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 4641              		.loc 1 2744 0
 4642 001c 0368     		ldr	r3, [r0]
 4643 001e 9B8C     		ldrh	r3, [r3, #36]
 4644 0020 9BB2     		uxth	r3, r3
 4645              	.LVL392:
2745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4646              		.loc 1 2745 0
 4647 0022 8021     		movs	r1, #128
 4648 0024 4901     		lsls	r1, r1, #5
 4649 0026 8468     		ldr	r4, [r0, #8]
 4650 0028 8C42     		cmp	r4, r1
 4651 002a 0ED0     		beq	.L344
 4652              	.L339:
2753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 4653              		.loc 1 2753 0
 4654 002c 416D     		ldr	r1, [r0, #84]
 4655 002e 4C1C     		adds	r4, r1, #1
 4656 0030 4465     		str	r4, [r0, #84]
 4657 0032 D2B2     		uxtb	r2, r2
 4658              	.LVL393:
 4659 0034 1A40     		ands	r2, r3
 4660 0036 0A70     		strb	r2, [r1]
 4661              	.LVL394:
 4662              	.L340:
2756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4663              		.loc 1 2756 0
 4664 0038 5A22     		movs	r2, #90
 4665 003a 835A     		ldrh	r3, [r0, r2]
 4666 003c 013B     		subs	r3, r3, #1
 4667 003e 9BB2     		uxth	r3, r3
 4668 0040 8352     		strh	r3, [r0, r2]
 4669 0042 002B     		cmp	r3, #0
 4670 0044 0BD0     		beq	.L345
2772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 4671              		.loc 1 2772 0
 4672 0046 0020     		movs	r0, #0
 4673              	.LVL395:
 4674 0048 E7E7     		b	.L341
 4675              	.LVL396:
 4676              	.L344:
2745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4677              		.loc 1 2745 0 discriminator 1
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 141


 4678 004a 0169     		ldr	r1, [r0, #16]
 4679 004c 0029     		cmp	r1, #0
 4680 004e EDD1     		bne	.L339
 4681              	.LVL397:
2748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->pRxBuffPtr +=2U;
 4682              		.loc 1 2748 0
 4683 0050 1A40     		ands	r2, r3
 4684              	.LVL398:
 4685 0052 436D     		ldr	r3, [r0, #84]
 4686              	.LVL399:
 4687 0054 1A80     		strh	r2, [r3]
 4688              	.LVL400:
2749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 4689              		.loc 1 2749 0
 4690 0056 436D     		ldr	r3, [r0, #84]
 4691              	.LVL401:
 4692 0058 0233     		adds	r3, r3, #2
 4693 005a 4365     		str	r3, [r0, #84]
 4694 005c ECE7     		b	.L340
 4695              	.L345:
2759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4696              		.loc 1 2759 0
 4697 005e 0268     		ldr	r2, [r0]
 4698 0060 1368     		ldr	r3, [r2]
 4699 0062 0849     		ldr	r1, .L346
 4700 0064 0B40     		ands	r3, r1
 4701 0066 1360     		str	r3, [r2]
2762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4702              		.loc 1 2762 0
 4703 0068 0268     		ldr	r2, [r0]
 4704 006a 9368     		ldr	r3, [r2, #8]
 4705 006c 2331     		adds	r1, r1, #35
 4706 006e FF31     		adds	r1, r1, #255
 4707 0070 8B43     		bics	r3, r1
 4708 0072 9360     		str	r3, [r2, #8]
2765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4709              		.loc 1 2765 0
 4710 0074 2022     		movs	r2, #32
 4711 0076 6A23     		movs	r3, #106
 4712 0078 C254     		strb	r2, [r0, r3]
2767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4713              		.loc 1 2767 0
 4714 007a FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 4715              	.LVL402:
2769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 4716              		.loc 1 2769 0
 4717 007e 0020     		movs	r0, #0
 4718 0080 CBE7     		b	.L341
 4719              	.L347:
 4720 0082 C046     		.align	2
 4721              	.L346:
 4722 0084 DFFEFFFF 		.word	-289
 4723              		.cfi_endproc
 4724              	.LFE90:
 4726              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 4727              		.align	1
 4728              		.global	HAL_UART_IRQHandler
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 142


 4729              		.syntax unified
 4730              		.code	16
 4731              		.thumb_func
 4732              		.fpu softvfp
 4734              	HAL_UART_IRQHandler:
 4735              	.LFB56:
1657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 4736              		.loc 1 1657 0
 4737              		.cfi_startproc
 4738              		@ args = 0, pretend = 0, frame = 0
 4739              		@ frame_needed = 0, uses_anonymous_args = 0
 4740              	.LVL403:
 4741 0000 70B5     		push	{r4, r5, r6, lr}
 4742              	.LCFI40:
 4743              		.cfi_def_cfa_offset 16
 4744              		.cfi_offset 4, -16
 4745              		.cfi_offset 5, -12
 4746              		.cfi_offset 6, -8
 4747              		.cfi_offset 14, -4
 4748 0002 0400     		movs	r4, r0
1658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 4749              		.loc 1 1658 0
 4750 0004 0168     		ldr	r1, [r0]
 4751 0006 CB69     		ldr	r3, [r1, #28]
 4752              	.LVL404:
1659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t cr3its;
 4753              		.loc 1 1659 0
 4754 0008 0868     		ldr	r0, [r1]
 4755              	.LVL405:
1664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (errorflags == RESET)
 4756              		.loc 1 1664 0
 4757 000a 0F22     		movs	r2, #15
 4758 000c 1A40     		ands	r2, r3
 4759              	.LVL406:
1665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4760              		.loc 1 1665 0
 4761 000e 03D1     		bne	.L349
1668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4762              		.loc 1 1668 0
 4763 0010 9D06     		lsls	r5, r3, #26
 4764 0012 01D5     		bpl	.L349
1668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4765              		.loc 1 1668 0 is_stmt 0 discriminator 1
 4766 0014 8506     		lsls	r5, r0, #26
 4767 0016 5BD4     		bmi	.L365
 4768              	.L349:
1676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(   (errorflags != RESET)
 4769              		.loc 1 1676 0 is_stmt 1
 4770 0018 8D68     		ldr	r5, [r1, #8]
 4771              	.LVL407:
1677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      && (   ((cr3its & USART_CR3_EIE) != RESET)
 4772              		.loc 1 1677 0
 4773 001a 002A     		cmp	r2, #0
 4774 001c 6ED0     		beq	.L351
1678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)) )
 4775              		.loc 1 1678 0
 4776 001e 0122     		movs	r2, #1
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 143


 4777              	.LVL408:
 4778 0020 2A40     		ands	r2, r5
 4779 0022 03D1     		bne	.L352
1679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4780              		.loc 1 1679 0
 4781 0024 9026     		movs	r6, #144
 4782 0026 7600     		lsls	r6, r6, #1
 4783 0028 3042     		tst	r0, r6
 4784 002a 67D0     		beq	.L351
 4785              	.L352:
1682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4786              		.loc 1 1682 0
 4787 002c DD07     		lsls	r5, r3, #31
 4788 002e 06D5     		bpl	.L353
 4789              	.LVL409:
1682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4790              		.loc 1 1682 0 is_stmt 0 discriminator 1
 4791 0030 C505     		lsls	r5, r0, #23
 4792 0032 04D5     		bpl	.L353
1684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4793              		.loc 1 1684 0 is_stmt 1
 4794 0034 0125     		movs	r5, #1
 4795 0036 0D62     		str	r5, [r1, #32]
1686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 4796              		.loc 1 1686 0
 4797 0038 E16E     		ldr	r1, [r4, #108]
 4798 003a 2943     		orrs	r1, r5
 4799 003c E166     		str	r1, [r4, #108]
 4800              	.L353:
1690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4801              		.loc 1 1690 0
 4802 003e 9907     		lsls	r1, r3, #30
 4803 0040 08D5     		bpl	.L354
1690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4804              		.loc 1 1690 0 is_stmt 0 discriminator 1
 4805 0042 002A     		cmp	r2, #0
 4806 0044 06D0     		beq	.L354
1692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4807              		.loc 1 1692 0 is_stmt 1
 4808 0046 2168     		ldr	r1, [r4]
 4809 0048 0225     		movs	r5, #2
 4810 004a 0D62     		str	r5, [r1, #32]
1694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 4811              		.loc 1 1694 0
 4812 004c E16E     		ldr	r1, [r4, #108]
 4813 004e 0235     		adds	r5, r5, #2
 4814 0050 2943     		orrs	r1, r5
 4815 0052 E166     		str	r1, [r4, #108]
 4816              	.L354:
1698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4817              		.loc 1 1698 0
 4818 0054 5907     		lsls	r1, r3, #29
 4819 0056 08D5     		bpl	.L355
1698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4820              		.loc 1 1698 0 is_stmt 0 discriminator 1
 4821 0058 002A     		cmp	r2, #0
 4822 005a 06D0     		beq	.L355
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 144


1700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4823              		.loc 1 1700 0 is_stmt 1
 4824 005c 2168     		ldr	r1, [r4]
 4825 005e 0425     		movs	r5, #4
 4826 0060 0D62     		str	r5, [r1, #32]
1702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 4827              		.loc 1 1702 0
 4828 0062 E16E     		ldr	r1, [r4, #108]
 4829 0064 023D     		subs	r5, r5, #2
 4830 0066 2943     		orrs	r1, r5
 4831 0068 E166     		str	r1, [r4, #108]
 4832              	.L355:
1706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
 4833              		.loc 1 1706 0
 4834 006a 1907     		lsls	r1, r3, #28
 4835 006c 09D5     		bpl	.L356
1706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
 4836              		.loc 1 1706 0 is_stmt 0 discriminator 1
 4837 006e 8106     		lsls	r1, r0, #26
 4838 0070 01D4     		bmi	.L357
1707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4839              		.loc 1 1707 0 is_stmt 1
 4840 0072 002A     		cmp	r2, #0
 4841 0074 05D0     		beq	.L356
 4842              	.L357:
1709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4843              		.loc 1 1709 0
 4844 0076 2268     		ldr	r2, [r4]
 4845 0078 0821     		movs	r1, #8
 4846 007a 1162     		str	r1, [r2, #32]
1711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 4847              		.loc 1 1711 0
 4848 007c E26E     		ldr	r2, [r4, #108]
 4849 007e 0A43     		orrs	r2, r1
 4850 0080 E266     		str	r2, [r4, #108]
 4851              	.L356:
1715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4852              		.loc 1 1715 0
 4853 0082 E26E     		ldr	r2, [r4, #108]
 4854 0084 002A     		cmp	r2, #0
 4855 0086 45D0     		beq	.L348
1718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 4856              		.loc 1 1718 0
 4857 0088 9B06     		lsls	r3, r3, #26
 4858 008a 01D5     		bpl	.L358
 4859              	.LVL410:
1718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 4860              		.loc 1 1718 0 is_stmt 0 discriminator 1
 4861 008c 8306     		lsls	r3, r0, #26
 4862 008e 23D4     		bmi	.L366
 4863              	.LVL411:
 4864              	.L358:
1725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 4865              		.loc 1 1725 0 is_stmt 1
 4866 0090 E36E     		ldr	r3, [r4, #108]
 4867 0092 1B07     		lsls	r3, r3, #28
 4868 0094 03D4     		bmi	.L359
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 145


1726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {  
 4869              		.loc 1 1726 0 discriminator 1
 4870 0096 2368     		ldr	r3, [r4]
 4871 0098 9B68     		ldr	r3, [r3, #8]
1725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 4872              		.loc 1 1725 0 discriminator 1
 4873 009a 5B06     		lsls	r3, r3, #25
 4874 009c 28D5     		bpl	.L360
 4875              	.L359:
1731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4876              		.loc 1 1731 0
 4877 009e 2000     		movs	r0, r4
 4878 00a0 FFF7FEFF 		bl	UART_EndRxTransfer
 4879              	.LVL412:
1734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
 4880              		.loc 1 1734 0
 4881 00a4 2368     		ldr	r3, [r4]
 4882 00a6 9A68     		ldr	r2, [r3, #8]
 4883 00a8 5206     		lsls	r2, r2, #25
 4884 00aa 1DD5     		bpl	.L361
1736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4885              		.loc 1 1736 0
 4886 00ac 9A68     		ldr	r2, [r3, #8]
 4887 00ae 4021     		movs	r1, #64
 4888 00b0 8A43     		bics	r2, r1
 4889 00b2 9A60     		str	r2, [r3, #8]
1739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           {
 4890              		.loc 1 1739 0
 4891 00b4 636E     		ldr	r3, [r4, #100]
 4892 00b6 002B     		cmp	r3, #0
 4893 00b8 12D0     		beq	.L362
1743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4894              		.loc 1 1743 0
 4895 00ba 214A     		ldr	r2, .L370
 4896 00bc 5A63     		str	r2, [r3, #52]
1746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             {
 4897              		.loc 1 1746 0
 4898 00be 606E     		ldr	r0, [r4, #100]
 4899 00c0 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4900              	.LVL413:
 4901 00c4 0028     		cmp	r0, #0
 4902 00c6 25D0     		beq	.L348
1749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             }
 4903              		.loc 1 1749 0
 4904 00c8 606E     		ldr	r0, [r4, #100]
 4905 00ca 436B     		ldr	r3, [r0, #52]
 4906 00cc 9847     		blx	r3
 4907              	.LVL414:
 4908 00ce 21E0     		b	.L348
 4909              	.LVL415:
 4910              	.L365:
1670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return;
 4911              		.loc 1 1670 0
 4912 00d0 2000     		movs	r0, r4
 4913              	.LVL416:
 4914 00d2 FFF7FEFF 		bl	UART_Receive_IT
 4915              	.LVL417:
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 146


1671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 4916              		.loc 1 1671 0
 4917 00d6 1DE0     		b	.L348
 4918              	.LVL418:
 4919              	.L366:
1720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 4920              		.loc 1 1720 0
 4921 00d8 2000     		movs	r0, r4
 4922              	.LVL419:
 4923 00da FFF7FEFF 		bl	UART_Receive_IT
 4924              	.LVL420:
 4925 00de D7E7     		b	.L358
 4926              	.L362:
1755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           }
 4927              		.loc 1 1755 0
 4928 00e0 2000     		movs	r0, r4
 4929 00e2 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 4930              	.LVL421:
 4931 00e6 15E0     		b	.L348
 4932              	.L361:
1761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
 4933              		.loc 1 1761 0
 4934 00e8 2000     		movs	r0, r4
 4935 00ea FFF7FEFF 		bl	HAL_UART_ErrorCallback
 4936              	.LVL422:
 4937 00ee 11E0     		b	.L348
 4938              	.L360:
1768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
 4939              		.loc 1 1768 0
 4940 00f0 2000     		movs	r0, r4
 4941 00f2 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 4942              	.LVL423:
1769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 4943              		.loc 1 1769 0
 4944 00f6 0023     		movs	r3, #0
 4945 00f8 E366     		str	r3, [r4, #108]
 4946 00fa 0BE0     		b	.L348
 4947              	.LVL424:
 4948              	.L351:
1778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4949              		.loc 1 1778 0
 4950 00fc DA02     		lsls	r2, r3, #11
 4951 00fe 01D5     		bpl	.L363
1778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4952              		.loc 1 1778 0 is_stmt 0 discriminator 1
 4953 0100 6A02     		lsls	r2, r5, #9
 4954 0102 08D4     		bmi	.L367
 4955              	.L363:
1790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4956              		.loc 1 1790 0 is_stmt 1
 4957 0104 1A06     		lsls	r2, r3, #24
 4958 0106 01D5     		bpl	.L364
1790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4959              		.loc 1 1790 0 is_stmt 0 discriminator 1
 4960 0108 0206     		lsls	r2, r0, #24
 4961 010a 10D4     		bmi	.L368
 4962              	.L364:
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 147


1797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4963              		.loc 1 1797 0 is_stmt 1
 4964 010c 5B06     		lsls	r3, r3, #25
 4965 010e 01D5     		bpl	.L348
 4966              	.LVL425:
1797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4967              		.loc 1 1797 0 is_stmt 0 discriminator 1
 4968 0110 4306     		lsls	r3, r0, #25
 4969 0112 10D4     		bmi	.L369
 4970              	.LVL426:
 4971              	.L348:
1803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4972              		.loc 1 1803 0 is_stmt 1
 4973              		@ sp needed
 4974              	.LVL427:
 4975 0114 70BD     		pop	{r4, r5, r6, pc}
 4976              	.LVL428:
 4977              	.L367:
1780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the UART state ready to be able to start again the process */
 4978              		.loc 1 1780 0
 4979 0116 8023     		movs	r3, #128
 4980              	.LVL429:
 4981 0118 5B03     		lsls	r3, r3, #13
 4982 011a 0B62     		str	r3, [r1, #32]
1782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 4983              		.loc 1 1782 0
 4984 011c 2023     		movs	r3, #32
 4985 011e 6922     		movs	r2, #105
 4986 0120 A354     		strb	r3, [r4, r2]
1783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
 4987              		.loc 1 1783 0
 4988 0122 0132     		adds	r2, r2, #1
 4989 0124 A354     		strb	r3, [r4, r2]
1784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return;
 4990              		.loc 1 1784 0
 4991 0126 2000     		movs	r0, r4
 4992              	.LVL430:
 4993 0128 FFF7FEFF 		bl	HAL_UARTEx_WakeupCallback
 4994              	.LVL431:
1785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 4995              		.loc 1 1785 0
 4996 012c F2E7     		b	.L348
 4997              	.LVL432:
 4998              	.L368:
1792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return;
 4999              		.loc 1 1792 0
 5000 012e 2000     		movs	r0, r4
 5001              	.LVL433:
 5002 0130 FFF7FEFF 		bl	UART_Transmit_IT
 5003              	.LVL434:
1793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 5004              		.loc 1 1793 0
 5005 0134 EEE7     		b	.L348
 5006              	.LVL435:
 5007              	.L369:
1799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return;
 5008              		.loc 1 1799 0
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 148


 5009 0136 2000     		movs	r0, r4
 5010              	.LVL436:
 5011 0138 FFF7FEFF 		bl	UART_EndTransmit_IT
 5012              	.LVL437:
1800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 5013              		.loc 1 1800 0
 5014 013c EAE7     		b	.L348
 5015              	.L371:
 5016 013e C046     		.align	2
 5017              	.L370:
 5018 0140 00000000 		.word	UART_DMAAbortOnError
 5019              		.cfi_endproc
 5020              	.LFE56:
 5022              		.text
 5023              	.Letext0:
 5024              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q1-update\\arm-none-eabi\\include
 5025              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q1-update\\arm-none-eabi\\include
 5026              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 5027              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 5028              		.file 6 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 5029              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q1-update\\arm-none-eabi\\include
 5030              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q1-update\\arm-none-eabi\\include
 5031              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q1-update\\lib\\gcc\\arm-none-eab
 5032              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q1-update\\arm-none-eabi\\includ
 5033              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 5034              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 5035              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_uart.h"
 5036              		.file 14 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 5037              		.file 15 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 5038              		.file 16 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_uart_ex.h"
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 149


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f0xx_hal_uart.c
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:16     .text.UART_EndTxTransfer:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:22     .text.UART_EndTxTransfer:00000000 UART_EndTxTransfer
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:48     .text.UART_EndRxTransfer:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:54     .text.UART_EndRxTransfer:00000000 UART_EndRxTransfer
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:85     .text.UART_EndRxTransfer:00000020 $d
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:90     .text.HAL_UART_MspInit:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:97     .text.HAL_UART_MspInit:00000000 HAL_UART_MspInit
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:112    .text.HAL_UART_MspDeInit:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:119    .text.HAL_UART_MspDeInit:00000000 HAL_UART_MspDeInit
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:134    .text.HAL_UART_DeInit:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:141    .text.HAL_UART_DeInit:00000000 HAL_UART_DeInit
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:208    .text.HAL_UART_Transmit_IT:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:215    .text.HAL_UART_Transmit_IT:00000000 HAL_UART_Transmit_IT
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:323    .text.HAL_UART_Receive_IT:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:330    .text.HAL_UART_Receive_IT:00000000 HAL_UART_Receive_IT
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:524    .text.HAL_UART_Receive_IT:000000d0 $d
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:529    .text.HAL_UART_Transmit_DMA:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:536    .text.HAL_UART_Transmit_DMA:00000000 HAL_UART_Transmit_DMA
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:670    .text.HAL_UART_Transmit_DMA:0000009c $d
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:1401   .text.UART_DMATransmitCplt:00000000 UART_DMATransmitCplt
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:1484   .text.UART_DMATxHalfCplt:00000000 UART_DMATxHalfCplt
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:1682   .text.UART_DMAError:00000000 UART_DMAError
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:677    .text.HAL_UART_Receive_DMA:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:684    .text.HAL_UART_Receive_DMA:00000000 HAL_UART_Receive_DMA
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:824    .text.HAL_UART_Receive_DMA:000000a4 $d
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:1537   .text.UART_DMAReceiveCplt:00000000 UART_DMAReceiveCplt
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:1629   .text.UART_DMARxHalfCplt:00000000 UART_DMARxHalfCplt
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:831    .text.HAL_UART_DMAPause:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:838    .text.HAL_UART_DMAPause:00000000 HAL_UART_DMAPause
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:926    .text.HAL_UART_DMAPause:00000068 $d
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:931    .text.HAL_UART_DMAResume:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:938    .text.HAL_UART_DMAResume:00000000 HAL_UART_DMAResume
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:1021   .text.HAL_UART_DMAStop:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:1028   .text.HAL_UART_DMAStop:00000000 HAL_UART_DMAStop
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:1115   .text.HAL_UART_Abort:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:1122   .text.HAL_UART_Abort:00000000 HAL_UART_Abort
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:1221   .text.HAL_UART_Abort:0000007c $d
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:1226   .text.HAL_UART_AbortTransmit:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:1233   .text.HAL_UART_AbortTransmit:00000000 HAL_UART_AbortTransmit
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:1292   .text.HAL_UART_AbortReceive:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:1299   .text.HAL_UART_AbortReceive:00000000 HAL_UART_AbortReceive
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:1368   .text.HAL_UART_AbortReceive:00000050 $d
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:1373   .text.HAL_UART_TxCpltCallback:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:1380   .text.HAL_UART_TxCpltCallback:00000000 HAL_UART_TxCpltCallback
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:1395   .text.UART_DMATransmitCplt:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:1456   .text.HAL_UART_TxHalfCpltCallback:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:1463   .text.HAL_UART_TxHalfCpltCallback:00000000 HAL_UART_TxHalfCpltCallback
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:1478   .text.UART_DMATxHalfCplt:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:1509   .text.HAL_UART_RxCpltCallback:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:1516   .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:1531   .text.UART_DMAReceiveCplt:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:1596   .text.UART_DMAReceiveCplt:00000040 $d
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:1601   .text.HAL_UART_RxHalfCpltCallback:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:1608   .text.HAL_UART_RxHalfCpltCallback:00000000 HAL_UART_RxHalfCpltCallback
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:1623   .text.UART_DMARxHalfCplt:00000000 $t
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 150


C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:1654   .text.HAL_UART_ErrorCallback:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:1661   .text.HAL_UART_ErrorCallback:00000000 HAL_UART_ErrorCallback
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:1676   .text.UART_DMAError:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:1759   .text.UART_DMAAbortOnError:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:1765   .text.UART_DMAAbortOnError:00000000 UART_DMAAbortOnError
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:1797   .text.HAL_UART_AbortCpltCallback:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:1804   .text.HAL_UART_AbortCpltCallback:00000000 HAL_UART_AbortCpltCallback
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:1819   .text.HAL_UART_Abort_IT:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:1826   .text.HAL_UART_Abort_IT:00000000 HAL_UART_Abort_IT
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:2009   .text.HAL_UART_Abort_IT:000000d4 $d
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:2090   .text.UART_DMATxAbortCallback:00000000 UART_DMATxAbortCallback
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:2022   .text.UART_DMARxAbortCallback:00000000 UART_DMARxAbortCallback
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:2016   .text.UART_DMARxAbortCallback:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:2084   .text.UART_DMATxAbortCallback:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:2152   .text.HAL_UART_AbortTransmitCpltCallback:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:2159   .text.HAL_UART_AbortTransmitCpltCallback:00000000 HAL_UART_AbortTransmitCpltCallback
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:2174   .text.HAL_UART_AbortTransmit_IT:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:2181   .text.HAL_UART_AbortTransmit_IT:00000000 HAL_UART_AbortTransmit_IT
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:2269   .text.HAL_UART_AbortTransmit_IT:00000064 $d
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:2280   .text.UART_DMATxOnlyAbortCallback:00000000 UART_DMATxOnlyAbortCallback
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:2274   .text.UART_DMATxOnlyAbortCallback:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:2313   .text.HAL_UART_AbortReceiveCpltCallback:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:2320   .text.HAL_UART_AbortReceiveCpltCallback:00000000 HAL_UART_AbortReceiveCpltCallback
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:2335   .text.HAL_UART_AbortReceive_IT:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:2342   .text.HAL_UART_AbortReceive_IT:00000000 HAL_UART_AbortReceive_IT
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:2444   .text.HAL_UART_AbortReceive_IT:00000078 $d
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:2456   .text.UART_DMARxOnlyAbortCallback:00000000 UART_DMARxOnlyAbortCallback
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:2450   .text.UART_DMARxOnlyAbortCallback:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:2493   .text.HAL_MultiProcessor_EnterMuteMode:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:2500   .text.HAL_MultiProcessor_EnterMuteMode:00000000 HAL_MultiProcessor_EnterMuteMode
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:2521   .text.HAL_HalfDuplex_EnableTransmitter:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:2528   .text.HAL_HalfDuplex_EnableTransmitter:00000000 HAL_HalfDuplex_EnableTransmitter
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:2589   .text.HAL_HalfDuplex_EnableReceiver:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:2596   .text.HAL_HalfDuplex_EnableReceiver:00000000 HAL_HalfDuplex_EnableReceiver
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:2657   .text.HAL_UART_GetState:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:2664   .text.HAL_UART_GetState:00000000 HAL_UART_GetState
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:2690   .text.HAL_UART_GetError:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:2697   .text.HAL_UART_GetError:00000000 HAL_UART_GetError
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:2716   .text.UART_SetConfig:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:2723   .text.UART_SetConfig:00000000 UART_SetConfig
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:3105   .text.UART_SetConfig:000001e0 $d
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:3119   .text.UART_AdvFeatureConfig:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:3126   .text.UART_AdvFeatureConfig:00000000 UART_AdvFeatureConfig
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:3260   .text.UART_AdvFeatureConfig:000000bc $d
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:3273   .text.UART_WaitOnFlagUntilTimeout:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:3280   .text.UART_WaitOnFlagUntilTimeout:00000000 UART_WaitOnFlagUntilTimeout
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:3373   .text.UART_WaitOnFlagUntilTimeout:00000068 $d
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:3378   .text.HAL_UART_Transmit:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:3385   .text.HAL_UART_Transmit:00000000 HAL_UART_Transmit
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:3586   .text.HAL_UART_Receive:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:3593   .text.HAL_UART_Receive:00000000 HAL_UART_Receive
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:3852   .text.HAL_UART_Receive:00000130 $d
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:3857   .text.UART_CheckIdleState:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:3864   .text.UART_CheckIdleState:00000000 UART_CheckIdleState
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:3970   .text.UART_CheckIdleState:00000078 $d
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:3977   .text.HAL_UART_Init:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:3984   .text.HAL_UART_Init:00000000 HAL_UART_Init
ARM GAS  C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s 			page 151


C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:4079   .text.HAL_UART_Init:0000006c $d
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:4084   .text.HAL_HalfDuplex_Init:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:4091   .text.HAL_HalfDuplex_Init:00000000 HAL_HalfDuplex_Init
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:4192   .text.HAL_HalfDuplex_Init:00000078 $d
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:4197   .text.HAL_MultiProcessor_Init:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:4204   .text.HAL_MultiProcessor_Init:00000000 HAL_MultiProcessor_Init
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:4329   .text.HAL_MultiProcessor_Init:00000098 $d
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:4335   .text.HAL_MultiProcessor_EnableMuteMode:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:4342   .text.HAL_MultiProcessor_EnableMuteMode:00000000 HAL_MultiProcessor_EnableMuteMode
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:4393   .text.HAL_MultiProcessor_DisableMuteMode:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:4400   .text.HAL_MultiProcessor_DisableMuteMode:00000000 HAL_MultiProcessor_DisableMuteMode
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:4449   .text.HAL_MultiProcessor_DisableMuteMode:00000030 $d
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:4454   .text.UART_Transmit_IT:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:4461   .text.UART_Transmit_IT:00000000 UART_Transmit_IT
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:4556   .text.UART_EndTransmit_IT:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:4563   .text.UART_EndTransmit_IT:00000000 UART_EndTransmit_IT
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:4596   .text.UART_Receive_IT:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:4603   .text.UART_Receive_IT:00000000 UART_Receive_IT
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:4722   .text.UART_Receive_IT:00000084 $d
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:4727   .text.HAL_UART_IRQHandler:00000000 $t
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:4734   .text.HAL_UART_IRQHandler:00000000 HAL_UART_IRQHandler
C:\Users\Raj\AppData\Local\Temp\cc3X7SD9.s:5018   .text.HAL_UART_IRQHandler:00000140 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_Abort_IT
__aeabi_uidiv
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetSysClockFreq
HAL_GetTick
HAL_UARTEx_WakeupCallback
