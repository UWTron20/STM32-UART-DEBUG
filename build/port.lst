ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"port.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.prvTaskExitError,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.code	16
  19              		.thumb_func
  20              		.fpu softvfp
  22              	prvTaskExitError:
  23              	.LFB1:
  24              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c"
   1:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****     All rights reserved
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
   7:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****     This file is part of the FreeRTOS distribution.
   8:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****     the terms of the GNU General Public License (version 2) as published by the
  11:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****     ***************************************************************************
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****     ***************************************************************************
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****     link: http://www.freertos.org/a00114.html
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****     ***************************************************************************
  26:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****      *                                                                       *
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****      *    robust, strictly quality controlled, supported, and cross          *
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****      *    platform software that is more than just the market leader, it     *
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****      *    is the industry's de facto standard.                               *
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****      *                                                                       *
  32:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****      *    Help yourself get started quickly while simultaneously helping     *
  33:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****      *    tutorial book, reference manual, or both:                          *
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s 			page 2


  35:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****      *                                                                       *
  37:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****     ***************************************************************************
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****     defined configASSERT()?
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****     embedded software for free we request you assist our global community by
  45:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****     participating in the support forum.
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****     be as productive as possible as early as possible.  Now you can receive
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
  63:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****     engineered and independently SIL3 certified version for use in safety and
  65:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****     mission critical applications that require provable dependability.
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****     1 tab == 4 spaces!
  68:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** */
  69:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** /*-----------------------------------------------------------
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****  * Implementation of functions defined in portable.h for the ARM CM0 port.
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****  *----------------------------------------------------------*/
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** /* Scheduler includes. */
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** #include "FreeRTOS.h"
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** #include "task.h"
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** #ifndef configSYSTICK_CLOCK_HZ
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	#define configSYSTICK_CLOCK_HZ configCPU_CLOCK_HZ
  80:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** #endif
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** /* Constants required to manipulate the NVIC. */
  83:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** #define portNVIC_SYSTICK_CTRL		(* ( ( volatile uint32_t *) 0xe000e010 ) )
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** #define portNVIC_SYSTICK_LOAD		(* ( ( volatile uint32_t *) 0xe000e014 ) )
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** #define portNVIC_SYSTICK_CURRENT_VALUE	(* ( ( volatile uint32_t * ) 0xe000e018 ))
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** #define portNVIC_INT_CTRL			( ( volatile uint32_t *) 0xe000ed04 )
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** #define portNVIC_SYSPRI2			( ( volatile uint32_t *) 0xe000ed20 )
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** #define portNVIC_SYSTICK_CLK		0x00000004
  89:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** #define portNVIC_SYSTICK_INT		0x00000002
  90:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** #define portNVIC_SYSTICK_ENABLE		0x00000001
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** #define portNVIC_SYSTICK_COUNT_FLAG	( 1UL << 16UL )
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s 			page 3


  92:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** #define portNVIC_PENDSVSET			0x10000000
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** #define portMIN_INTERRUPT_PRIORITY	( 255UL )
  94:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** #define portNVIC_PENDSV_PRI			( portMIN_INTERRUPT_PRIORITY << 16UL )
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** #define portNVIC_SYSTICK_PRI		( portMIN_INTERRUPT_PRIORITY << 24UL )
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** /* Constants required to set up the initial stack. */
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** #define portINITIAL_XPSR			( 0x01000000 )
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** /* The systick is a 24-bit counter. */
 101:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** #define portMAX_24_BIT_NUMBER				( 0xffffffUL )
 102:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** /* A fiddle factor to estimate the number of SysTick counts that would have
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** occurred while the SysTick counter is stopped during tickless idle
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** calculations. */
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** #define portMISSED_COUNTS_FACTOR			( 45UL )
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** /* Let the user override the pre-loading of the initial LR with the address of
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** prvTaskExitError() in case it messes up unwinding of the stack in the
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** debugger. */
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** #ifdef configTASK_RETURN_ADDRESS
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	#define portTASK_RETURN_ADDRESS	configTASK_RETURN_ADDRESS
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** #else
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	#define portTASK_RETURN_ADDRESS	prvTaskExitError
 115:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** #endif
 116:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** /* Each task maintains its own interrupt status in the critical nesting
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** variable. */
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** static UBaseType_t uxCriticalNesting = 0xaaaaaaaa;
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 121:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** /*
 122:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****  * Setup the timer to generate the tick interrupts.  The implementation in this
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****  * file is weak to allow application writers to change the timer used to
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****  * generate the tick interrupt.
 125:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****  */
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** void vPortSetupTimerInterrupt( void );
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** /*
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****  * Exception handlers.
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****  */
 131:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** void xPortPendSVHandler( void ) __attribute__ (( naked ));
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** void xPortSysTickHandler( void );
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** void vPortSVCHandler( void );
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** /*
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****  * Start first task is a separate function so it can be tested in isolation.
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****  */
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** static void vPortStartFirstTask( void ) __attribute__ (( naked ));
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 140:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** /*
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****  * Used to catch tasks that attempt to return from their implementing function.
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****  */
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** static void prvTaskExitError( void );
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** /*-----------------------------------------------------------*/
 146:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 147:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** /*
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****  * The number of SysTick increments that make up one tick period.
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s 			page 4


 149:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****  */
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** #if configUSE_TICKLESS_IDLE == 1
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	static unsigned long ulTimerCountsForOneTick = 0;
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** #endif /* configUSE_TICKLESS_IDLE */
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** /*
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****  * The maximum number of tick periods that can be suppressed is limited by the
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****  * 24 bit resolution of the SysTick timer.
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****  */
 158:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** #if configUSE_TICKLESS_IDLE == 1
 159:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	static unsigned long xMaximumPossibleSuppressedTicks = 0;
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** #endif /* configUSE_TICKLESS_IDLE */
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** /*
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****  * Compensate for the CPU cycles that pass while the SysTick is stopped (low
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****  * power functionality only.
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****  */
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** #if configUSE_TICKLESS_IDLE == 1
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	static unsigned long ulStoppedTimerCompensation = 0;
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** #endif /* configUSE_TICKLESS_IDLE */
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** /*-----------------------------------------------------------*/
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** /*
 173:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****  * See header file for description.
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****  */
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** StackType_t *pxPortInitialiseStack( StackType_t *pxTopOfStack, TaskFunction_t pxCode, void *pvParam
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** {
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	/* Simulate the stack frame as it would be created by a context switch
 178:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	interrupt. */
 179:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	pxTopOfStack--; /* Offset added to account for the way the MCU uses the stack on entry/exit of int
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	pxTopOfStack--;
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	*pxTopOfStack = ( StackType_t ) pxCode;	/* PC */
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	pxTopOfStack--;
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	pxTopOfStack -= 5;	/* R12, R3, R2 and R1. */
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	pxTopOfStack -= 8; /* R11..R4. */
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	return pxTopOfStack;
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** }
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** /*-----------------------------------------------------------*/
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** static void prvTaskExitError( void )
 194:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** {
  25              		.loc 1 194 0
  26              		.cfi_startproc
  27              		@ Volatile: function does not return.
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	/* A function that implements a task must not exit or attempt to return to
 196:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	its caller as there is nothing to return to.  If a task wants to exit it
 197:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	should instead call vTaskDelete( NULL ).
 198:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 199:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	Artificially force an assert() to be triggered if configASSERT() is
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s 			page 5


 200:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	defined, then stop here so application writers can catch the error. */
 201:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	configASSERT( uxCriticalNesting == ~0UL );
  31              		.loc 1 201 0
  32 0000 034B     		ldr	r3, .L5
  33 0002 1B68     		ldr	r3, [r3]
  34 0004 0133     		adds	r3, r3, #1
  35 0006 01D0     		beq	.L2
  36              		.loc 1 201 0 is_stmt 0 discriminator 1
  37              		.syntax divided
  38              	@ 201 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" 1
  39 0008 72B6     		 cpsid i 
  40              	@ 0 "" 2
  41              		.thumb
  42              		.syntax unified
  43              	.L3:
  44 000a FEE7     		b	.L3
  45              	.L2:
 202:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	portDISABLE_INTERRUPTS();
  46              		.loc 1 202 0 is_stmt 1
  47              		.syntax divided
  48              	@ 202 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" 1
  49 000c 72B6     		 cpsid i 
  50              	@ 0 "" 2
  51              		.thumb
  52              		.syntax unified
  53              	.L4:
  54 000e FEE7     		b	.L4
  55              	.L6:
  56              		.align	2
  57              	.L5:
  58 0010 00000000 		.word	.LANCHOR0
  59              		.cfi_endproc
  60              	.LFE1:
  62              		.section	.text.vPortStartFirstTask,"ax",%progbits
  63              		.align	1
  64              		.syntax unified
  65              		.code	16
  66              		.thumb_func
  67              		.fpu softvfp
  69              	vPortStartFirstTask:
  70              	.LFB3:
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	for( ;; );
 204:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** }
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** /*-----------------------------------------------------------*/
 206:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** void vPortSVCHandler( void )
 208:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** {
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	/* This function is no longer used, but retained for backward
 210:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	compatibility. */
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** }
 212:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** /*-----------------------------------------------------------*/
 213:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 214:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** void vPortStartFirstTask( void )
 215:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** {
  71              		.loc 1 215 0
  72              		.cfi_startproc
  73              		@ Naked Function: prologue and epilogue provided by programmer.
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s 			page 6


  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
 216:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	/* The MSP stack is not reset as, unlike on M3/4 parts, there is no vector
 217:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	table offset register that can be used to locate the initial stack value.
 218:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	Not all M0 parts have the application vector table at address 0. */
 219:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	__asm volatile(
  76              		.loc 1 219 0
  77              		.syntax divided
  78              	@ 219 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" 1
  79 0000 0B4A     			ldr	r2, pxCurrentTCBConst2	
  80 0002 1368     		ldr r3, [r2]				
  81 0004 1868     		ldr r0, [r3]				
  82 0006 2030     		add r0, #32					
  83 0008 80F30988 		msr psp, r0					
  84 000c 0220     		movs r0, #2					
  85 000e 80F31488 		msr CONTROL, r0				
  86 0012 BFF36F8F 		isb							
  87 0016 3FBC     		pop {r0-r5}					
  88 0018 AE46     		mov lr, r5					
  89 001a 08BC     		pop {r3}					
  90 001c 04BC     		pop {r2}					
  91 001e 62B6     		cpsie i						
  92 0020 1847     		bx r3						
  93              									
  94 0022 C046C046 		.align 4					
  94      C046C046 
  94      C046C046 
  94      C046
  95 0030 00000000 	pxCurrentTCBConst2: .word pxCurrentTCB	  
  96              	@ 0 "" 2
 220:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	"	ldr	r2, pxCurrentTCBConst2	\n" /* Obtain location of pxCurrentTCB. */
 221:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	"	ldr r3, [r2]				\n"
 222:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	"	ldr r0, [r3]				\n" /* The first item in pxCurrentTCB is the task top of stack. */
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	"	add r0, #32					\n" /* Discard everything up to r0. */
 224:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	"	msr psp, r0					\n" /* This is now the new top of stack to use in the task. */
 225:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	"	movs r0, #2					\n" /* Switch to the psp stack. */
 226:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	"	msr CONTROL, r0				\n"
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	"	isb							\n"
 228:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	"	pop {r0-r5}					\n" /* Pop the registers that are saved automatically. */
 229:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	"	mov lr, r5					\n" /* lr is now in r5. */
 230:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	"	pop {r3}					\n" /* Return address is now in r3. */
 231:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	"	pop {r2}					\n" /* Pop and discard XPSR. */
 232:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	"	cpsie i						\n" /* The first task has its context and interrupts can be enabled. */
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	"	bx r3						\n" /* Finally, jump to the user defined task code. */
 234:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	"								\n"
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	"	.align 4					\n"
 236:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	"pxCurrentTCBConst2: .word pxCurrentTCB	  "
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 				  );
 238:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** }
  97              		.loc 1 238 0
  98              		.thumb
  99              		.syntax unified
 100              		.cfi_endproc
 101              	.LFE3:
 103              		.section	.text.pxPortInitialiseStack,"ax",%progbits
 104              		.align	1
 105              		.global	pxPortInitialiseStack
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s 			page 7


 106              		.syntax unified
 107              		.code	16
 108              		.thumb_func
 109              		.fpu softvfp
 111              	pxPortInitialiseStack:
 112              	.LFB0:
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	/* Simulate the stack frame as it would be created by a context switch
 113              		.loc 1 176 0
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 0
 116              		@ frame_needed = 0, uses_anonymous_args = 0
 117              	.LVL0:
 118 0000 10B5     		push	{r4, lr}
 119              	.LCFI0:
 120              		.cfi_def_cfa_offset 8
 121              		.cfi_offset 4, -8
 122              		.cfi_offset 14, -4
 123              	.LVL1:
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	pxTopOfStack--;
 124              		.loc 1 180 0
 125 0002 031F     		subs	r3, r0, #4
 126              	.LVL2:
 127 0004 8024     		movs	r4, #128
 128 0006 6404     		lsls	r4, r4, #17
 129 0008 1C60     		str	r4, [r3]
 130              	.LVL3:
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	pxTopOfStack--;
 131              		.loc 1 182 0
 132 000a 043B     		subs	r3, r3, #4
 133 000c 1960     		str	r1, [r3]
 134              	.LVL4:
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	pxTopOfStack -= 5;	/* R12, R3, R2 and R1. */
 135              		.loc 1 184 0
 136 000e 043B     		subs	r3, r3, #4
 137 0010 0249     		ldr	r1, .L9
 138              	.LVL5:
 139 0012 1960     		str	r1, [r3]
 140              	.LVL6:
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	pxTopOfStack -= 8; /* R11..R4. */
 141              		.loc 1 186 0
 142 0014 143B     		subs	r3, r3, #20
 143              	.LVL7:
 144 0016 1A60     		str	r2, [r3]
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 145              		.loc 1 187 0
 146 0018 4038     		subs	r0, r0, #64
 147              	.LVL8:
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** /*-----------------------------------------------------------*/
 148              		.loc 1 190 0
 149              		@ sp needed
 150 001a 10BD     		pop	{r4, pc}
 151              	.L10:
 152              		.align	2
 153              	.L9:
 154 001c 00000000 		.word	prvTaskExitError
 155              		.cfi_endproc
 156              	.LFE0:
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s 			page 8


 158              		.section	.text.SVC_Handler,"ax",%progbits
 159              		.align	1
 160              		.global	SVC_Handler
 161              		.syntax unified
 162              		.code	16
 163              		.thumb_func
 164              		.fpu softvfp
 166              	SVC_Handler:
 167              	.LFB2:
 208:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	/* This function is no longer used, but retained for backward
 168              		.loc 1 208 0
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 0, uses_anonymous_args = 0
 172              		@ link register save eliminated.
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** /*-----------------------------------------------------------*/
 173              		.loc 1 211 0
 174              		@ sp needed
 175 0000 7047     		bx	lr
 176              		.cfi_endproc
 177              	.LFE2:
 179              		.section	.text.vPortEndScheduler,"ax",%progbits
 180              		.align	1
 181              		.global	vPortEndScheduler
 182              		.syntax unified
 183              		.code	16
 184              		.thumb_func
 185              		.fpu softvfp
 187              	vPortEndScheduler:
 188              	.LFB5:
 239:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** /*-----------------------------------------------------------*/
 240:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 241:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** /*
 242:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****  * See header file for description.
 243:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****  */
 244:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** BaseType_t xPortStartScheduler( void )
 245:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** {
 246:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	/* Make PendSV, CallSV and SysTick the same priroity as the kernel. */
 247:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	*(portNVIC_SYSPRI2) |= portNVIC_PENDSV_PRI;
 248:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	*(portNVIC_SYSPRI2) |= portNVIC_SYSTICK_PRI;
 249:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 250:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	/* Start the timer that generates the tick ISR.  Interrupts are disabled
 251:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	here already. */
 252:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	vPortSetupTimerInterrupt();
 253:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 254:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	/* Initialise the critical nesting count ready for the first task. */
 255:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	uxCriticalNesting = 0;
 256:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 257:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	/* Start the first task. */
 258:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	vPortStartFirstTask();
 259:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 260:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	/* Should never get here as the tasks will now be executing!  Call the task
 261:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	exit error function to prevent compiler warnings about a static function
 262:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	not being called in the case that the application writer overrides this
 263:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	functionality by defining configTASK_RETURN_ADDRESS. */
 264:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	prvTaskExitError();
 265:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s 			page 9


 266:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	/* Should not get here! */
 267:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	return 0;
 268:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** }
 269:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** /*-----------------------------------------------------------*/
 270:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 271:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** void vPortEndScheduler( void )
 272:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** {
 189              		.loc 1 272 0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 0
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 193              		@ link register save eliminated.
 273:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	/* Not implemented in ports where there is nothing to return to.
 274:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	Artificially force an assert. */
 275:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	configASSERT( uxCriticalNesting == 1000UL );
 194              		.loc 1 275 0
 195 0000 044B     		ldr	r3, .L15
 196 0002 1A68     		ldr	r2, [r3]
 197 0004 FA23     		movs	r3, #250
 198 0006 9B00     		lsls	r3, r3, #2
 199 0008 9A42     		cmp	r2, r3
 200 000a 01D0     		beq	.L12
 201              		.loc 1 275 0 is_stmt 0 discriminator 1
 202              		.syntax divided
 203              	@ 275 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" 1
 204 000c 72B6     		 cpsid i 
 205              	@ 0 "" 2
 206              		.thumb
 207              		.syntax unified
 208              	.L14:
 209 000e FEE7     		b	.L14
 210              	.L12:
 276:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** }
 211              		.loc 1 276 0 is_stmt 1
 212              		@ sp needed
 213 0010 7047     		bx	lr
 214              	.L16:
 215 0012 C046     		.align	2
 216              	.L15:
 217 0014 00000000 		.word	.LANCHOR0
 218              		.cfi_endproc
 219              	.LFE5:
 221              		.section	.text.vPortYield,"ax",%progbits
 222              		.align	1
 223              		.global	vPortYield
 224              		.syntax unified
 225              		.code	16
 226              		.thumb_func
 227              		.fpu softvfp
 229              	vPortYield:
 230              	.LFB6:
 277:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** /*-----------------------------------------------------------*/
 278:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 279:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** void vPortYield( void )
 280:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** {
 231              		.loc 1 280 0
 232              		.cfi_startproc
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s 			page 10


 233              		@ args = 0, pretend = 0, frame = 0
 234              		@ frame_needed = 0, uses_anonymous_args = 0
 235              		@ link register save eliminated.
 281:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	/* Set a PendSV to request a context switch. */
 282:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	*( portNVIC_INT_CTRL ) = portNVIC_PENDSVSET;
 236              		.loc 1 282 0
 237 0000 8022     		movs	r2, #128
 238 0002 5205     		lsls	r2, r2, #21
 239 0004 034B     		ldr	r3, .L18
 240 0006 1A60     		str	r2, [r3]
 283:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 284:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	/* Barriers are normally not required but do ensure the code is completely
 285:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	within the specified behaviour for the architecture. */
 286:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	__asm volatile( "dsb" );
 241              		.loc 1 286 0
 242              		.syntax divided
 243              	@ 286 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" 1
 244 0008 BFF34F8F 		dsb
 245              	@ 0 "" 2
 287:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	__asm volatile( "isb" );
 246              		.loc 1 287 0
 247              	@ 287 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" 1
 248 000c BFF36F8F 		isb
 249              	@ 0 "" 2
 288:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** }
 250              		.loc 1 288 0
 251              		.thumb
 252              		.syntax unified
 253              		@ sp needed
 254 0010 7047     		bx	lr
 255              	.L19:
 256 0012 C046     		.align	2
 257              	.L18:
 258 0014 04ED00E0 		.word	-536810236
 259              		.cfi_endproc
 260              	.LFE6:
 262              		.section	.text.vPortEnterCritical,"ax",%progbits
 263              		.align	1
 264              		.global	vPortEnterCritical
 265              		.syntax unified
 266              		.code	16
 267              		.thumb_func
 268              		.fpu softvfp
 270              	vPortEnterCritical:
 271              	.LFB7:
 289:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** /*-----------------------------------------------------------*/
 290:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 291:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** void vPortEnterCritical( void )
 292:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** {
 272              		.loc 1 292 0
 273              		.cfi_startproc
 274              		@ args = 0, pretend = 0, frame = 0
 275              		@ frame_needed = 0, uses_anonymous_args = 0
 276              		@ link register save eliminated.
 293:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****     portDISABLE_INTERRUPTS();
 277              		.loc 1 293 0
 278              		.syntax divided
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s 			page 11


 279              	@ 293 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" 1
 280 0000 72B6     		 cpsid i 
 281              	@ 0 "" 2
 294:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****     uxCriticalNesting++;
 282              		.loc 1 294 0
 283              		.thumb
 284              		.syntax unified
 285 0002 044A     		ldr	r2, .L21
 286 0004 1368     		ldr	r3, [r2]
 287 0006 0133     		adds	r3, r3, #1
 288 0008 1360     		str	r3, [r2]
 295:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	__asm volatile( "dsb" );
 289              		.loc 1 295 0
 290              		.syntax divided
 291              	@ 295 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" 1
 292 000a BFF34F8F 		dsb
 293              	@ 0 "" 2
 296:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	__asm volatile( "isb" );
 294              		.loc 1 296 0
 295              	@ 296 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" 1
 296 000e BFF36F8F 		isb
 297              	@ 0 "" 2
 297:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** }
 298              		.loc 1 297 0
 299              		.thumb
 300              		.syntax unified
 301              		@ sp needed
 302 0012 7047     		bx	lr
 303              	.L22:
 304              		.align	2
 305              	.L21:
 306 0014 00000000 		.word	.LANCHOR0
 307              		.cfi_endproc
 308              	.LFE7:
 310              		.section	.text.vPortExitCritical,"ax",%progbits
 311              		.align	1
 312              		.global	vPortExitCritical
 313              		.syntax unified
 314              		.code	16
 315              		.thumb_func
 316              		.fpu softvfp
 318              	vPortExitCritical:
 319              	.LFB8:
 298:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** /*-----------------------------------------------------------*/
 299:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 300:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** void vPortExitCritical( void )
 301:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** {
 320              		.loc 1 301 0
 321              		.cfi_startproc
 322              		@ args = 0, pretend = 0, frame = 0
 323              		@ frame_needed = 0, uses_anonymous_args = 0
 324              		@ link register save eliminated.
 302:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	configASSERT( uxCriticalNesting );
 325              		.loc 1 302 0
 326 0000 064B     		ldr	r3, .L27
 327 0002 1B68     		ldr	r3, [r3]
 328 0004 002B     		cmp	r3, #0
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s 			page 12


 329 0006 01D1     		bne	.L24
 330              		.loc 1 302 0 is_stmt 0 discriminator 1
 331              		.syntax divided
 332              	@ 302 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" 1
 333 0008 72B6     		 cpsid i 
 334              	@ 0 "" 2
 335              		.thumb
 336              		.syntax unified
 337              	.L25:
 338 000a FEE7     		b	.L25
 339              	.L24:
 303:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****     uxCriticalNesting--;
 340              		.loc 1 303 0 is_stmt 1
 341 000c 013B     		subs	r3, r3, #1
 342 000e 034A     		ldr	r2, .L27
 343 0010 1360     		str	r3, [r2]
 304:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****     if( uxCriticalNesting == 0 )
 344              		.loc 1 304 0
 345 0012 002B     		cmp	r3, #0
 346 0014 00D1     		bne	.L23
 305:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****     {
 306:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****         portENABLE_INTERRUPTS();
 347              		.loc 1 306 0
 348              		.syntax divided
 349              	@ 306 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" 1
 350 0016 62B6     		 cpsie i 
 351              	@ 0 "" 2
 352              		.thumb
 353              		.syntax unified
 354              	.L23:
 307:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****     }
 308:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** }
 355              		.loc 1 308 0
 356              		@ sp needed
 357 0018 7047     		bx	lr
 358              	.L28:
 359 001a C046     		.align	2
 360              	.L27:
 361 001c 00000000 		.word	.LANCHOR0
 362              		.cfi_endproc
 363              	.LFE8:
 365              		.section	.text.ulSetInterruptMaskFromISR,"ax",%progbits
 366              		.align	1
 367              		.global	ulSetInterruptMaskFromISR
 368              		.syntax unified
 369              		.code	16
 370              		.thumb_func
 371              		.fpu softvfp
 373              	ulSetInterruptMaskFromISR:
 374              	.LFB9:
 309:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** /*-----------------------------------------------------------*/
 310:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 311:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** uint32_t ulSetInterruptMaskFromISR( void )
 312:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** {
 375              		.loc 1 312 0
 376              		.cfi_startproc
 377              		@ Naked Function: prologue and epilogue provided by programmer.
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s 			page 13


 378              		@ args = 0, pretend = 0, frame = 0
 379              		@ frame_needed = 0, uses_anonymous_args = 0
 313:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	__asm volatile(
 380              		.loc 1 313 0
 381              		.syntax divided
 382              	@ 313 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" 1
 383 0000 EFF31080 		 mrs r0, PRIMASK	
 384 0004 72B6     	 cpsid i			
 385 0006 7047     	 bx lr				  
 386              	@ 0 "" 2
 314:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 					" mrs r0, PRIMASK	\n"
 315:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 					" cpsid i			\n"
 316:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 					" bx lr				  "
 317:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 				  );
 318:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 319:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	/* To avoid compiler warnings.  This line will never be reached. */
 320:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	return 0;
 321:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** }
 387              		.loc 1 321 0
 388              		.thumb
 389              		.syntax unified
 390 0008 0020     		movs	r0, #0
 391              		.cfi_endproc
 392              	.LFE9:
 394              		.section	.text.vClearInterruptMaskFromISR,"ax",%progbits
 395              		.align	1
 396              		.global	vClearInterruptMaskFromISR
 397              		.syntax unified
 398              		.code	16
 399              		.thumb_func
 400              		.fpu softvfp
 402              	vClearInterruptMaskFromISR:
 403              	.LFB10:
 322:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** /*-----------------------------------------------------------*/
 323:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 324:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** void vClearInterruptMaskFromISR( uint32_t ulMask )
 325:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** {
 404              		.loc 1 325 0
 405              		.cfi_startproc
 406              		@ Naked Function: prologue and epilogue provided by programmer.
 407              		@ args = 0, pretend = 0, frame = 0
 408              		@ frame_needed = 0, uses_anonymous_args = 0
 409              	.LVL9:
 326:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	__asm volatile(
 410              		.loc 1 326 0
 411              		.syntax divided
 412              	@ 326 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" 1
 413 0000 80F31088 		 msr PRIMASK, r0	
 414 0004 7047     	 bx lr				  
 415              	@ 0 "" 2
 327:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 					" msr PRIMASK, r0	\n"
 328:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 					" bx lr				  "
 329:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 				  );
 330:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 331:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	/* Just to avoid compiler warning. */
 332:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	( void ) ulMask;
 333:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** }
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s 			page 14


 416              		.loc 1 333 0
 417              		.thumb
 418              		.syntax unified
 419              		.cfi_endproc
 420              	.LFE10:
 422              		.section	.text.PendSV_Handler,"ax",%progbits
 423              		.align	1
 424              		.global	PendSV_Handler
 425              		.syntax unified
 426              		.code	16
 427              		.thumb_func
 428              		.fpu softvfp
 430              	PendSV_Handler:
 431              	.LFB11:
 334:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** /*-----------------------------------------------------------*/
 335:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 336:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** void xPortPendSVHandler( void )
 337:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** {
 432              		.loc 1 337 0
 433              		.cfi_startproc
 434              		@ Naked Function: prologue and epilogue provided by programmer.
 435              		@ args = 0, pretend = 0, frame = 0
 436              		@ frame_needed = 0, uses_anonymous_args = 0
 338:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	/* This is a naked function. */
 339:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 340:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	__asm volatile
 437              		.loc 1 340 0
 438              		.syntax divided
 439              	@ 340 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" 1
 440 0000 EFF30980 			mrs r0, psp							
 441              											
 442 0004 0E4B     		ldr	r3, pxCurrentTCBConst			
 443 0006 1A68     		ldr	r2, [r3]						
 444              											
 445 0008 2038     		sub r0, r0, #32						
 446 000a 1060     		str r0, [r2]						
 447 000c F0C0     		stmia r0!, {r4-r7}					
 448 000e 4446     	 	mov r4, r8							
 449 0010 4D46     	 	mov r5, r9							
 450 0012 5646     	 	mov r6, r10							
 451 0014 5F46     	 	mov r7, r11							
 452 0016 F0C0     	 	stmia r0!, {r4-r7}              	
 453              											
 454 0018 08B5     		push {r3, r14}						
 455 001a 72B6     		cpsid i								
 456 001c FFF7FEFF 		bl vTaskSwitchContext				
 457 0020 62B6     		cpsie i								
 458 0022 0CBC     		pop {r2, r3}						
 459              											
 460 0024 1168     		ldr r1, [r2]						
 461 0026 0868     		ldr r0, [r1]						
 462 0028 1030     		add r0, r0, #16						
 463 002a F0C8     		ldmia r0!, {r4-r7}					
 464 002c A046     	 	mov r8, r4							
 465 002e A946     	 	mov r9, r5							
 466 0030 B246     	 	mov r10, r6							
 467 0032 BB46     	 	mov r11, r7							
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s 			page 15


 468              											
 469 0034 80F30988 		msr psp, r0							
 470              											
 471 0038 2038     		sub r0, r0, #32						
 472 003a F0C8     	 	ldmia r0!, {r4-r7}              	
 473              											
 474 003c 1847     		bx r3								
 475              											
 476 003e C046     		.align 4							
 477 0040 00000000 	pxCurrentTCBConst: .word pxCurrentTCB	  
 478              	@ 0 "" 2
 341:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	(
 342:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	"	mrs r0, psp							\n"
 343:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	"										\n"
 344:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	"	ldr	r3, pxCurrentTCBConst			\n" /* Get the location of the current TCB. */
 345:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	"	ldr	r2, [r3]						\n"
 346:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	"										\n"
 347:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	"	sub r0, r0, #32						\n" /* Make space for the remaining low registers. */
 348:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	"	str r0, [r2]						\n" /* Save the new top of stack. */
 349:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	"	stmia r0!, {r4-r7}					\n" /* Store the low registers that are not saved automatically. */
 350:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	" 	mov r4, r8							\n" /* Store the high registers. */
 351:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	" 	mov r5, r9							\n"
 352:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	" 	mov r6, r10							\n"
 353:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	" 	mov r7, r11							\n"
 354:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	" 	stmia r0!, {r4-r7}              	\n"
 355:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	"										\n"
 356:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	"	push {r3, r14}						\n"
 357:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	"	cpsid i								\n"
 358:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	"	bl vTaskSwitchContext				\n"
 359:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	"	cpsie i								\n"
 360:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	"	pop {r2, r3}						\n" /* lr goes in r3. r2 now holds tcb pointer. */
 361:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	"										\n"
 362:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	"	ldr r1, [r2]						\n"
 363:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	"	ldr r0, [r1]						\n" /* The first item in pxCurrentTCB is the task top of stack. */
 364:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	"	add r0, r0, #16						\n" /* Move to the high registers. */
 365:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	"	ldmia r0!, {r4-r7}					\n" /* Pop the high registers. */
 366:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	" 	mov r8, r4							\n"
 367:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	" 	mov r9, r5							\n"
 368:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	" 	mov r10, r6							\n"
 369:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	" 	mov r11, r7							\n"
 370:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	"										\n"
 371:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	"	msr psp, r0							\n" /* Remember the new top of stack for the task. */
 372:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	"										\n"
 373:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	"	sub r0, r0, #32						\n" /* Go back for the low registers that are not automatically restored. *
 374:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	" 	ldmia r0!, {r4-r7}              	\n" /* Pop low registers.  */
 375:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	"										\n"
 376:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	"	bx r3								\n"
 377:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	"										\n"
 378:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	"	.align 4							\n"
 379:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	"pxCurrentTCBConst: .word pxCurrentTCB	  "
 380:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	);
 381:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** }
 479              		.loc 1 381 0
 480              		.thumb
 481              		.syntax unified
 482              		.cfi_endproc
 483              	.LFE11:
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s 			page 16


 485              		.section	.text.xPortSysTickHandler,"ax",%progbits
 486              		.align	1
 487              		.global	xPortSysTickHandler
 488              		.syntax unified
 489              		.code	16
 490              		.thumb_func
 491              		.fpu softvfp
 493              	xPortSysTickHandler:
 494              	.LFB12:
 382:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** /*-----------------------------------------------------------*/
 383:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 384:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** void xPortSysTickHandler( void )
 385:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** {
 495              		.loc 1 385 0
 496              		.cfi_startproc
 497              		@ args = 0, pretend = 0, frame = 0
 498              		@ frame_needed = 0, uses_anonymous_args = 0
 499 0000 10B5     		push	{r4, lr}
 500              	.LCFI1:
 501              		.cfi_def_cfa_offset 8
 502              		.cfi_offset 4, -8
 503              		.cfi_offset 14, -4
 386:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** uint32_t ulPreviousMask;
 387:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 388:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	ulPreviousMask = portSET_INTERRUPT_MASK_FROM_ISR();
 504              		.loc 1 388 0
 505 0002 FFF7FEFF 		bl	ulSetInterruptMaskFromISR
 506              	.LVL10:
 507 0006 0400     		movs	r4, r0
 508              	.LVL11:
 389:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	{
 390:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 		/* Increment the RTOS tick. */
 391:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 		if( xTaskIncrementTick() != pdFALSE )
 509              		.loc 1 391 0
 510 0008 FFF7FEFF 		bl	xTaskIncrementTick
 511              	.LVL12:
 512 000c 0028     		cmp	r0, #0
 513 000e 03D0     		beq	.L33
 392:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 		{
 393:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 			/* Pend a context switch. */
 394:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 			*(portNVIC_INT_CTRL) = portNVIC_PENDSVSET;
 514              		.loc 1 394 0
 515 0010 8022     		movs	r2, #128
 516 0012 5205     		lsls	r2, r2, #21
 517 0014 024B     		ldr	r3, .L34
 518 0016 1A60     		str	r2, [r3]
 519              	.L33:
 395:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 		}
 396:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	}
 397:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( ulPreviousMask );
 520              		.loc 1 397 0
 521 0018 2000     		movs	r0, r4
 522 001a FFF7FEFF 		bl	vClearInterruptMaskFromISR
 523              	.LVL13:
 398:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** }
 524              		.loc 1 398 0
 525              		@ sp needed
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s 			page 17


 526              	.LVL14:
 527 001e 10BD     		pop	{r4, pc}
 528              	.L35:
 529              		.align	2
 530              	.L34:
 531 0020 04ED00E0 		.word	-536810236
 532              		.cfi_endproc
 533              	.LFE12:
 535              		.global	__aeabi_uidiv
 536              		.section	.text.vPortSetupTimerInterrupt,"ax",%progbits
 537              		.align	1
 538              		.weak	vPortSetupTimerInterrupt
 539              		.syntax unified
 540              		.code	16
 541              		.thumb_func
 542              		.fpu softvfp
 544              	vPortSetupTimerInterrupt:
 545              	.LFB13:
 399:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** /*-----------------------------------------------------------*/
 400:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 401:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** #if configUSE_TICKLESS_IDLE == 1
 402:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 403:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	__attribute__((weak)) void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime )
 404:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	{
 405:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	uint32_t ulReloadValue, ulCompleteTickPeriods, ulCompletedSysTickDecrements, ulSysTickCTRL;
 406:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	TickType_t xModifiableIdleTime;
 407:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 408:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 		/* Make sure the SysTick reload value does not overflow the counter. */
 409:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 		if( xExpectedIdleTime > xMaximumPossibleSuppressedTicks )
 410:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 		{
 411:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 			xExpectedIdleTime = xMaximumPossibleSuppressedTicks;
 412:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 		}
 413:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 414:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 		/* Stop the SysTick momentarily.  The time the SysTick is stopped for
 415:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 		is accounted for as best it can be, but using the tickless mode will
 416:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 		inevitably result in some tiny drift of the time maintained by the
 417:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 		kernel with respect to calendar time. */
 418:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 		portNVIC_SYSTICK_CTRL &= ~portNVIC_SYSTICK_ENABLE;
 419:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 420:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 		/* Calculate the reload value required to wait xExpectedIdleTime
 421:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 		tick periods.  -1 is used because this code will execute part way
 422:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 		through one of the tick periods. */
 423:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 		ulReloadValue = portNVIC_SYSTICK_CURRENT_VALUE + ( ulTimerCountsForOneTick * ( xExpectedIdleTime 
 424:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 		if( ulReloadValue > ulStoppedTimerCompensation )
 425:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 		{
 426:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 			ulReloadValue -= ulStoppedTimerCompensation;
 427:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 		}
 428:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 429:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 		/* Enter a critical section but don't use the taskENTER_CRITICAL()
 430:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 		method as that will mask interrupts that should exit sleep mode. */
 431:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 		__asm volatile( "cpsid i" );
 432:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 433:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 		/* If a context switch is pending or a task is waiting for the scheduler
 434:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 		to be unsuspended then abandon the low power entry. */
 435:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 		if( eTaskConfirmSleepModeStatus() == eAbortSleep )
 436:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 		{
 437:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 			/* Restart from whatever is left in the count register to complete
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s 			page 18


 438:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 			this tick period. */
 439:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 			portNVIC_SYSTICK_LOAD = portNVIC_SYSTICK_CURRENT_VALUE;
 440:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 441:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 			/* Restart SysTick. */
 442:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 			portNVIC_SYSTICK_CTRL |= portNVIC_SYSTICK_ENABLE;
 443:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 444:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 			/* Reset the reload register to the value required for normal tick
 445:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 			periods. */
 446:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 			portNVIC_SYSTICK_LOAD = ulTimerCountsForOneTick - 1UL;
 447:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 448:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 			/* Re-enable interrupts - see comments above the cpsid instruction()
 449:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 			above. */
 450:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 			__asm volatile( "cpsie i" );
 451:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 		}
 452:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 		else
 453:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 		{
 454:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 			/* Set the new reload value. */
 455:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 			portNVIC_SYSTICK_LOAD = ulReloadValue;
 456:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 457:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 			/* Clear the SysTick count flag and set the count value back to
 458:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 			zero. */
 459:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 			portNVIC_SYSTICK_CURRENT_VALUE = 0UL;
 460:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 461:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 			/* Restart SysTick. */
 462:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 			portNVIC_SYSTICK_CTRL |= portNVIC_SYSTICK_ENABLE;
 463:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 464:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 			/* Sleep until something happens.  configPRE_SLEEP_PROCESSING() can
 465:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 			set its parameter to 0 to indicate that its implementation contains
 466:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 			its own wait for interrupt or wait for event instruction, and so wfi
 467:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 			should not be executed again.  However, the original expected idle
 468:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 			time variable must remain unmodified, so a copy is taken. */
 469:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 			xModifiableIdleTime = xExpectedIdleTime;
 470:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 			configPRE_SLEEP_PROCESSING( &xModifiableIdleTime );
 471:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 			if( xModifiableIdleTime > 0 )
 472:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 			{
 473:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 				__asm volatile( "dsb" );
 474:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 				__asm volatile( "wfi" );
 475:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 				__asm volatile( "isb" );
 476:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 			}
 477:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 			configPOST_SLEEP_PROCESSING( &xExpectedIdleTime );
 478:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 479:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 			/* Stop SysTick.  Again, the time the SysTick is stopped for is
 480:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 			accounted for as best it can be, but using the tickless mode will
 481:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 			inevitably result in some tiny drift of the time maintained by the
 482:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 			kernel with respect to calendar time. */
 483:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 			ulSysTickCTRL = portNVIC_SYSTICK_CTRL;
 484:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 			portNVIC_SYSTICK_CTRL = ( ulSysTickCTRL & ~portNVIC_SYSTICK_ENABLE );
 485:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 486:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 			/* Re-enable interrupts - see comments above the cpsid instruction()
 487:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 			above. */
 488:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 			__asm volatile( "cpsie i" );
 489:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 490:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 			if( ( ulSysTickCTRL & portNVIC_SYSTICK_COUNT_FLAG ) != 0 )
 491:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 			{
 492:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 				uint32_t ulCalculatedLoadValue;
 493:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 494:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 				/* The tick interrupt has already executed, and the SysTick
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s 			page 19


 495:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 				count reloaded with ulReloadValue.  Reset the
 496:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 				portNVIC_SYSTICK_LOAD with whatever remains of this tick
 497:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 				period. */
 498:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 				ulCalculatedLoadValue = ( ulTimerCountsForOneTick - 1UL ) - ( ulReloadValue - portNVIC_SYSTICK_
 499:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 500:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 				/* Don't allow a tiny value, or values that have somehow
 501:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 				underflowed because the post sleep hook did something
 502:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 				that took too long. */
 503:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 				if( ( ulCalculatedLoadValue < ulStoppedTimerCompensation ) || ( ulCalculatedLoadValue > ulTimer
 504:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 				{
 505:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 					ulCalculatedLoadValue = ( ulTimerCountsForOneTick - 1UL );
 506:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 				}
 507:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 508:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 				portNVIC_SYSTICK_LOAD = ulCalculatedLoadValue;
 509:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 510:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 				/* The tick interrupt handler will already have pended the tick
 511:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 				processing in the kernel.  As the pending tick will be
 512:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 				processed as soon as this function exits, the tick value
 513:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 				maintained by the tick is stepped forward by one less than the
 514:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 				time spent waiting. */
 515:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 				ulCompleteTickPeriods = xExpectedIdleTime - 1UL;
 516:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 			}
 517:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 			else
 518:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 			{
 519:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 				/* Something other than the tick interrupt ended the sleep.
 520:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 				Work out how long the sleep lasted rounded to complete tick
 521:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 				periods (not the ulReload value which accounted for part
 522:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 				ticks). */
 523:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 				ulCompletedSysTickDecrements = ( xExpectedIdleTime * ulTimerCountsForOneTick ) - portNVIC_SYSTI
 524:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 525:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 				/* How many complete tick periods passed while the processor
 526:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 				was waiting? */
 527:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 				ulCompleteTickPeriods = ulCompletedSysTickDecrements / ulTimerCountsForOneTick;
 528:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 529:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 				/* The reload value is set to whatever fraction of a single tick
 530:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 				period remains. */
 531:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 				portNVIC_SYSTICK_LOAD = ( ( ulCompleteTickPeriods + 1 ) * ulTimerCountsForOneTick ) - ulComplet
 532:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 			}
 533:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 534:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 			/* Restart SysTick so it runs from portNVIC_SYSTICK_LOAD
 535:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 			again, then set portNVIC_SYSTICK_LOAD back to its standard
 536:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 			value.  The critical section is used to ensure the tick interrupt
 537:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 			can only execute once in the case that the reload register is near
 538:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 			zero. */
 539:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 			portNVIC_SYSTICK_CURRENT_VALUE = 0UL;
 540:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 			portENTER_CRITICAL();
 541:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 			{
 542:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 				portNVIC_SYSTICK_CTRL |= portNVIC_SYSTICK_ENABLE;
 543:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 				vTaskStepTick( ulCompleteTickPeriods );
 544:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 				portNVIC_SYSTICK_LOAD = ulTimerCountsForOneTick - 1UL;
 545:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 			}
 546:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 			portEXIT_CRITICAL();
 547:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 		}
 548:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	}
 549:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 550:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** #endif /* #if configUSE_TICKLESS_IDLE */
 551:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s 			page 20


 552:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 553:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** /*
 554:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****  * Setup the systick timer to generate the tick interrupts at the required
 555:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****  * frequency.
 556:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c ****  */
 557:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** __attribute__(( weak )) void vPortSetupTimerInterrupt( void )
 558:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** {
 546              		.loc 1 558 0
 547              		.cfi_startproc
 548              		@ args = 0, pretend = 0, frame = 0
 549              		@ frame_needed = 0, uses_anonymous_args = 0
 550 0000 10B5     		push	{r4, lr}
 551              	.LCFI2:
 552              		.cfi_def_cfa_offset 8
 553              		.cfi_offset 4, -8
 554              		.cfi_offset 14, -4
 559:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	/* Calculate the constants required to configure the tick interrupt. */
 560:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	#if configUSE_TICKLESS_IDLE == 1
 561:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	{
 562:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 		ulTimerCountsForOneTick = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ );
 563:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 		xMaximumPossibleSuppressedTicks = portMAX_24_BIT_NUMBER / ulTimerCountsForOneTick;
 564:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 		ulStoppedTimerCompensation = portMISSED_COUNTS_FACTOR / ( configCPU_CLOCK_HZ / configSYSTICK_CLOC
 565:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	}
 566:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	#endif /* configUSE_TICKLESS_IDLE */
 567:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	/* Configure SysTick to interrupt at the requested rate. */
 568:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 569:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	portNVIC_SYSTICK_LOAD = ( configCPU_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 555              		.loc 1 569 0
 556 0002 064B     		ldr	r3, .L37
 557 0004 1868     		ldr	r0, [r3]
 558 0006 FA21     		movs	r1, #250
 559 0008 8900     		lsls	r1, r1, #2
 560 000a FFF7FEFF 		bl	__aeabi_uidiv
 561              	.LVL15:
 562 000e 0138     		subs	r0, r0, #1
 563 0010 034B     		ldr	r3, .L37+4
 564 0012 1860     		str	r0, [r3]
 570:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	portNVIC_SYSTICK_CTRL = portNVIC_SYSTICK_CLK | portNVIC_SYSTICK_INT | portNVIC_SYSTICK_ENABLE;
 565              		.loc 1 570 0
 566 0014 0722     		movs	r2, #7
 567 0016 034B     		ldr	r3, .L37+8
 568 0018 1A60     		str	r2, [r3]
 571:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** }
 569              		.loc 1 571 0
 570              		@ sp needed
 571 001a 10BD     		pop	{r4, pc}
 572              	.L38:
 573              		.align	2
 574              	.L37:
 575 001c 00000000 		.word	SystemCoreClock
 576 0020 14E000E0 		.word	-536813548
 577 0024 10E000E0 		.word	-536813552
 578              		.cfi_endproc
 579              	.LFE13:
 581              		.section	.text.xPortStartScheduler,"ax",%progbits
 582              		.align	1
 583              		.global	xPortStartScheduler
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s 			page 21


 584              		.syntax unified
 585              		.code	16
 586              		.thumb_func
 587              		.fpu softvfp
 589              	xPortStartScheduler:
 590              	.LFB4:
 245:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	/* Make PendSV, CallSV and SysTick the same priroity as the kernel. */
 591              		.loc 1 245 0
 592              		.cfi_startproc
 593              		@ Volatile: function does not return.
 594              		@ args = 0, pretend = 0, frame = 0
 595              		@ frame_needed = 0, uses_anonymous_args = 0
 596 0000 10B5     		push	{r4, lr}
 597              	.LCFI3:
 598              		.cfi_def_cfa_offset 8
 599              		.cfi_offset 4, -8
 600              		.cfi_offset 14, -4
 247:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 	*(portNVIC_SYSPRI2) |= portNVIC_SYSTICK_PRI;
 601              		.loc 1 247 0
 602 0002 0A4B     		ldr	r3, .L40
 603 0004 1968     		ldr	r1, [r3]
 604 0006 FF22     		movs	r2, #255
 605 0008 1204     		lsls	r2, r2, #16
 606 000a 0A43     		orrs	r2, r1
 607 000c 1A60     		str	r2, [r3]
 248:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 608              		.loc 1 248 0
 609 000e 1968     		ldr	r1, [r3]
 610 0010 FF22     		movs	r2, #255
 611 0012 1206     		lsls	r2, r2, #24
 612 0014 0A43     		orrs	r2, r1
 613 0016 1A60     		str	r2, [r3]
 252:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 614              		.loc 1 252 0
 615 0018 FFF7FEFF 		bl	vPortSetupTimerInterrupt
 616              	.LVL16:
 255:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 617              		.loc 1 255 0
 618 001c 0022     		movs	r2, #0
 619 001e 044B     		ldr	r3, .L40+4
 620 0020 1A60     		str	r2, [r3]
 258:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 621              		.loc 1 258 0
 622 0022 FFF7FEFF 		bl	vPortStartFirstTask
 623              	.LVL17:
 264:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c **** 
 624              		.loc 1 264 0
 625 0026 FFF7FEFF 		bl	prvTaskExitError
 626              	.LVL18:
 627              	.L41:
 628 002a C046     		.align	2
 629              	.L40:
 630 002c 20ED00E0 		.word	-536810208
 631 0030 00000000 		.word	.LANCHOR0
 632              		.cfi_endproc
 633              	.LFE4:
 635              		.section	.data.uxCriticalNesting,"aw",%progbits
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s 			page 22


 636              		.align	2
 637              		.set	.LANCHOR0,. + 0
 640              	uxCriticalNesting:
 641 0000 AAAAAAAA 		.word	-1431655766
 642              		.text
 643              	.Letext0:
 644              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q1-update\\arm-none-eabi\\include
 645              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q1-update\\arm-none-eabi\\include
 646              		.file 4 "Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h"
 647              		.file 5 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/portmacro.h"
 648              		.file 6 "Inc/FreeRTOSConfig.h"
 649              		.file 7 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
ARM GAS  C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s 			page 23


DEFINED SYMBOLS
                            *ABS*:00000000 port.c
C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s:16     .text.prvTaskExitError:00000000 $t
C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s:22     .text.prvTaskExitError:00000000 prvTaskExitError
C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s:58     .text.prvTaskExitError:00000010 $d
C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s:63     .text.vPortStartFirstTask:00000000 $t
C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s:69     .text.vPortStartFirstTask:00000000 vPortStartFirstTask
C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s:95     .text.vPortStartFirstTask:00000030 pxCurrentTCBConst2
C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s:95     .text.vPortStartFirstTask:00000030 $d
C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s:104    .text.pxPortInitialiseStack:00000000 $t
C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s:111    .text.pxPortInitialiseStack:00000000 pxPortInitialiseStack
C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s:154    .text.pxPortInitialiseStack:0000001c $d
C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s:159    .text.SVC_Handler:00000000 $t
C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s:166    .text.SVC_Handler:00000000 SVC_Handler
C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s:180    .text.vPortEndScheduler:00000000 $t
C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s:187    .text.vPortEndScheduler:00000000 vPortEndScheduler
C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s:217    .text.vPortEndScheduler:00000014 $d
C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s:222    .text.vPortYield:00000000 $t
C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s:229    .text.vPortYield:00000000 vPortYield
C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s:258    .text.vPortYield:00000014 $d
C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s:263    .text.vPortEnterCritical:00000000 $t
C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s:270    .text.vPortEnterCritical:00000000 vPortEnterCritical
C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s:306    .text.vPortEnterCritical:00000014 $d
C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s:311    .text.vPortExitCritical:00000000 $t
C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s:318    .text.vPortExitCritical:00000000 vPortExitCritical
C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s:361    .text.vPortExitCritical:0000001c $d
C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s:366    .text.ulSetInterruptMaskFromISR:00000000 $t
C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s:373    .text.ulSetInterruptMaskFromISR:00000000 ulSetInterruptMaskFromISR
C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s:395    .text.vClearInterruptMaskFromISR:00000000 $t
C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s:402    .text.vClearInterruptMaskFromISR:00000000 vClearInterruptMaskFromISR
C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s:423    .text.PendSV_Handler:00000000 $t
C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s:430    .text.PendSV_Handler:00000000 PendSV_Handler
C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s:477    .text.PendSV_Handler:00000040 pxCurrentTCBConst
C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s:477    .text.PendSV_Handler:00000040 $d
C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s:486    .text.xPortSysTickHandler:00000000 $t
C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s:493    .text.xPortSysTickHandler:00000000 xPortSysTickHandler
C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s:531    .text.xPortSysTickHandler:00000020 $d
C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s:537    .text.vPortSetupTimerInterrupt:00000000 $t
C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s:544    .text.vPortSetupTimerInterrupt:00000000 vPortSetupTimerInterrupt
C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s:575    .text.vPortSetupTimerInterrupt:0000001c $d
C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s:582    .text.xPortStartScheduler:00000000 $t
C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s:589    .text.xPortStartScheduler:00000000 xPortStartScheduler
C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s:630    .text.xPortStartScheduler:0000002c $d
C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s:636    .data.uxCriticalNesting:00000000 $d
C:\Users\Raj\AppData\Local\Temp\ccidzFLq.s:640    .data.uxCriticalNesting:00000000 uxCriticalNesting
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
pxCurrentTCB
vTaskSwitchContext
xTaskIncrementTick
__aeabi_uidiv
SystemCoreClock
